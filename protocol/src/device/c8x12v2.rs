//
// This file is generated by `minidsp-devtools codegen`. DO NOT EDIT.
//
use super::*;
pub mod sym {
    #[allow(dead_code)]
    pub const MIXER_0_0_STATUS: u16 = 0;
    pub const MIXER_0_1_STATUS: u16 = 1;
    pub const MIXER_0_2_STATUS: u16 = 2;
    pub const MIXER_0_3_STATUS: u16 = 3;
    pub const MIXER_0_4_STATUS: u16 = 4;
    pub const MIXER_0_5_STATUS: u16 = 5;
    pub const MIXER_0_6_STATUS: u16 = 6;
    pub const MIXER_0_7_STATUS: u16 = 7;
    pub const MIXER_0_8_STATUS: u16 = 8;
    pub const MIXER_0_9_STATUS: u16 = 9;
    pub const MIXER_0_10_STATUS: u16 = 10;
    pub const MIXER_0_11_STATUS: u16 = 11;
    pub const MIXER_1_0_STATUS: u16 = 12;
    pub const MIXER_1_1_STATUS: u16 = 13;
    pub const MIXER_1_2_STATUS: u16 = 14;
    pub const MIXER_1_3_STATUS: u16 = 15;
    pub const MIXER_1_4_STATUS: u16 = 16;
    pub const MIXER_1_5_STATUS: u16 = 17;
    pub const MIXER_1_6_STATUS: u16 = 18;
    pub const MIXER_1_7_STATUS: u16 = 19;
    pub const MIXER_1_8_STATUS: u16 = 20;
    pub const MIXER_1_9_STATUS: u16 = 21;
    pub const MIXER_1_10_STATUS: u16 = 22;
    pub const MIXER_1_11_STATUS: u16 = 23;
    pub const MIXER_2_0_STATUS: u16 = 24;
    pub const MIXER_2_1_STATUS: u16 = 25;
    pub const MIXER_2_2_STATUS: u16 = 26;
    pub const MIXER_2_3_STATUS: u16 = 27;
    pub const MIXER_2_4_STATUS: u16 = 28;
    pub const MIXER_2_5_STATUS: u16 = 29;
    pub const MIXER_2_6_STATUS: u16 = 30;
    pub const MIXER_2_7_STATUS: u16 = 31;
    pub const MIXER_2_8_STATUS: u16 = 32;
    pub const MIXER_2_9_STATUS: u16 = 33;
    pub const MIXER_2_10_STATUS: u16 = 34;
    pub const MIXER_2_11_STATUS: u16 = 35;
    pub const MIXER_3_0_STATUS: u16 = 36;
    pub const MIXER_3_1_STATUS: u16 = 37;
    pub const MIXER_3_2_STATUS: u16 = 38;
    pub const MIXER_3_3_STATUS: u16 = 39;
    pub const MIXER_3_4_STATUS: u16 = 40;
    pub const MIXER_3_5_STATUS: u16 = 41;
    pub const MIXER_3_6_STATUS: u16 = 42;
    pub const MIXER_3_7_STATUS: u16 = 43;
    pub const MIXER_3_8_STATUS: u16 = 44;
    pub const MIXER_3_9_STATUS: u16 = 45;
    pub const MIXER_3_10_STATUS: u16 = 46;
    pub const MIXER_3_11_STATUS: u16 = 47;
    pub const MIXER_4_0_STATUS: u16 = 48;
    pub const MIXER_4_1_STATUS: u16 = 49;
    pub const MIXER_4_2_STATUS: u16 = 50;
    pub const MIXER_4_3_STATUS: u16 = 51;
    pub const MIXER_4_4_STATUS: u16 = 52;
    pub const MIXER_4_5_STATUS: u16 = 53;
    pub const MIXER_4_6_STATUS: u16 = 54;
    pub const MIXER_4_7_STATUS: u16 = 55;
    pub const MIXER_4_8_STATUS: u16 = 56;
    pub const MIXER_4_9_STATUS: u16 = 57;
    pub const MIXER_4_10_STATUS: u16 = 58;
    pub const MIXER_4_11_STATUS: u16 = 59;
    pub const MIXER_5_0_STATUS: u16 = 60;
    pub const MIXER_5_1_STATUS: u16 = 61;
    pub const MIXER_5_2_STATUS: u16 = 62;
    pub const MIXER_5_3_STATUS: u16 = 63;
    pub const MIXER_5_4_STATUS: u16 = 64;
    pub const MIXER_5_5_STATUS: u16 = 65;
    pub const MIXER_5_6_STATUS: u16 = 66;
    pub const MIXER_5_7_STATUS: u16 = 67;
    pub const MIXER_5_8_STATUS: u16 = 68;
    pub const MIXER_5_9_STATUS: u16 = 69;
    pub const MIXER_5_10_STATUS: u16 = 70;
    pub const MIXER_5_11_STATUS: u16 = 71;
    pub const MIXER_6_0_STATUS: u16 = 72;
    pub const MIXER_6_1_STATUS: u16 = 73;
    pub const MIXER_6_2_STATUS: u16 = 74;
    pub const MIXER_6_3_STATUS: u16 = 75;
    pub const MIXER_6_4_STATUS: u16 = 76;
    pub const MIXER_6_5_STATUS: u16 = 77;
    pub const MIXER_6_6_STATUS: u16 = 78;
    pub const MIXER_6_7_STATUS: u16 = 79;
    pub const MIXER_6_8_STATUS: u16 = 80;
    pub const MIXER_6_9_STATUS: u16 = 81;
    pub const MIXER_6_10_STATUS: u16 = 82;
    pub const MIXER_6_11_STATUS: u16 = 83;
    pub const MIXER_7_0_STATUS: u16 = 84;
    pub const MIXER_7_1_STATUS: u16 = 85;
    pub const MIXER_7_2_STATUS: u16 = 86;
    pub const MIXER_7_3_STATUS: u16 = 87;
    pub const MIXER_7_4_STATUS: u16 = 88;
    pub const MIXER_7_5_STATUS: u16 = 89;
    pub const MIXER_7_6_STATUS: u16 = 90;
    pub const MIXER_7_7_STATUS: u16 = 91;
    pub const MIXER_7_8_STATUS: u16 = 92;
    pub const MIXER_7_9_STATUS: u16 = 93;
    pub const MIXER_7_10_STATUS: u16 = 94;
    pub const MIXER_7_11_STATUS: u16 = 95;
    pub const MIXER_0_0: u16 = 96;
    pub const MIXER_0_1: u16 = 97;
    pub const MIXER_0_2: u16 = 98;
    pub const MIXER_0_3: u16 = 99;
    pub const MIXER_0_4: u16 = 100;
    pub const MIXER_0_5: u16 = 101;
    pub const MIXER_0_6: u16 = 102;
    pub const MIXER_0_7: u16 = 103;
    pub const MIXER_0_8: u16 = 104;
    pub const MIXER_0_9: u16 = 105;
    pub const MIXER_0_10: u16 = 106;
    pub const MIXER_0_11: u16 = 107;
    pub const MIXER_1_0: u16 = 108;
    pub const MIXER_1_1: u16 = 109;
    pub const MIXER_1_2: u16 = 110;
    pub const MIXER_1_3: u16 = 111;
    pub const MIXER_1_4: u16 = 112;
    pub const MIXER_1_5: u16 = 113;
    pub const MIXER_1_6: u16 = 114;
    pub const MIXER_1_7: u16 = 115;
    pub const MIXER_1_8: u16 = 116;
    pub const MIXER_1_9: u16 = 117;
    pub const MIXER_1_10: u16 = 118;
    pub const MIXER_1_11: u16 = 119;
    pub const MIXER_2_0: u16 = 120;
    pub const MIXER_2_1: u16 = 121;
    pub const MIXER_2_2: u16 = 122;
    pub const MIXER_2_3: u16 = 123;
    pub const MIXER_2_4: u16 = 124;
    pub const MIXER_2_5: u16 = 125;
    pub const MIXER_2_6: u16 = 126;
    pub const MIXER_2_7: u16 = 127;
    pub const MIXER_2_8: u16 = 128;
    pub const MIXER_2_9: u16 = 129;
    pub const MIXER_2_10: u16 = 130;
    pub const MIXER_2_11: u16 = 131;
    pub const MIXER_3_0: u16 = 132;
    pub const MIXER_3_1: u16 = 133;
    pub const MIXER_3_2: u16 = 134;
    pub const MIXER_3_3: u16 = 135;
    pub const MIXER_3_4: u16 = 136;
    pub const MIXER_3_5: u16 = 137;
    pub const MIXER_3_6: u16 = 138;
    pub const MIXER_3_7: u16 = 139;
    pub const MIXER_3_8: u16 = 140;
    pub const MIXER_3_9: u16 = 141;
    pub const MIXER_3_10: u16 = 142;
    pub const MIXER_3_11: u16 = 143;
    pub const MIXER_4_0: u16 = 144;
    pub const MIXER_4_1: u16 = 145;
    pub const MIXER_4_2: u16 = 146;
    pub const MIXER_4_3: u16 = 147;
    pub const MIXER_4_4: u16 = 148;
    pub const MIXER_4_5: u16 = 149;
    pub const MIXER_4_6: u16 = 150;
    pub const MIXER_4_7: u16 = 151;
    pub const MIXER_4_8: u16 = 152;
    pub const MIXER_4_9: u16 = 153;
    pub const MIXER_4_10: u16 = 154;
    pub const MIXER_4_11: u16 = 155;
    pub const MIXER_5_0: u16 = 156;
    pub const MIXER_5_1: u16 = 157;
    pub const MIXER_5_2: u16 = 158;
    pub const MIXER_5_3: u16 = 159;
    pub const MIXER_5_4: u16 = 160;
    pub const MIXER_5_5: u16 = 161;
    pub const MIXER_5_6: u16 = 162;
    pub const MIXER_5_7: u16 = 163;
    pub const MIXER_5_8: u16 = 164;
    pub const MIXER_5_9: u16 = 165;
    pub const MIXER_5_10: u16 = 166;
    pub const MIXER_5_11: u16 = 167;
    pub const MIXER_6_0: u16 = 168;
    pub const MIXER_6_1: u16 = 169;
    pub const MIXER_6_2: u16 = 170;
    pub const MIXER_6_3: u16 = 171;
    pub const MIXER_6_4: u16 = 172;
    pub const MIXER_6_5: u16 = 173;
    pub const MIXER_6_6: u16 = 174;
    pub const MIXER_6_7: u16 = 175;
    pub const MIXER_6_8: u16 = 176;
    pub const MIXER_6_9: u16 = 177;
    pub const MIXER_6_10: u16 = 178;
    pub const MIXER_6_11: u16 = 179;
    pub const MIXER_7_0: u16 = 180;
    pub const MIXER_7_1: u16 = 181;
    pub const MIXER_7_2: u16 = 182;
    pub const MIXER_7_3: u16 = 183;
    pub const MIXER_7_4: u16 = 184;
    pub const MIXER_7_5: u16 = 185;
    pub const MIXER_7_6: u16 = 186;
    pub const MIXER_7_7: u16 = 187;
    pub const MIXER_7_8: u16 = 188;
    pub const MIXER_7_9: u16 = 189;
    pub const MIXER_7_10: u16 = 190;
    pub const MIXER_7_11: u16 = 191;
    pub const MIXER_0_0_POL: u16 = 192;
    pub const MIXER_0_1_POL: u16 = 193;
    pub const MIXER_0_2_POL: u16 = 194;
    pub const MIXER_0_3_POL: u16 = 195;
    pub const MIXER_0_4_POL: u16 = 196;
    pub const MIXER_0_5_POL: u16 = 197;
    pub const MIXER_0_6_POL: u16 = 198;
    pub const MIXER_0_7_POL: u16 = 199;
    pub const MIXER_0_8_POL: u16 = 200;
    pub const MIXER_0_9_POL: u16 = 201;
    pub const MIXER_0_10_POL: u16 = 202;
    pub const MIXER_0_11_POL: u16 = 203;
    pub const MIXER_1_0_POL: u16 = 204;
    pub const MIXER_1_1_POL: u16 = 205;
    pub const MIXER_1_2_POL: u16 = 206;
    pub const MIXER_1_3_POL: u16 = 207;
    pub const MIXER_1_4_POL: u16 = 208;
    pub const MIXER_1_5_POL: u16 = 209;
    pub const MIXER_1_6_POL: u16 = 210;
    pub const MIXER_1_7_POL: u16 = 211;
    pub const MIXER_1_8_POL: u16 = 212;
    pub const MIXER_1_9_POL: u16 = 213;
    pub const MIXER_1_10_POL: u16 = 214;
    pub const MIXER_1_11_POL: u16 = 215;
    pub const MIXER_2_0_POL: u16 = 216;
    pub const MIXER_2_1_POL: u16 = 217;
    pub const MIXER_2_2_POL: u16 = 218;
    pub const MIXER_2_3_POL: u16 = 219;
    pub const MIXER_2_4_POL: u16 = 220;
    pub const MIXER_2_5_POL: u16 = 221;
    pub const MIXER_2_6_POL: u16 = 222;
    pub const MIXER_2_7_POL: u16 = 223;
    pub const MIXER_2_8_POL: u16 = 224;
    pub const MIXER_2_9_POL: u16 = 225;
    pub const MIXER_2_10_POL: u16 = 226;
    pub const MIXER_2_11_POL: u16 = 227;
    pub const MIXER_3_0_POL: u16 = 228;
    pub const MIXER_3_1_POL: u16 = 229;
    pub const MIXER_3_2_POL: u16 = 230;
    pub const MIXER_3_3_POL: u16 = 231;
    pub const MIXER_3_4_POL: u16 = 232;
    pub const MIXER_3_5_POL: u16 = 233;
    pub const MIXER_3_6_POL: u16 = 234;
    pub const MIXER_3_7_POL: u16 = 235;
    pub const MIXER_3_8_POL: u16 = 236;
    pub const MIXER_3_9_POL: u16 = 237;
    pub const MIXER_3_10_POL: u16 = 238;
    pub const MIXER_3_11_POL: u16 = 239;
    pub const MIXER_4_0_POL: u16 = 240;
    pub const MIXER_4_1_POL: u16 = 241;
    pub const MIXER_4_2_POL: u16 = 242;
    pub const MIXER_4_3_POL: u16 = 243;
    pub const MIXER_4_4_POL: u16 = 244;
    pub const MIXER_4_5_POL: u16 = 245;
    pub const MIXER_4_6_POL: u16 = 246;
    pub const MIXER_4_7_POL: u16 = 247;
    pub const MIXER_4_8_POL: u16 = 248;
    pub const MIXER_4_9_POL: u16 = 249;
    pub const MIXER_4_10_POL: u16 = 250;
    pub const MIXER_4_11_POL: u16 = 251;
    pub const MIXER_5_0_POL: u16 = 252;
    pub const MIXER_5_1_POL: u16 = 253;
    pub const MIXER_5_2_POL: u16 = 254;
    pub const MIXER_5_3_POL: u16 = 255;
    pub const MIXER_5_4_POL: u16 = 256;
    pub const MIXER_5_5_POL: u16 = 257;
    pub const MIXER_5_6_POL: u16 = 258;
    pub const MIXER_5_7_POL: u16 = 259;
    pub const MIXER_5_8_POL: u16 = 260;
    pub const MIXER_5_9_POL: u16 = 261;
    pub const MIXER_5_10_POL: u16 = 262;
    pub const MIXER_5_11_POL: u16 = 263;
    pub const MIXER_6_0_POL: u16 = 264;
    pub const MIXER_6_1_POL: u16 = 265;
    pub const MIXER_6_2_POL: u16 = 266;
    pub const MIXER_6_3_POL: u16 = 267;
    pub const MIXER_6_4_POL: u16 = 268;
    pub const MIXER_6_5_POL: u16 = 269;
    pub const MIXER_6_6_POL: u16 = 270;
    pub const MIXER_6_7_POL: u16 = 271;
    pub const MIXER_6_8_POL: u16 = 272;
    pub const MIXER_6_9_POL: u16 = 273;
    pub const MIXER_6_10_POL: u16 = 274;
    pub const MIXER_6_11_POL: u16 = 275;
    pub const MIXER_7_0_POL: u16 = 276;
    pub const MIXER_7_1_POL: u16 = 277;
    pub const MIXER_7_2_POL: u16 = 278;
    pub const MIXER_7_3_POL: u16 = 279;
    pub const MIXER_7_4_POL: u16 = 280;
    pub const MIXER_7_5_POL: u16 = 281;
    pub const MIXER_7_6_POL: u16 = 282;
    pub const MIXER_7_7_POL: u16 = 283;
    pub const MIXER_7_8_POL: u16 = 284;
    pub const MIXER_7_9_POL: u16 = 285;
    pub const MIXER_7_10_POL: u16 = 286;
    pub const MIXER_7_11_POL: u16 = 287;
    pub const METER_IN_1: u16 = 288;
    pub const METER_IN_2: u16 = 289;
    pub const METER_IN_3: u16 = 290;
    pub const METER_IN_4: u16 = 291;
    pub const METER_IN_5: u16 = 292;
    pub const METER_IN_6: u16 = 293;
    pub const METER_IN_7: u16 = 294;
    pub const METER_IN_8: u16 = 295;
    pub const METER_COMP_1: u16 = 296;
    pub const METER_COMP_2: u16 = 297;
    pub const METER_COMP_3: u16 = 298;
    pub const METER_COMP_4: u16 = 299;
    pub const METER_COMP_5: u16 = 300;
    pub const METER_COMP_6: u16 = 301;
    pub const METER_COMP_7: u16 = 302;
    pub const METER_COMP_8: u16 = 303;
    pub const METER_COMP_9: u16 = 304;
    pub const METER_COMP_10: u16 = 305;
    pub const METER_COMP_11: u16 = 306;
    pub const METER_COMP_12: u16 = 307;
    pub const METER_OUT_1: u16 = 308;
    pub const METER_OUT_2: u16 = 309;
    pub const METER_OUT_3: u16 = 310;
    pub const METER_OUT_4: u16 = 311;
    pub const METER_OUT_5: u16 = 312;
    pub const METER_OUT_6: u16 = 313;
    pub const METER_OUT_7: u16 = 314;
    pub const METER_OUT_8: u16 = 315;
    pub const METER_OUT_9: u16 = 316;
    pub const METER_OUT_10: u16 = 317;
    pub const METER_OUT_11: u16 = 318;
    pub const METER_OUT_12: u16 = 319;
    pub const D_GAIN_1_0_STATUS: u16 = 320;
    pub const D_GAIN_1_0: u16 = 321;
    pub const METER_1_0: u16 = 322;
    pub const POLARITY_OUT_1_0: u16 = 323;
    pub const PEQ_1_1: u16 = 324;
    pub const PEQ_1_2: u16 = 329;
    pub const PEQ_1_3: u16 = 334;
    pub const PEQ_1_4: u16 = 339;
    pub const PEQ_1_5: u16 = 344;
    pub const PEQ_1_6: u16 = 349;
    pub const PEQ_1_7: u16 = 354;
    pub const PEQ_1_8: u16 = 359;
    pub const PEQ_1_9: u16 = 364;
    pub const PEQ_1_10: u16 = 369;
    pub const D_GAIN_2_0_STATUS: u16 = 374;
    pub const D_GAIN_2_0: u16 = 375;
    pub const METER_2_0: u16 = 376;
    pub const POLARITY_OUT_2_0: u16 = 377;
    pub const PEQ_2_1: u16 = 378;
    pub const PEQ_2_2: u16 = 383;
    pub const PEQ_2_3: u16 = 388;
    pub const PEQ_2_4: u16 = 393;
    pub const PEQ_2_5: u16 = 398;
    pub const PEQ_2_6: u16 = 403;
    pub const PEQ_2_7: u16 = 408;
    pub const PEQ_2_8: u16 = 413;
    pub const PEQ_2_9: u16 = 418;
    pub const PEQ_2_10: u16 = 423;
    pub const D_GAIN_3_0_STATUS: u16 = 428;
    pub const D_GAIN_3_0: u16 = 429;
    pub const METER_3_0: u16 = 430;
    pub const POLARITY_OUT_3_0: u16 = 431;
    pub const PEQ_3_1: u16 = 432;
    pub const PEQ_3_2: u16 = 437;
    pub const PEQ_3_3: u16 = 442;
    pub const PEQ_3_4: u16 = 447;
    pub const PEQ_3_5: u16 = 452;
    pub const PEQ_3_6: u16 = 457;
    pub const PEQ_3_7: u16 = 462;
    pub const PEQ_3_8: u16 = 467;
    pub const PEQ_3_9: u16 = 472;
    pub const PEQ_3_10: u16 = 477;
    pub const D_GAIN_4_0_STATUS: u16 = 482;
    pub const D_GAIN_4_0: u16 = 483;
    pub const METER_4_0: u16 = 484;
    pub const POLARITY_OUT_4_0: u16 = 485;
    pub const PEQ_4_1: u16 = 486;
    pub const PEQ_4_2: u16 = 491;
    pub const PEQ_4_3: u16 = 496;
    pub const PEQ_4_4: u16 = 501;
    pub const PEQ_4_5: u16 = 506;
    pub const PEQ_4_6: u16 = 511;
    pub const PEQ_4_7: u16 = 516;
    pub const PEQ_4_8: u16 = 521;
    pub const PEQ_4_9: u16 = 526;
    pub const PEQ_4_10: u16 = 531;
    pub const D_GAIN_5_0_STATUS: u16 = 536;
    pub const D_GAIN_5_0: u16 = 537;
    pub const METER_5_0: u16 = 538;
    pub const POLARITY_OUT_5_0: u16 = 539;
    pub const PEQ_5_1: u16 = 540;
    pub const PEQ_5_2: u16 = 545;
    pub const PEQ_5_3: u16 = 550;
    pub const PEQ_5_4: u16 = 555;
    pub const PEQ_5_5: u16 = 560;
    pub const PEQ_5_6: u16 = 565;
    pub const PEQ_5_7: u16 = 570;
    pub const PEQ_5_8: u16 = 575;
    pub const PEQ_5_9: u16 = 580;
    pub const PEQ_5_10: u16 = 585;
    pub const D_GAIN_6_0_STATUS: u16 = 590;
    pub const D_GAIN_6_0: u16 = 591;
    pub const METER_6_0: u16 = 592;
    pub const POLARITY_OUT_6_0: u16 = 593;
    pub const PEQ_6_1: u16 = 594;
    pub const PEQ_6_2: u16 = 599;
    pub const PEQ_6_3: u16 = 604;
    pub const PEQ_6_4: u16 = 609;
    pub const PEQ_6_5: u16 = 614;
    pub const PEQ_6_6: u16 = 619;
    pub const PEQ_6_7: u16 = 624;
    pub const PEQ_6_8: u16 = 629;
    pub const PEQ_6_9: u16 = 634;
    pub const PEQ_6_10: u16 = 639;
    pub const D_GAIN_7_0_STATUS: u16 = 644;
    pub const D_GAIN_7_0: u16 = 645;
    pub const METER_7_0: u16 = 646;
    pub const POLARITY_OUT_7_0: u16 = 647;
    pub const PEQ_7_1: u16 = 648;
    pub const PEQ_7_2: u16 = 653;
    pub const PEQ_7_3: u16 = 658;
    pub const PEQ_7_4: u16 = 663;
    pub const PEQ_7_5: u16 = 668;
    pub const PEQ_7_6: u16 = 673;
    pub const PEQ_7_7: u16 = 678;
    pub const PEQ_7_8: u16 = 683;
    pub const PEQ_7_9: u16 = 688;
    pub const PEQ_7_10: u16 = 693;
    pub const D_GAIN_8_0_STATUS: u16 = 698;
    pub const D_GAIN_8_0: u16 = 699;
    pub const METER_8_0: u16 = 700;
    pub const POLARITY_OUT_8_0: u16 = 701;
    pub const PEQ_8_1: u16 = 702;
    pub const PEQ_8_2: u16 = 707;
    pub const PEQ_8_3: u16 = 712;
    pub const PEQ_8_4: u16 = 717;
    pub const PEQ_8_5: u16 = 722;
    pub const PEQ_8_6: u16 = 727;
    pub const PEQ_8_7: u16 = 732;
    pub const PEQ_8_8: u16 = 737;
    pub const PEQ_8_9: u16 = 742;
    pub const PEQ_8_10: u16 = 747;
    pub const D_GAIN_9_0_STATUS: u16 = 752;
    pub const COMP_9_0_STATUS: u16 = 753;
    pub const D_GAIN_9_0: u16 = 754;
    pub const COMP_9_0_THRESHOLD: u16 = 755;
    pub const COMP_9_0_GAIN: u16 = 756;
    pub const COMP_9_0_RATIO: u16 = 757;
    pub const COMP_9_0_KNEE: u16 = 758;
    pub const COMP_9_0_ATIME: u16 = 759;
    pub const COMP_9_0_RTIME: u16 = 760;
    pub const DELAY_9_0: u16 = 761;
    pub const METER_9_0: u16 = 762;
    pub const METER_9_1: u16 = 763;
    pub const POLARITY_OUT_9_0: u16 = 764;
    pub const PEQ_9_1: u16 = 765;
    pub const PEQ_9_2: u16 = 770;
    pub const PEQ_9_3: u16 = 775;
    pub const PEQ_9_4: u16 = 780;
    pub const PEQ_9_5: u16 = 785;
    pub const PEQ_9_6: u16 = 790;
    pub const PEQ_9_7: u16 = 795;
    pub const PEQ_9_8: u16 = 800;
    pub const PEQ_9_9: u16 = 805;
    pub const PEQ_9_10: u16 = 810;
    pub const BPF_9_1: u16 = 815;
    pub const BPF_9_5: u16 = 835;
    pub const D_GAIN_10_0_STATUS: u16 = 855;
    pub const COMP_10_0_STATUS: u16 = 856;
    pub const D_GAIN_10_0: u16 = 857;
    pub const COMP_10_0_THRESHOLD: u16 = 858;
    pub const COMP_10_0_GAIN: u16 = 859;
    pub const COMP_10_0_RATIO: u16 = 860;
    pub const COMP_10_0_KNEE: u16 = 861;
    pub const COMP_10_0_ATIME: u16 = 862;
    pub const COMP_10_0_RTIME: u16 = 863;
    pub const DELAY_10_0: u16 = 864;
    pub const METER_10_0: u16 = 865;
    pub const METER_10_1: u16 = 866;
    pub const POLARITY_OUT_10_0: u16 = 867;
    pub const PEQ_10_1: u16 = 868;
    pub const PEQ_10_2: u16 = 873;
    pub const PEQ_10_3: u16 = 878;
    pub const PEQ_10_4: u16 = 883;
    pub const PEQ_10_5: u16 = 888;
    pub const PEQ_10_6: u16 = 893;
    pub const PEQ_10_7: u16 = 898;
    pub const PEQ_10_8: u16 = 903;
    pub const PEQ_10_9: u16 = 908;
    pub const PEQ_10_10: u16 = 913;
    pub const BPF_10_1: u16 = 918;
    pub const BPF_10_5: u16 = 938;
    pub const D_GAIN_11_0_STATUS: u16 = 958;
    pub const COMP_11_0_STATUS: u16 = 959;
    pub const D_GAIN_11_0: u16 = 960;
    pub const COMP_11_0_THRESHOLD: u16 = 961;
    pub const COMP_11_0_GAIN: u16 = 962;
    pub const COMP_11_0_RATIO: u16 = 963;
    pub const COMP_11_0_KNEE: u16 = 964;
    pub const COMP_11_0_ATIME: u16 = 965;
    pub const COMP_11_0_RTIME: u16 = 966;
    pub const DELAY_11_0: u16 = 967;
    pub const METER_11_0: u16 = 968;
    pub const METER_11_1: u16 = 969;
    pub const POLARITY_OUT_11_0: u16 = 970;
    pub const PEQ_11_1: u16 = 971;
    pub const PEQ_11_2: u16 = 976;
    pub const PEQ_11_3: u16 = 981;
    pub const PEQ_11_4: u16 = 986;
    pub const PEQ_11_5: u16 = 991;
    pub const PEQ_11_6: u16 = 996;
    pub const PEQ_11_7: u16 = 1001;
    pub const PEQ_11_8: u16 = 1006;
    pub const PEQ_11_9: u16 = 1011;
    pub const PEQ_11_10: u16 = 1016;
    pub const BPF_11_1: u16 = 1021;
    pub const BPF_11_5: u16 = 1041;
    pub const D_GAIN_12_0_STATUS: u16 = 1061;
    pub const COMP_12_0_STATUS: u16 = 1062;
    pub const D_GAIN_12_0: u16 = 1063;
    pub const COMP_12_0_THRESHOLD: u16 = 1064;
    pub const COMP_12_0_GAIN: u16 = 1065;
    pub const COMP_12_0_RATIO: u16 = 1066;
    pub const COMP_12_0_KNEE: u16 = 1067;
    pub const COMP_12_0_ATIME: u16 = 1068;
    pub const COMP_12_0_RTIME: u16 = 1069;
    pub const DELAY_12_0: u16 = 1070;
    pub const METER_12_0: u16 = 1071;
    pub const METER_12_1: u16 = 1072;
    pub const POLARITY_OUT_12_0: u16 = 1073;
    pub const PEQ_12_1: u16 = 1074;
    pub const PEQ_12_2: u16 = 1079;
    pub const PEQ_12_3: u16 = 1084;
    pub const PEQ_12_4: u16 = 1089;
    pub const PEQ_12_5: u16 = 1094;
    pub const PEQ_12_6: u16 = 1099;
    pub const PEQ_12_7: u16 = 1104;
    pub const PEQ_12_8: u16 = 1109;
    pub const PEQ_12_9: u16 = 1114;
    pub const PEQ_12_10: u16 = 1119;
    pub const BPF_12_1: u16 = 1124;
    pub const BPF_12_5: u16 = 1144;
    pub const D_GAIN_13_0_STATUS: u16 = 1164;
    pub const COMP_13_0_STATUS: u16 = 1165;
    pub const D_GAIN_13_0: u16 = 1166;
    pub const COMP_13_0_THRESHOLD: u16 = 1167;
    pub const COMP_13_0_GAIN: u16 = 1168;
    pub const COMP_13_0_RATIO: u16 = 1169;
    pub const COMP_13_0_KNEE: u16 = 1170;
    pub const COMP_13_0_ATIME: u16 = 1171;
    pub const COMP_13_0_RTIME: u16 = 1172;
    pub const DELAY_13_0: u16 = 1173;
    pub const METER_13_0: u16 = 1174;
    pub const METER_13_1: u16 = 1175;
    pub const POLARITY_OUT_13_0: u16 = 1176;
    pub const PEQ_13_1: u16 = 1177;
    pub const PEQ_13_2: u16 = 1182;
    pub const PEQ_13_3: u16 = 1187;
    pub const PEQ_13_4: u16 = 1192;
    pub const PEQ_13_5: u16 = 1197;
    pub const PEQ_13_6: u16 = 1202;
    pub const PEQ_13_7: u16 = 1207;
    pub const PEQ_13_8: u16 = 1212;
    pub const PEQ_13_9: u16 = 1217;
    pub const PEQ_13_10: u16 = 1222;
    pub const BPF_13_1: u16 = 1227;
    pub const BPF_13_5: u16 = 1247;
    pub const D_GAIN_14_0_STATUS: u16 = 1267;
    pub const COMP_14_0_STATUS: u16 = 1268;
    pub const D_GAIN_14_0: u16 = 1269;
    pub const COMP_14_0_THRESHOLD: u16 = 1270;
    pub const COMP_14_0_GAIN: u16 = 1271;
    pub const COMP_14_0_RATIO: u16 = 1272;
    pub const COMP_14_0_KNEE: u16 = 1273;
    pub const COMP_14_0_ATIME: u16 = 1274;
    pub const COMP_14_0_RTIME: u16 = 1275;
    pub const DELAY_14_0: u16 = 1276;
    pub const METER_14_0: u16 = 1277;
    pub const METER_14_1: u16 = 1278;
    pub const POLARITY_OUT_14_0: u16 = 1279;
    pub const PEQ_14_1: u16 = 1280;
    pub const PEQ_14_2: u16 = 1285;
    pub const PEQ_14_3: u16 = 1290;
    pub const PEQ_14_4: u16 = 1295;
    pub const PEQ_14_5: u16 = 1300;
    pub const PEQ_14_6: u16 = 1305;
    pub const PEQ_14_7: u16 = 1310;
    pub const PEQ_14_8: u16 = 1315;
    pub const PEQ_14_9: u16 = 1320;
    pub const PEQ_14_10: u16 = 1325;
    pub const BPF_14_1: u16 = 1330;
    pub const BPF_14_5: u16 = 1350;
    pub const D_GAIN_15_0_STATUS: u16 = 1370;
    pub const COMP_15_0_STATUS: u16 = 1371;
    pub const D_GAIN_15_0: u16 = 1372;
    pub const COMP_15_0_THRESHOLD: u16 = 1373;
    pub const COMP_15_0_GAIN: u16 = 1374;
    pub const COMP_15_0_RATIO: u16 = 1375;
    pub const COMP_15_0_KNEE: u16 = 1376;
    pub const COMP_15_0_ATIME: u16 = 1377;
    pub const COMP_15_0_RTIME: u16 = 1378;
    pub const DELAY_15_0: u16 = 1379;
    pub const METER_15_0: u16 = 1380;
    pub const METER_15_1: u16 = 1381;
    pub const POLARITY_OUT_15_0: u16 = 1382;
    pub const PEQ_15_1: u16 = 1383;
    pub const PEQ_15_2: u16 = 1388;
    pub const PEQ_15_3: u16 = 1393;
    pub const PEQ_15_4: u16 = 1398;
    pub const PEQ_15_5: u16 = 1403;
    pub const PEQ_15_6: u16 = 1408;
    pub const PEQ_15_7: u16 = 1413;
    pub const PEQ_15_8: u16 = 1418;
    pub const PEQ_15_9: u16 = 1423;
    pub const PEQ_15_10: u16 = 1428;
    pub const BPF_15_1: u16 = 1433;
    pub const BPF_15_5: u16 = 1453;
    pub const D_GAIN_16_0_STATUS: u16 = 1473;
    pub const COMP_16_0_STATUS: u16 = 1474;
    pub const D_GAIN_16_0: u16 = 1475;
    pub const COMP_16_0_THRESHOLD: u16 = 1476;
    pub const COMP_16_0_GAIN: u16 = 1477;
    pub const COMP_16_0_RATIO: u16 = 1478;
    pub const COMP_16_0_KNEE: u16 = 1479;
    pub const COMP_16_0_ATIME: u16 = 1480;
    pub const COMP_16_0_RTIME: u16 = 1481;
    pub const DELAY_16_0: u16 = 1482;
    pub const METER_16_0: u16 = 1483;
    pub const METER_16_1: u16 = 1484;
    pub const POLARITY_OUT_16_0: u16 = 1485;
    pub const PEQ_16_1: u16 = 1486;
    pub const PEQ_16_2: u16 = 1491;
    pub const PEQ_16_3: u16 = 1496;
    pub const PEQ_16_4: u16 = 1501;
    pub const PEQ_16_5: u16 = 1506;
    pub const PEQ_16_6: u16 = 1511;
    pub const PEQ_16_7: u16 = 1516;
    pub const PEQ_16_8: u16 = 1521;
    pub const PEQ_16_9: u16 = 1526;
    pub const PEQ_16_10: u16 = 1531;
    pub const BPF_16_1: u16 = 1536;
    pub const BPF_16_5: u16 = 1556;
    pub const D_GAIN_17_0_STATUS: u16 = 1576;
    pub const COMP_17_0_STATUS: u16 = 1577;
    pub const D_GAIN_17_0: u16 = 1578;
    pub const COMP_17_0_THRESHOLD: u16 = 1579;
    pub const COMP_17_0_GAIN: u16 = 1580;
    pub const COMP_17_0_RATIO: u16 = 1581;
    pub const COMP_17_0_KNEE: u16 = 1582;
    pub const COMP_17_0_ATIME: u16 = 1583;
    pub const COMP_17_0_RTIME: u16 = 1584;
    pub const DELAY_17_0: u16 = 1585;
    pub const METER_17_0: u16 = 1586;
    pub const METER_17_1: u16 = 1587;
    pub const POLARITY_OUT_17_0: u16 = 1588;
    pub const PEQ_17_1: u16 = 1589;
    pub const PEQ_17_2: u16 = 1594;
    pub const PEQ_17_3: u16 = 1599;
    pub const PEQ_17_4: u16 = 1604;
    pub const PEQ_17_5: u16 = 1609;
    pub const PEQ_17_6: u16 = 1614;
    pub const PEQ_17_7: u16 = 1619;
    pub const PEQ_17_8: u16 = 1624;
    pub const PEQ_17_9: u16 = 1629;
    pub const PEQ_17_10: u16 = 1634;
    pub const BPF_17_1: u16 = 1639;
    pub const BPF_17_5: u16 = 1659;
    pub const D_GAIN_18_0_STATUS: u16 = 1679;
    pub const COMP_18_0_STATUS: u16 = 1680;
    pub const D_GAIN_18_0: u16 = 1681;
    pub const COMP_18_0_THRESHOLD: u16 = 1682;
    pub const COMP_18_0_GAIN: u16 = 1683;
    pub const COMP_18_0_RATIO: u16 = 1684;
    pub const COMP_18_0_KNEE: u16 = 1685;
    pub const COMP_18_0_ATIME: u16 = 1686;
    pub const COMP_18_0_RTIME: u16 = 1687;
    pub const DELAY_18_0: u16 = 1688;
    pub const METER_18_0: u16 = 1689;
    pub const METER_18_1: u16 = 1690;
    pub const POLARITY_OUT_18_0: u16 = 1691;
    pub const PEQ_18_1: u16 = 1692;
    pub const PEQ_18_2: u16 = 1697;
    pub const PEQ_18_3: u16 = 1702;
    pub const PEQ_18_4: u16 = 1707;
    pub const PEQ_18_5: u16 = 1712;
    pub const PEQ_18_6: u16 = 1717;
    pub const PEQ_18_7: u16 = 1722;
    pub const PEQ_18_8: u16 = 1727;
    pub const PEQ_18_9: u16 = 1732;
    pub const PEQ_18_10: u16 = 1737;
    pub const BPF_18_1: u16 = 1742;
    pub const BPF_18_5: u16 = 1762;
    pub const D_GAIN_19_0_STATUS: u16 = 1782;
    pub const COMP_19_0_STATUS: u16 = 1783;
    pub const D_GAIN_19_0: u16 = 1784;
    pub const COMP_19_0_THRESHOLD: u16 = 1785;
    pub const COMP_19_0_GAIN: u16 = 1786;
    pub const COMP_19_0_RATIO: u16 = 1787;
    pub const COMP_19_0_KNEE: u16 = 1788;
    pub const COMP_19_0_ATIME: u16 = 1789;
    pub const COMP_19_0_RTIME: u16 = 1790;
    pub const DELAY_19_0: u16 = 1791;
    pub const METER_19_0: u16 = 1792;
    pub const METER_19_1: u16 = 1793;
    pub const POLARITY_OUT_19_0: u16 = 1794;
    pub const PEQ_19_1: u16 = 1795;
    pub const PEQ_19_2: u16 = 1800;
    pub const PEQ_19_3: u16 = 1805;
    pub const PEQ_19_4: u16 = 1810;
    pub const PEQ_19_5: u16 = 1815;
    pub const PEQ_19_6: u16 = 1820;
    pub const PEQ_19_7: u16 = 1825;
    pub const PEQ_19_8: u16 = 1830;
    pub const PEQ_19_9: u16 = 1835;
    pub const PEQ_19_10: u16 = 1840;
    pub const BPF_19_1: u16 = 1845;
    pub const BPF_19_5: u16 = 1865;
    pub const D_GAIN_20_0_STATUS: u16 = 1885;
    pub const COMP_20_0_STATUS: u16 = 1886;
    pub const D_GAIN_20_0: u16 = 1887;
    pub const COMP_20_0_THRESHOLD: u16 = 1888;
    pub const COMP_20_0_GAIN: u16 = 1889;
    pub const COMP_20_0_RATIO: u16 = 1890;
    pub const COMP_20_0_KNEE: u16 = 1891;
    pub const COMP_20_0_ATIME: u16 = 1892;
    pub const COMP_20_0_RTIME: u16 = 1893;
    pub const DELAY_20_0: u16 = 1894;
    pub const METER_20_0: u16 = 1895;
    pub const METER_20_1: u16 = 1896;
    pub const POLARITY_OUT_20_0: u16 = 1897;
    pub const PEQ_20_1: u16 = 1898;
    pub const PEQ_20_2: u16 = 1903;
    pub const PEQ_20_3: u16 = 1908;
    pub const PEQ_20_4: u16 = 1913;
    pub const PEQ_20_5: u16 = 1918;
    pub const PEQ_20_6: u16 = 1923;
    pub const PEQ_20_7: u16 = 1928;
    pub const PEQ_20_8: u16 = 1933;
    pub const PEQ_20_9: u16 = 1938;
    pub const PEQ_20_10: u16 = 1943;
    pub const BPF_20_1: u16 = 1948;
    pub const BPF_20_5: u16 = 1968;
    #[cfg(feature = "symbols")]
    pub const SYMBOLS: &[(&str, u16)] = &[
        ("MIXER_0_0_STATUS", MIXER_0_0_STATUS),
        ("MIXER_0_1_STATUS", MIXER_0_1_STATUS),
        ("MIXER_0_2_STATUS", MIXER_0_2_STATUS),
        ("MIXER_0_3_STATUS", MIXER_0_3_STATUS),
        ("MIXER_0_4_STATUS", MIXER_0_4_STATUS),
        ("MIXER_0_5_STATUS", MIXER_0_5_STATUS),
        ("MIXER_0_6_STATUS", MIXER_0_6_STATUS),
        ("MIXER_0_7_STATUS", MIXER_0_7_STATUS),
        ("MIXER_0_8_STATUS", MIXER_0_8_STATUS),
        ("MIXER_0_9_STATUS", MIXER_0_9_STATUS),
        ("MIXER_0_10_STATUS", MIXER_0_10_STATUS),
        ("MIXER_0_11_STATUS", MIXER_0_11_STATUS),
        ("MIXER_1_0_STATUS", MIXER_1_0_STATUS),
        ("MIXER_1_1_STATUS", MIXER_1_1_STATUS),
        ("MIXER_1_2_STATUS", MIXER_1_2_STATUS),
        ("MIXER_1_3_STATUS", MIXER_1_3_STATUS),
        ("MIXER_1_4_STATUS", MIXER_1_4_STATUS),
        ("MIXER_1_5_STATUS", MIXER_1_5_STATUS),
        ("MIXER_1_6_STATUS", MIXER_1_6_STATUS),
        ("MIXER_1_7_STATUS", MIXER_1_7_STATUS),
        ("MIXER_1_8_STATUS", MIXER_1_8_STATUS),
        ("MIXER_1_9_STATUS", MIXER_1_9_STATUS),
        ("MIXER_1_10_STATUS", MIXER_1_10_STATUS),
        ("MIXER_1_11_STATUS", MIXER_1_11_STATUS),
        ("MIXER_2_0_STATUS", MIXER_2_0_STATUS),
        ("MIXER_2_1_STATUS", MIXER_2_1_STATUS),
        ("MIXER_2_2_STATUS", MIXER_2_2_STATUS),
        ("MIXER_2_3_STATUS", MIXER_2_3_STATUS),
        ("MIXER_2_4_STATUS", MIXER_2_4_STATUS),
        ("MIXER_2_5_STATUS", MIXER_2_5_STATUS),
        ("MIXER_2_6_STATUS", MIXER_2_6_STATUS),
        ("MIXER_2_7_STATUS", MIXER_2_7_STATUS),
        ("MIXER_2_8_STATUS", MIXER_2_8_STATUS),
        ("MIXER_2_9_STATUS", MIXER_2_9_STATUS),
        ("MIXER_2_10_STATUS", MIXER_2_10_STATUS),
        ("MIXER_2_11_STATUS", MIXER_2_11_STATUS),
        ("MIXER_3_0_STATUS", MIXER_3_0_STATUS),
        ("MIXER_3_1_STATUS", MIXER_3_1_STATUS),
        ("MIXER_3_2_STATUS", MIXER_3_2_STATUS),
        ("MIXER_3_3_STATUS", MIXER_3_3_STATUS),
        ("MIXER_3_4_STATUS", MIXER_3_4_STATUS),
        ("MIXER_3_5_STATUS", MIXER_3_5_STATUS),
        ("MIXER_3_6_STATUS", MIXER_3_6_STATUS),
        ("MIXER_3_7_STATUS", MIXER_3_7_STATUS),
        ("MIXER_3_8_STATUS", MIXER_3_8_STATUS),
        ("MIXER_3_9_STATUS", MIXER_3_9_STATUS),
        ("MIXER_3_10_STATUS", MIXER_3_10_STATUS),
        ("MIXER_3_11_STATUS", MIXER_3_11_STATUS),
        ("MIXER_4_0_STATUS", MIXER_4_0_STATUS),
        ("MIXER_4_1_STATUS", MIXER_4_1_STATUS),
        ("MIXER_4_2_STATUS", MIXER_4_2_STATUS),
        ("MIXER_4_3_STATUS", MIXER_4_3_STATUS),
        ("MIXER_4_4_STATUS", MIXER_4_4_STATUS),
        ("MIXER_4_5_STATUS", MIXER_4_5_STATUS),
        ("MIXER_4_6_STATUS", MIXER_4_6_STATUS),
        ("MIXER_4_7_STATUS", MIXER_4_7_STATUS),
        ("MIXER_4_8_STATUS", MIXER_4_8_STATUS),
        ("MIXER_4_9_STATUS", MIXER_4_9_STATUS),
        ("MIXER_4_10_STATUS", MIXER_4_10_STATUS),
        ("MIXER_4_11_STATUS", MIXER_4_11_STATUS),
        ("MIXER_5_0_STATUS", MIXER_5_0_STATUS),
        ("MIXER_5_1_STATUS", MIXER_5_1_STATUS),
        ("MIXER_5_2_STATUS", MIXER_5_2_STATUS),
        ("MIXER_5_3_STATUS", MIXER_5_3_STATUS),
        ("MIXER_5_4_STATUS", MIXER_5_4_STATUS),
        ("MIXER_5_5_STATUS", MIXER_5_5_STATUS),
        ("MIXER_5_6_STATUS", MIXER_5_6_STATUS),
        ("MIXER_5_7_STATUS", MIXER_5_7_STATUS),
        ("MIXER_5_8_STATUS", MIXER_5_8_STATUS),
        ("MIXER_5_9_STATUS", MIXER_5_9_STATUS),
        ("MIXER_5_10_STATUS", MIXER_5_10_STATUS),
        ("MIXER_5_11_STATUS", MIXER_5_11_STATUS),
        ("MIXER_6_0_STATUS", MIXER_6_0_STATUS),
        ("MIXER_6_1_STATUS", MIXER_6_1_STATUS),
        ("MIXER_6_2_STATUS", MIXER_6_2_STATUS),
        ("MIXER_6_3_STATUS", MIXER_6_3_STATUS),
        ("MIXER_6_4_STATUS", MIXER_6_4_STATUS),
        ("MIXER_6_5_STATUS", MIXER_6_5_STATUS),
        ("MIXER_6_6_STATUS", MIXER_6_6_STATUS),
        ("MIXER_6_7_STATUS", MIXER_6_7_STATUS),
        ("MIXER_6_8_STATUS", MIXER_6_8_STATUS),
        ("MIXER_6_9_STATUS", MIXER_6_9_STATUS),
        ("MIXER_6_10_STATUS", MIXER_6_10_STATUS),
        ("MIXER_6_11_STATUS", MIXER_6_11_STATUS),
        ("MIXER_7_0_STATUS", MIXER_7_0_STATUS),
        ("MIXER_7_1_STATUS", MIXER_7_1_STATUS),
        ("MIXER_7_2_STATUS", MIXER_7_2_STATUS),
        ("MIXER_7_3_STATUS", MIXER_7_3_STATUS),
        ("MIXER_7_4_STATUS", MIXER_7_4_STATUS),
        ("MIXER_7_5_STATUS", MIXER_7_5_STATUS),
        ("MIXER_7_6_STATUS", MIXER_7_6_STATUS),
        ("MIXER_7_7_STATUS", MIXER_7_7_STATUS),
        ("MIXER_7_8_STATUS", MIXER_7_8_STATUS),
        ("MIXER_7_9_STATUS", MIXER_7_9_STATUS),
        ("MIXER_7_10_STATUS", MIXER_7_10_STATUS),
        ("MIXER_7_11_STATUS", MIXER_7_11_STATUS),
        ("MIXER_0_0", MIXER_0_0),
        ("MIXER_0_1", MIXER_0_1),
        ("MIXER_0_2", MIXER_0_2),
        ("MIXER_0_3", MIXER_0_3),
        ("MIXER_0_4", MIXER_0_4),
        ("MIXER_0_5", MIXER_0_5),
        ("MIXER_0_6", MIXER_0_6),
        ("MIXER_0_7", MIXER_0_7),
        ("MIXER_0_8", MIXER_0_8),
        ("MIXER_0_9", MIXER_0_9),
        ("MIXER_0_10", MIXER_0_10),
        ("MIXER_0_11", MIXER_0_11),
        ("MIXER_1_0", MIXER_1_0),
        ("MIXER_1_1", MIXER_1_1),
        ("MIXER_1_2", MIXER_1_2),
        ("MIXER_1_3", MIXER_1_3),
        ("MIXER_1_4", MIXER_1_4),
        ("MIXER_1_5", MIXER_1_5),
        ("MIXER_1_6", MIXER_1_6),
        ("MIXER_1_7", MIXER_1_7),
        ("MIXER_1_8", MIXER_1_8),
        ("MIXER_1_9", MIXER_1_9),
        ("MIXER_1_10", MIXER_1_10),
        ("MIXER_1_11", MIXER_1_11),
        ("MIXER_2_0", MIXER_2_0),
        ("MIXER_2_1", MIXER_2_1),
        ("MIXER_2_2", MIXER_2_2),
        ("MIXER_2_3", MIXER_2_3),
        ("MIXER_2_4", MIXER_2_4),
        ("MIXER_2_5", MIXER_2_5),
        ("MIXER_2_6", MIXER_2_6),
        ("MIXER_2_7", MIXER_2_7),
        ("MIXER_2_8", MIXER_2_8),
        ("MIXER_2_9", MIXER_2_9),
        ("MIXER_2_10", MIXER_2_10),
        ("MIXER_2_11", MIXER_2_11),
        ("MIXER_3_0", MIXER_3_0),
        ("MIXER_3_1", MIXER_3_1),
        ("MIXER_3_2", MIXER_3_2),
        ("MIXER_3_3", MIXER_3_3),
        ("MIXER_3_4", MIXER_3_4),
        ("MIXER_3_5", MIXER_3_5),
        ("MIXER_3_6", MIXER_3_6),
        ("MIXER_3_7", MIXER_3_7),
        ("MIXER_3_8", MIXER_3_8),
        ("MIXER_3_9", MIXER_3_9),
        ("MIXER_3_10", MIXER_3_10),
        ("MIXER_3_11", MIXER_3_11),
        ("MIXER_4_0", MIXER_4_0),
        ("MIXER_4_1", MIXER_4_1),
        ("MIXER_4_2", MIXER_4_2),
        ("MIXER_4_3", MIXER_4_3),
        ("MIXER_4_4", MIXER_4_4),
        ("MIXER_4_5", MIXER_4_5),
        ("MIXER_4_6", MIXER_4_6),
        ("MIXER_4_7", MIXER_4_7),
        ("MIXER_4_8", MIXER_4_8),
        ("MIXER_4_9", MIXER_4_9),
        ("MIXER_4_10", MIXER_4_10),
        ("MIXER_4_11", MIXER_4_11),
        ("MIXER_5_0", MIXER_5_0),
        ("MIXER_5_1", MIXER_5_1),
        ("MIXER_5_2", MIXER_5_2),
        ("MIXER_5_3", MIXER_5_3),
        ("MIXER_5_4", MIXER_5_4),
        ("MIXER_5_5", MIXER_5_5),
        ("MIXER_5_6", MIXER_5_6),
        ("MIXER_5_7", MIXER_5_7),
        ("MIXER_5_8", MIXER_5_8),
        ("MIXER_5_9", MIXER_5_9),
        ("MIXER_5_10", MIXER_5_10),
        ("MIXER_5_11", MIXER_5_11),
        ("MIXER_6_0", MIXER_6_0),
        ("MIXER_6_1", MIXER_6_1),
        ("MIXER_6_2", MIXER_6_2),
        ("MIXER_6_3", MIXER_6_3),
        ("MIXER_6_4", MIXER_6_4),
        ("MIXER_6_5", MIXER_6_5),
        ("MIXER_6_6", MIXER_6_6),
        ("MIXER_6_7", MIXER_6_7),
        ("MIXER_6_8", MIXER_6_8),
        ("MIXER_6_9", MIXER_6_9),
        ("MIXER_6_10", MIXER_6_10),
        ("MIXER_6_11", MIXER_6_11),
        ("MIXER_7_0", MIXER_7_0),
        ("MIXER_7_1", MIXER_7_1),
        ("MIXER_7_2", MIXER_7_2),
        ("MIXER_7_3", MIXER_7_3),
        ("MIXER_7_4", MIXER_7_4),
        ("MIXER_7_5", MIXER_7_5),
        ("MIXER_7_6", MIXER_7_6),
        ("MIXER_7_7", MIXER_7_7),
        ("MIXER_7_8", MIXER_7_8),
        ("MIXER_7_9", MIXER_7_9),
        ("MIXER_7_10", MIXER_7_10),
        ("MIXER_7_11", MIXER_7_11),
        ("MIXER_0_0_POL", MIXER_0_0_POL),
        ("MIXER_0_1_POL", MIXER_0_1_POL),
        ("MIXER_0_2_POL", MIXER_0_2_POL),
        ("MIXER_0_3_POL", MIXER_0_3_POL),
        ("MIXER_0_4_POL", MIXER_0_4_POL),
        ("MIXER_0_5_POL", MIXER_0_5_POL),
        ("MIXER_0_6_POL", MIXER_0_6_POL),
        ("MIXER_0_7_POL", MIXER_0_7_POL),
        ("MIXER_0_8_POL", MIXER_0_8_POL),
        ("MIXER_0_9_POL", MIXER_0_9_POL),
        ("MIXER_0_10_POL", MIXER_0_10_POL),
        ("MIXER_0_11_POL", MIXER_0_11_POL),
        ("MIXER_1_0_POL", MIXER_1_0_POL),
        ("MIXER_1_1_POL", MIXER_1_1_POL),
        ("MIXER_1_2_POL", MIXER_1_2_POL),
        ("MIXER_1_3_POL", MIXER_1_3_POL),
        ("MIXER_1_4_POL", MIXER_1_4_POL),
        ("MIXER_1_5_POL", MIXER_1_5_POL),
        ("MIXER_1_6_POL", MIXER_1_6_POL),
        ("MIXER_1_7_POL", MIXER_1_7_POL),
        ("MIXER_1_8_POL", MIXER_1_8_POL),
        ("MIXER_1_9_POL", MIXER_1_9_POL),
        ("MIXER_1_10_POL", MIXER_1_10_POL),
        ("MIXER_1_11_POL", MIXER_1_11_POL),
        ("MIXER_2_0_POL", MIXER_2_0_POL),
        ("MIXER_2_1_POL", MIXER_2_1_POL),
        ("MIXER_2_2_POL", MIXER_2_2_POL),
        ("MIXER_2_3_POL", MIXER_2_3_POL),
        ("MIXER_2_4_POL", MIXER_2_4_POL),
        ("MIXER_2_5_POL", MIXER_2_5_POL),
        ("MIXER_2_6_POL", MIXER_2_6_POL),
        ("MIXER_2_7_POL", MIXER_2_7_POL),
        ("MIXER_2_8_POL", MIXER_2_8_POL),
        ("MIXER_2_9_POL", MIXER_2_9_POL),
        ("MIXER_2_10_POL", MIXER_2_10_POL),
        ("MIXER_2_11_POL", MIXER_2_11_POL),
        ("MIXER_3_0_POL", MIXER_3_0_POL),
        ("MIXER_3_1_POL", MIXER_3_1_POL),
        ("MIXER_3_2_POL", MIXER_3_2_POL),
        ("MIXER_3_3_POL", MIXER_3_3_POL),
        ("MIXER_3_4_POL", MIXER_3_4_POL),
        ("MIXER_3_5_POL", MIXER_3_5_POL),
        ("MIXER_3_6_POL", MIXER_3_6_POL),
        ("MIXER_3_7_POL", MIXER_3_7_POL),
        ("MIXER_3_8_POL", MIXER_3_8_POL),
        ("MIXER_3_9_POL", MIXER_3_9_POL),
        ("MIXER_3_10_POL", MIXER_3_10_POL),
        ("MIXER_3_11_POL", MIXER_3_11_POL),
        ("MIXER_4_0_POL", MIXER_4_0_POL),
        ("MIXER_4_1_POL", MIXER_4_1_POL),
        ("MIXER_4_2_POL", MIXER_4_2_POL),
        ("MIXER_4_3_POL", MIXER_4_3_POL),
        ("MIXER_4_4_POL", MIXER_4_4_POL),
        ("MIXER_4_5_POL", MIXER_4_5_POL),
        ("MIXER_4_6_POL", MIXER_4_6_POL),
        ("MIXER_4_7_POL", MIXER_4_7_POL),
        ("MIXER_4_8_POL", MIXER_4_8_POL),
        ("MIXER_4_9_POL", MIXER_4_9_POL),
        ("MIXER_4_10_POL", MIXER_4_10_POL),
        ("MIXER_4_11_POL", MIXER_4_11_POL),
        ("MIXER_5_0_POL", MIXER_5_0_POL),
        ("MIXER_5_1_POL", MIXER_5_1_POL),
        ("MIXER_5_2_POL", MIXER_5_2_POL),
        ("MIXER_5_3_POL", MIXER_5_3_POL),
        ("MIXER_5_4_POL", MIXER_5_4_POL),
        ("MIXER_5_5_POL", MIXER_5_5_POL),
        ("MIXER_5_6_POL", MIXER_5_6_POL),
        ("MIXER_5_7_POL", MIXER_5_7_POL),
        ("MIXER_5_8_POL", MIXER_5_8_POL),
        ("MIXER_5_9_POL", MIXER_5_9_POL),
        ("MIXER_5_10_POL", MIXER_5_10_POL),
        ("MIXER_5_11_POL", MIXER_5_11_POL),
        ("MIXER_6_0_POL", MIXER_6_0_POL),
        ("MIXER_6_1_POL", MIXER_6_1_POL),
        ("MIXER_6_2_POL", MIXER_6_2_POL),
        ("MIXER_6_3_POL", MIXER_6_3_POL),
        ("MIXER_6_4_POL", MIXER_6_4_POL),
        ("MIXER_6_5_POL", MIXER_6_5_POL),
        ("MIXER_6_6_POL", MIXER_6_6_POL),
        ("MIXER_6_7_POL", MIXER_6_7_POL),
        ("MIXER_6_8_POL", MIXER_6_8_POL),
        ("MIXER_6_9_POL", MIXER_6_9_POL),
        ("MIXER_6_10_POL", MIXER_6_10_POL),
        ("MIXER_6_11_POL", MIXER_6_11_POL),
        ("MIXER_7_0_POL", MIXER_7_0_POL),
        ("MIXER_7_1_POL", MIXER_7_1_POL),
        ("MIXER_7_2_POL", MIXER_7_2_POL),
        ("MIXER_7_3_POL", MIXER_7_3_POL),
        ("MIXER_7_4_POL", MIXER_7_4_POL),
        ("MIXER_7_5_POL", MIXER_7_5_POL),
        ("MIXER_7_6_POL", MIXER_7_6_POL),
        ("MIXER_7_7_POL", MIXER_7_7_POL),
        ("MIXER_7_8_POL", MIXER_7_8_POL),
        ("MIXER_7_9_POL", MIXER_7_9_POL),
        ("MIXER_7_10_POL", MIXER_7_10_POL),
        ("MIXER_7_11_POL", MIXER_7_11_POL),
        ("METER_IN_1", METER_IN_1),
        ("METER_IN_2", METER_IN_2),
        ("METER_IN_3", METER_IN_3),
        ("METER_IN_4", METER_IN_4),
        ("METER_IN_5", METER_IN_5),
        ("METER_IN_6", METER_IN_6),
        ("METER_IN_7", METER_IN_7),
        ("METER_IN_8", METER_IN_8),
        ("METER_COMP_1", METER_COMP_1),
        ("METER_COMP_2", METER_COMP_2),
        ("METER_COMP_3", METER_COMP_3),
        ("METER_COMP_4", METER_COMP_4),
        ("METER_COMP_5", METER_COMP_5),
        ("METER_COMP_6", METER_COMP_6),
        ("METER_COMP_7", METER_COMP_7),
        ("METER_COMP_8", METER_COMP_8),
        ("METER_COMP_9", METER_COMP_9),
        ("METER_COMP_10", METER_COMP_10),
        ("METER_COMP_11", METER_COMP_11),
        ("METER_COMP_12", METER_COMP_12),
        ("METER_OUT_1", METER_OUT_1),
        ("METER_OUT_2", METER_OUT_2),
        ("METER_OUT_3", METER_OUT_3),
        ("METER_OUT_4", METER_OUT_4),
        ("METER_OUT_5", METER_OUT_5),
        ("METER_OUT_6", METER_OUT_6),
        ("METER_OUT_7", METER_OUT_7),
        ("METER_OUT_8", METER_OUT_8),
        ("METER_OUT_9", METER_OUT_9),
        ("METER_OUT_10", METER_OUT_10),
        ("METER_OUT_11", METER_OUT_11),
        ("METER_OUT_12", METER_OUT_12),
        ("D_GAIN_1_0_STATUS", D_GAIN_1_0_STATUS),
        ("D_GAIN_1_0", D_GAIN_1_0),
        ("METER_1_0", METER_1_0),
        ("POLARITY_OUT_1_0", POLARITY_OUT_1_0),
        ("PEQ_1_1", PEQ_1_1),
        ("PEQ_1_2", PEQ_1_2),
        ("PEQ_1_3", PEQ_1_3),
        ("PEQ_1_4", PEQ_1_4),
        ("PEQ_1_5", PEQ_1_5),
        ("PEQ_1_6", PEQ_1_6),
        ("PEQ_1_7", PEQ_1_7),
        ("PEQ_1_8", PEQ_1_8),
        ("PEQ_1_9", PEQ_1_9),
        ("PEQ_1_10", PEQ_1_10),
        ("D_GAIN_2_0_STATUS", D_GAIN_2_0_STATUS),
        ("D_GAIN_2_0", D_GAIN_2_0),
        ("METER_2_0", METER_2_0),
        ("POLARITY_OUT_2_0", POLARITY_OUT_2_0),
        ("PEQ_2_1", PEQ_2_1),
        ("PEQ_2_2", PEQ_2_2),
        ("PEQ_2_3", PEQ_2_3),
        ("PEQ_2_4", PEQ_2_4),
        ("PEQ_2_5", PEQ_2_5),
        ("PEQ_2_6", PEQ_2_6),
        ("PEQ_2_7", PEQ_2_7),
        ("PEQ_2_8", PEQ_2_8),
        ("PEQ_2_9", PEQ_2_9),
        ("PEQ_2_10", PEQ_2_10),
        ("D_GAIN_3_0_STATUS", D_GAIN_3_0_STATUS),
        ("D_GAIN_3_0", D_GAIN_3_0),
        ("METER_3_0", METER_3_0),
        ("POLARITY_OUT_3_0", POLARITY_OUT_3_0),
        ("PEQ_3_1", PEQ_3_1),
        ("PEQ_3_2", PEQ_3_2),
        ("PEQ_3_3", PEQ_3_3),
        ("PEQ_3_4", PEQ_3_4),
        ("PEQ_3_5", PEQ_3_5),
        ("PEQ_3_6", PEQ_3_6),
        ("PEQ_3_7", PEQ_3_7),
        ("PEQ_3_8", PEQ_3_8),
        ("PEQ_3_9", PEQ_3_9),
        ("PEQ_3_10", PEQ_3_10),
        ("D_GAIN_4_0_STATUS", D_GAIN_4_0_STATUS),
        ("D_GAIN_4_0", D_GAIN_4_0),
        ("METER_4_0", METER_4_0),
        ("POLARITY_OUT_4_0", POLARITY_OUT_4_0),
        ("PEQ_4_1", PEQ_4_1),
        ("PEQ_4_2", PEQ_4_2),
        ("PEQ_4_3", PEQ_4_3),
        ("PEQ_4_4", PEQ_4_4),
        ("PEQ_4_5", PEQ_4_5),
        ("PEQ_4_6", PEQ_4_6),
        ("PEQ_4_7", PEQ_4_7),
        ("PEQ_4_8", PEQ_4_8),
        ("PEQ_4_9", PEQ_4_9),
        ("PEQ_4_10", PEQ_4_10),
        ("D_GAIN_5_0_STATUS", D_GAIN_5_0_STATUS),
        ("D_GAIN_5_0", D_GAIN_5_0),
        ("METER_5_0", METER_5_0),
        ("POLARITY_OUT_5_0", POLARITY_OUT_5_0),
        ("PEQ_5_1", PEQ_5_1),
        ("PEQ_5_2", PEQ_5_2),
        ("PEQ_5_3", PEQ_5_3),
        ("PEQ_5_4", PEQ_5_4),
        ("PEQ_5_5", PEQ_5_5),
        ("PEQ_5_6", PEQ_5_6),
        ("PEQ_5_7", PEQ_5_7),
        ("PEQ_5_8", PEQ_5_8),
        ("PEQ_5_9", PEQ_5_9),
        ("PEQ_5_10", PEQ_5_10),
        ("D_GAIN_6_0_STATUS", D_GAIN_6_0_STATUS),
        ("D_GAIN_6_0", D_GAIN_6_0),
        ("METER_6_0", METER_6_0),
        ("POLARITY_OUT_6_0", POLARITY_OUT_6_0),
        ("PEQ_6_1", PEQ_6_1),
        ("PEQ_6_2", PEQ_6_2),
        ("PEQ_6_3", PEQ_6_3),
        ("PEQ_6_4", PEQ_6_4),
        ("PEQ_6_5", PEQ_6_5),
        ("PEQ_6_6", PEQ_6_6),
        ("PEQ_6_7", PEQ_6_7),
        ("PEQ_6_8", PEQ_6_8),
        ("PEQ_6_9", PEQ_6_9),
        ("PEQ_6_10", PEQ_6_10),
        ("D_GAIN_7_0_STATUS", D_GAIN_7_0_STATUS),
        ("D_GAIN_7_0", D_GAIN_7_0),
        ("METER_7_0", METER_7_0),
        ("POLARITY_OUT_7_0", POLARITY_OUT_7_0),
        ("PEQ_7_1", PEQ_7_1),
        ("PEQ_7_2", PEQ_7_2),
        ("PEQ_7_3", PEQ_7_3),
        ("PEQ_7_4", PEQ_7_4),
        ("PEQ_7_5", PEQ_7_5),
        ("PEQ_7_6", PEQ_7_6),
        ("PEQ_7_7", PEQ_7_7),
        ("PEQ_7_8", PEQ_7_8),
        ("PEQ_7_9", PEQ_7_9),
        ("PEQ_7_10", PEQ_7_10),
        ("D_GAIN_8_0_STATUS", D_GAIN_8_0_STATUS),
        ("D_GAIN_8_0", D_GAIN_8_0),
        ("METER_8_0", METER_8_0),
        ("POLARITY_OUT_8_0", POLARITY_OUT_8_0),
        ("PEQ_8_1", PEQ_8_1),
        ("PEQ_8_2", PEQ_8_2),
        ("PEQ_8_3", PEQ_8_3),
        ("PEQ_8_4", PEQ_8_4),
        ("PEQ_8_5", PEQ_8_5),
        ("PEQ_8_6", PEQ_8_6),
        ("PEQ_8_7", PEQ_8_7),
        ("PEQ_8_8", PEQ_8_8),
        ("PEQ_8_9", PEQ_8_9),
        ("PEQ_8_10", PEQ_8_10),
        ("D_GAIN_9_0_STATUS", D_GAIN_9_0_STATUS),
        ("COMP_9_0_STATUS", COMP_9_0_STATUS),
        ("D_GAIN_9_0", D_GAIN_9_0),
        ("COMP_9_0_THRESHOLD", COMP_9_0_THRESHOLD),
        ("COMP_9_0_GAIN", COMP_9_0_GAIN),
        ("COMP_9_0_RATIO", COMP_9_0_RATIO),
        ("COMP_9_0_KNEE", COMP_9_0_KNEE),
        ("COMP_9_0_ATIME", COMP_9_0_ATIME),
        ("COMP_9_0_RTIME", COMP_9_0_RTIME),
        ("DELAY_9_0", DELAY_9_0),
        ("METER_9_0", METER_9_0),
        ("METER_9_1", METER_9_1),
        ("POLARITY_OUT_9_0", POLARITY_OUT_9_0),
        ("PEQ_9_1", PEQ_9_1),
        ("PEQ_9_2", PEQ_9_2),
        ("PEQ_9_3", PEQ_9_3),
        ("PEQ_9_4", PEQ_9_4),
        ("PEQ_9_5", PEQ_9_5),
        ("PEQ_9_6", PEQ_9_6),
        ("PEQ_9_7", PEQ_9_7),
        ("PEQ_9_8", PEQ_9_8),
        ("PEQ_9_9", PEQ_9_9),
        ("PEQ_9_10", PEQ_9_10),
        ("BPF_9_1", BPF_9_1),
        ("BPF_9_5", BPF_9_5),
        ("D_GAIN_10_0_STATUS", D_GAIN_10_0_STATUS),
        ("COMP_10_0_STATUS", COMP_10_0_STATUS),
        ("D_GAIN_10_0", D_GAIN_10_0),
        ("COMP_10_0_THRESHOLD", COMP_10_0_THRESHOLD),
        ("COMP_10_0_GAIN", COMP_10_0_GAIN),
        ("COMP_10_0_RATIO", COMP_10_0_RATIO),
        ("COMP_10_0_KNEE", COMP_10_0_KNEE),
        ("COMP_10_0_ATIME", COMP_10_0_ATIME),
        ("COMP_10_0_RTIME", COMP_10_0_RTIME),
        ("DELAY_10_0", DELAY_10_0),
        ("METER_10_0", METER_10_0),
        ("METER_10_1", METER_10_1),
        ("POLARITY_OUT_10_0", POLARITY_OUT_10_0),
        ("PEQ_10_1", PEQ_10_1),
        ("PEQ_10_2", PEQ_10_2),
        ("PEQ_10_3", PEQ_10_3),
        ("PEQ_10_4", PEQ_10_4),
        ("PEQ_10_5", PEQ_10_5),
        ("PEQ_10_6", PEQ_10_6),
        ("PEQ_10_7", PEQ_10_7),
        ("PEQ_10_8", PEQ_10_8),
        ("PEQ_10_9", PEQ_10_9),
        ("PEQ_10_10", PEQ_10_10),
        ("BPF_10_1", BPF_10_1),
        ("BPF_10_5", BPF_10_5),
        ("D_GAIN_11_0_STATUS", D_GAIN_11_0_STATUS),
        ("COMP_11_0_STATUS", COMP_11_0_STATUS),
        ("D_GAIN_11_0", D_GAIN_11_0),
        ("COMP_11_0_THRESHOLD", COMP_11_0_THRESHOLD),
        ("COMP_11_0_GAIN", COMP_11_0_GAIN),
        ("COMP_11_0_RATIO", COMP_11_0_RATIO),
        ("COMP_11_0_KNEE", COMP_11_0_KNEE),
        ("COMP_11_0_ATIME", COMP_11_0_ATIME),
        ("COMP_11_0_RTIME", COMP_11_0_RTIME),
        ("DELAY_11_0", DELAY_11_0),
        ("METER_11_0", METER_11_0),
        ("METER_11_1", METER_11_1),
        ("POLARITY_OUT_11_0", POLARITY_OUT_11_0),
        ("PEQ_11_1", PEQ_11_1),
        ("PEQ_11_2", PEQ_11_2),
        ("PEQ_11_3", PEQ_11_3),
        ("PEQ_11_4", PEQ_11_4),
        ("PEQ_11_5", PEQ_11_5),
        ("PEQ_11_6", PEQ_11_6),
        ("PEQ_11_7", PEQ_11_7),
        ("PEQ_11_8", PEQ_11_8),
        ("PEQ_11_9", PEQ_11_9),
        ("PEQ_11_10", PEQ_11_10),
        ("BPF_11_1", BPF_11_1),
        ("BPF_11_5", BPF_11_5),
        ("D_GAIN_12_0_STATUS", D_GAIN_12_0_STATUS),
        ("COMP_12_0_STATUS", COMP_12_0_STATUS),
        ("D_GAIN_12_0", D_GAIN_12_0),
        ("COMP_12_0_THRESHOLD", COMP_12_0_THRESHOLD),
        ("COMP_12_0_GAIN", COMP_12_0_GAIN),
        ("COMP_12_0_RATIO", COMP_12_0_RATIO),
        ("COMP_12_0_KNEE", COMP_12_0_KNEE),
        ("COMP_12_0_ATIME", COMP_12_0_ATIME),
        ("COMP_12_0_RTIME", COMP_12_0_RTIME),
        ("DELAY_12_0", DELAY_12_0),
        ("METER_12_0", METER_12_0),
        ("METER_12_1", METER_12_1),
        ("POLARITY_OUT_12_0", POLARITY_OUT_12_0),
        ("PEQ_12_1", PEQ_12_1),
        ("PEQ_12_2", PEQ_12_2),
        ("PEQ_12_3", PEQ_12_3),
        ("PEQ_12_4", PEQ_12_4),
        ("PEQ_12_5", PEQ_12_5),
        ("PEQ_12_6", PEQ_12_6),
        ("PEQ_12_7", PEQ_12_7),
        ("PEQ_12_8", PEQ_12_8),
        ("PEQ_12_9", PEQ_12_9),
        ("PEQ_12_10", PEQ_12_10),
        ("BPF_12_1", BPF_12_1),
        ("BPF_12_5", BPF_12_5),
        ("D_GAIN_13_0_STATUS", D_GAIN_13_0_STATUS),
        ("COMP_13_0_STATUS", COMP_13_0_STATUS),
        ("D_GAIN_13_0", D_GAIN_13_0),
        ("COMP_13_0_THRESHOLD", COMP_13_0_THRESHOLD),
        ("COMP_13_0_GAIN", COMP_13_0_GAIN),
        ("COMP_13_0_RATIO", COMP_13_0_RATIO),
        ("COMP_13_0_KNEE", COMP_13_0_KNEE),
        ("COMP_13_0_ATIME", COMP_13_0_ATIME),
        ("COMP_13_0_RTIME", COMP_13_0_RTIME),
        ("DELAY_13_0", DELAY_13_0),
        ("METER_13_0", METER_13_0),
        ("METER_13_1", METER_13_1),
        ("POLARITY_OUT_13_0", POLARITY_OUT_13_0),
        ("PEQ_13_1", PEQ_13_1),
        ("PEQ_13_2", PEQ_13_2),
        ("PEQ_13_3", PEQ_13_3),
        ("PEQ_13_4", PEQ_13_4),
        ("PEQ_13_5", PEQ_13_5),
        ("PEQ_13_6", PEQ_13_6),
        ("PEQ_13_7", PEQ_13_7),
        ("PEQ_13_8", PEQ_13_8),
        ("PEQ_13_9", PEQ_13_9),
        ("PEQ_13_10", PEQ_13_10),
        ("BPF_13_1", BPF_13_1),
        ("BPF_13_5", BPF_13_5),
        ("D_GAIN_14_0_STATUS", D_GAIN_14_0_STATUS),
        ("COMP_14_0_STATUS", COMP_14_0_STATUS),
        ("D_GAIN_14_0", D_GAIN_14_0),
        ("COMP_14_0_THRESHOLD", COMP_14_0_THRESHOLD),
        ("COMP_14_0_GAIN", COMP_14_0_GAIN),
        ("COMP_14_0_RATIO", COMP_14_0_RATIO),
        ("COMP_14_0_KNEE", COMP_14_0_KNEE),
        ("COMP_14_0_ATIME", COMP_14_0_ATIME),
        ("COMP_14_0_RTIME", COMP_14_0_RTIME),
        ("DELAY_14_0", DELAY_14_0),
        ("METER_14_0", METER_14_0),
        ("METER_14_1", METER_14_1),
        ("POLARITY_OUT_14_0", POLARITY_OUT_14_0),
        ("PEQ_14_1", PEQ_14_1),
        ("PEQ_14_2", PEQ_14_2),
        ("PEQ_14_3", PEQ_14_3),
        ("PEQ_14_4", PEQ_14_4),
        ("PEQ_14_5", PEQ_14_5),
        ("PEQ_14_6", PEQ_14_6),
        ("PEQ_14_7", PEQ_14_7),
        ("PEQ_14_8", PEQ_14_8),
        ("PEQ_14_9", PEQ_14_9),
        ("PEQ_14_10", PEQ_14_10),
        ("BPF_14_1", BPF_14_1),
        ("BPF_14_5", BPF_14_5),
        ("D_GAIN_15_0_STATUS", D_GAIN_15_0_STATUS),
        ("COMP_15_0_STATUS", COMP_15_0_STATUS),
        ("D_GAIN_15_0", D_GAIN_15_0),
        ("COMP_15_0_THRESHOLD", COMP_15_0_THRESHOLD),
        ("COMP_15_0_GAIN", COMP_15_0_GAIN),
        ("COMP_15_0_RATIO", COMP_15_0_RATIO),
        ("COMP_15_0_KNEE", COMP_15_0_KNEE),
        ("COMP_15_0_ATIME", COMP_15_0_ATIME),
        ("COMP_15_0_RTIME", COMP_15_0_RTIME),
        ("DELAY_15_0", DELAY_15_0),
        ("METER_15_0", METER_15_0),
        ("METER_15_1", METER_15_1),
        ("POLARITY_OUT_15_0", POLARITY_OUT_15_0),
        ("PEQ_15_1", PEQ_15_1),
        ("PEQ_15_2", PEQ_15_2),
        ("PEQ_15_3", PEQ_15_3),
        ("PEQ_15_4", PEQ_15_4),
        ("PEQ_15_5", PEQ_15_5),
        ("PEQ_15_6", PEQ_15_6),
        ("PEQ_15_7", PEQ_15_7),
        ("PEQ_15_8", PEQ_15_8),
        ("PEQ_15_9", PEQ_15_9),
        ("PEQ_15_10", PEQ_15_10),
        ("BPF_15_1", BPF_15_1),
        ("BPF_15_5", BPF_15_5),
        ("D_GAIN_16_0_STATUS", D_GAIN_16_0_STATUS),
        ("COMP_16_0_STATUS", COMP_16_0_STATUS),
        ("D_GAIN_16_0", D_GAIN_16_0),
        ("COMP_16_0_THRESHOLD", COMP_16_0_THRESHOLD),
        ("COMP_16_0_GAIN", COMP_16_0_GAIN),
        ("COMP_16_0_RATIO", COMP_16_0_RATIO),
        ("COMP_16_0_KNEE", COMP_16_0_KNEE),
        ("COMP_16_0_ATIME", COMP_16_0_ATIME),
        ("COMP_16_0_RTIME", COMP_16_0_RTIME),
        ("DELAY_16_0", DELAY_16_0),
        ("METER_16_0", METER_16_0),
        ("METER_16_1", METER_16_1),
        ("POLARITY_OUT_16_0", POLARITY_OUT_16_0),
        ("PEQ_16_1", PEQ_16_1),
        ("PEQ_16_2", PEQ_16_2),
        ("PEQ_16_3", PEQ_16_3),
        ("PEQ_16_4", PEQ_16_4),
        ("PEQ_16_5", PEQ_16_5),
        ("PEQ_16_6", PEQ_16_6),
        ("PEQ_16_7", PEQ_16_7),
        ("PEQ_16_8", PEQ_16_8),
        ("PEQ_16_9", PEQ_16_9),
        ("PEQ_16_10", PEQ_16_10),
        ("BPF_16_1", BPF_16_1),
        ("BPF_16_5", BPF_16_5),
        ("D_GAIN_17_0_STATUS", D_GAIN_17_0_STATUS),
        ("COMP_17_0_STATUS", COMP_17_0_STATUS),
        ("D_GAIN_17_0", D_GAIN_17_0),
        ("COMP_17_0_THRESHOLD", COMP_17_0_THRESHOLD),
        ("COMP_17_0_GAIN", COMP_17_0_GAIN),
        ("COMP_17_0_RATIO", COMP_17_0_RATIO),
        ("COMP_17_0_KNEE", COMP_17_0_KNEE),
        ("COMP_17_0_ATIME", COMP_17_0_ATIME),
        ("COMP_17_0_RTIME", COMP_17_0_RTIME),
        ("DELAY_17_0", DELAY_17_0),
        ("METER_17_0", METER_17_0),
        ("METER_17_1", METER_17_1),
        ("POLARITY_OUT_17_0", POLARITY_OUT_17_0),
        ("PEQ_17_1", PEQ_17_1),
        ("PEQ_17_2", PEQ_17_2),
        ("PEQ_17_3", PEQ_17_3),
        ("PEQ_17_4", PEQ_17_4),
        ("PEQ_17_5", PEQ_17_5),
        ("PEQ_17_6", PEQ_17_6),
        ("PEQ_17_7", PEQ_17_7),
        ("PEQ_17_8", PEQ_17_8),
        ("PEQ_17_9", PEQ_17_9),
        ("PEQ_17_10", PEQ_17_10),
        ("BPF_17_1", BPF_17_1),
        ("BPF_17_5", BPF_17_5),
        ("D_GAIN_18_0_STATUS", D_GAIN_18_0_STATUS),
        ("COMP_18_0_STATUS", COMP_18_0_STATUS),
        ("D_GAIN_18_0", D_GAIN_18_0),
        ("COMP_18_0_THRESHOLD", COMP_18_0_THRESHOLD),
        ("COMP_18_0_GAIN", COMP_18_0_GAIN),
        ("COMP_18_0_RATIO", COMP_18_0_RATIO),
        ("COMP_18_0_KNEE", COMP_18_0_KNEE),
        ("COMP_18_0_ATIME", COMP_18_0_ATIME),
        ("COMP_18_0_RTIME", COMP_18_0_RTIME),
        ("DELAY_18_0", DELAY_18_0),
        ("METER_18_0", METER_18_0),
        ("METER_18_1", METER_18_1),
        ("POLARITY_OUT_18_0", POLARITY_OUT_18_0),
        ("PEQ_18_1", PEQ_18_1),
        ("PEQ_18_2", PEQ_18_2),
        ("PEQ_18_3", PEQ_18_3),
        ("PEQ_18_4", PEQ_18_4),
        ("PEQ_18_5", PEQ_18_5),
        ("PEQ_18_6", PEQ_18_6),
        ("PEQ_18_7", PEQ_18_7),
        ("PEQ_18_8", PEQ_18_8),
        ("PEQ_18_9", PEQ_18_9),
        ("PEQ_18_10", PEQ_18_10),
        ("BPF_18_1", BPF_18_1),
        ("BPF_18_5", BPF_18_5),
        ("D_GAIN_19_0_STATUS", D_GAIN_19_0_STATUS),
        ("COMP_19_0_STATUS", COMP_19_0_STATUS),
        ("D_GAIN_19_0", D_GAIN_19_0),
        ("COMP_19_0_THRESHOLD", COMP_19_0_THRESHOLD),
        ("COMP_19_0_GAIN", COMP_19_0_GAIN),
        ("COMP_19_0_RATIO", COMP_19_0_RATIO),
        ("COMP_19_0_KNEE", COMP_19_0_KNEE),
        ("COMP_19_0_ATIME", COMP_19_0_ATIME),
        ("COMP_19_0_RTIME", COMP_19_0_RTIME),
        ("DELAY_19_0", DELAY_19_0),
        ("METER_19_0", METER_19_0),
        ("METER_19_1", METER_19_1),
        ("POLARITY_OUT_19_0", POLARITY_OUT_19_0),
        ("PEQ_19_1", PEQ_19_1),
        ("PEQ_19_2", PEQ_19_2),
        ("PEQ_19_3", PEQ_19_3),
        ("PEQ_19_4", PEQ_19_4),
        ("PEQ_19_5", PEQ_19_5),
        ("PEQ_19_6", PEQ_19_6),
        ("PEQ_19_7", PEQ_19_7),
        ("PEQ_19_8", PEQ_19_8),
        ("PEQ_19_9", PEQ_19_9),
        ("PEQ_19_10", PEQ_19_10),
        ("BPF_19_1", BPF_19_1),
        ("BPF_19_5", BPF_19_5),
        ("D_GAIN_20_0_STATUS", D_GAIN_20_0_STATUS),
        ("COMP_20_0_STATUS", COMP_20_0_STATUS),
        ("D_GAIN_20_0", D_GAIN_20_0),
        ("COMP_20_0_THRESHOLD", COMP_20_0_THRESHOLD),
        ("COMP_20_0_GAIN", COMP_20_0_GAIN),
        ("COMP_20_0_RATIO", COMP_20_0_RATIO),
        ("COMP_20_0_KNEE", COMP_20_0_KNEE),
        ("COMP_20_0_ATIME", COMP_20_0_ATIME),
        ("COMP_20_0_RTIME", COMP_20_0_RTIME),
        ("DELAY_20_0", DELAY_20_0),
        ("METER_20_0", METER_20_0),
        ("METER_20_1", METER_20_1),
        ("POLARITY_OUT_20_0", POLARITY_OUT_20_0),
        ("PEQ_20_1", PEQ_20_1),
        ("PEQ_20_2", PEQ_20_2),
        ("PEQ_20_3", PEQ_20_3),
        ("PEQ_20_4", PEQ_20_4),
        ("PEQ_20_5", PEQ_20_5),
        ("PEQ_20_6", PEQ_20_6),
        ("PEQ_20_7", PEQ_20_7),
        ("PEQ_20_8", PEQ_20_8),
        ("PEQ_20_9", PEQ_20_9),
        ("PEQ_20_10", PEQ_20_10),
        ("BPF_20_1", BPF_20_1),
        ("BPF_20_5", BPF_20_5),
    ];
}
#[allow(unused_imports)]
use sym::*;
pub const DEVICE: Device = Device {
    product_name: "MiniDSP C-DSP 8x12 v2",
    sources: &[Analog, Toslink, Spdif],
    inputs: &[
        Input {
            gate: Some(Gate {
                enable: D_GAIN_1_0_STATUS,
                gain: D_GAIN_1_0,
            }),
            meter: Some(METER_IN_1),
            routing: &[
                Gate {
                    enable: MIXER_0_0_STATUS,
                    gain: MIXER_0_0,
                },
                Gate {
                    enable: MIXER_0_1_STATUS,
                    gain: MIXER_0_1,
                },
                Gate {
                    enable: MIXER_0_2_STATUS,
                    gain: MIXER_0_2,
                },
                Gate {
                    enable: MIXER_0_3_STATUS,
                    gain: MIXER_0_3,
                },
                Gate {
                    enable: MIXER_0_4_STATUS,
                    gain: MIXER_0_4,
                },
                Gate {
                    enable: MIXER_0_5_STATUS,
                    gain: MIXER_0_5,
                },
                Gate {
                    enable: MIXER_0_6_STATUS,
                    gain: MIXER_0_6,
                },
                Gate {
                    enable: MIXER_0_7_STATUS,
                    gain: MIXER_0_7,
                },
            ],
            peq: &[
                PEQ_1_10, PEQ_1_9, PEQ_1_8, PEQ_1_7, PEQ_1_6, PEQ_1_5, PEQ_1_4, PEQ_1_3, PEQ_1_2,
                PEQ_1_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_2_0_STATUS,
                gain: D_GAIN_2_0,
            }),
            meter: Some(METER_IN_2),
            routing: &[
                Gate {
                    enable: MIXER_1_0_STATUS,
                    gain: MIXER_1_0,
                },
                Gate {
                    enable: MIXER_1_1_STATUS,
                    gain: MIXER_1_1,
                },
                Gate {
                    enable: MIXER_1_2_STATUS,
                    gain: MIXER_1_2,
                },
                Gate {
                    enable: MIXER_1_3_STATUS,
                    gain: MIXER_1_3,
                },
                Gate {
                    enable: MIXER_1_4_STATUS,
                    gain: MIXER_1_4,
                },
                Gate {
                    enable: MIXER_1_5_STATUS,
                    gain: MIXER_1_5,
                },
                Gate {
                    enable: MIXER_1_6_STATUS,
                    gain: MIXER_1_6,
                },
                Gate {
                    enable: MIXER_1_7_STATUS,
                    gain: MIXER_1_7,
                },
            ],
            peq: &[
                PEQ_2_10, PEQ_2_9, PEQ_2_8, PEQ_2_7, PEQ_2_6, PEQ_2_5, PEQ_2_4, PEQ_2_3, PEQ_2_2,
                PEQ_2_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_3_0_STATUS,
                gain: D_GAIN_3_0,
            }),
            meter: Some(METER_IN_3),
            routing: &[
                Gate {
                    enable: MIXER_2_0_STATUS,
                    gain: MIXER_2_0,
                },
                Gate {
                    enable: MIXER_2_1_STATUS,
                    gain: MIXER_2_1,
                },
                Gate {
                    enable: MIXER_2_2_STATUS,
                    gain: MIXER_2_2,
                },
                Gate {
                    enable: MIXER_2_3_STATUS,
                    gain: MIXER_2_3,
                },
                Gate {
                    enable: MIXER_2_4_STATUS,
                    gain: MIXER_2_4,
                },
                Gate {
                    enable: MIXER_2_5_STATUS,
                    gain: MIXER_2_5,
                },
                Gate {
                    enable: MIXER_2_6_STATUS,
                    gain: MIXER_2_6,
                },
                Gate {
                    enable: MIXER_2_7_STATUS,
                    gain: MIXER_2_7,
                },
            ],
            peq: &[
                PEQ_3_10, PEQ_3_9, PEQ_3_8, PEQ_3_7, PEQ_3_6, PEQ_3_5, PEQ_3_4, PEQ_3_3, PEQ_3_2,
                PEQ_3_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_4_0_STATUS,
                gain: D_GAIN_4_0,
            }),
            meter: Some(METER_IN_4),
            routing: &[
                Gate {
                    enable: MIXER_3_0_STATUS,
                    gain: MIXER_3_0,
                },
                Gate {
                    enable: MIXER_3_1_STATUS,
                    gain: MIXER_3_1,
                },
                Gate {
                    enable: MIXER_3_2_STATUS,
                    gain: MIXER_3_2,
                },
                Gate {
                    enable: MIXER_3_3_STATUS,
                    gain: MIXER_3_3,
                },
                Gate {
                    enable: MIXER_3_4_STATUS,
                    gain: MIXER_3_4,
                },
                Gate {
                    enable: MIXER_3_5_STATUS,
                    gain: MIXER_3_5,
                },
                Gate {
                    enable: MIXER_3_6_STATUS,
                    gain: MIXER_3_6,
                },
                Gate {
                    enable: MIXER_3_7_STATUS,
                    gain: MIXER_3_7,
                },
            ],
            peq: &[
                PEQ_4_10, PEQ_4_9, PEQ_4_8, PEQ_4_7, PEQ_4_6, PEQ_4_5, PEQ_4_4, PEQ_4_3, PEQ_4_2,
                PEQ_4_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_5_0_STATUS,
                gain: D_GAIN_5_0,
            }),
            meter: Some(METER_IN_5),
            routing: &[
                Gate {
                    enable: MIXER_4_0_STATUS,
                    gain: MIXER_4_0,
                },
                Gate {
                    enable: MIXER_4_1_STATUS,
                    gain: MIXER_4_1,
                },
                Gate {
                    enable: MIXER_4_2_STATUS,
                    gain: MIXER_4_2,
                },
                Gate {
                    enable: MIXER_4_3_STATUS,
                    gain: MIXER_4_3,
                },
                Gate {
                    enable: MIXER_4_4_STATUS,
                    gain: MIXER_4_4,
                },
                Gate {
                    enable: MIXER_4_5_STATUS,
                    gain: MIXER_4_5,
                },
                Gate {
                    enable: MIXER_4_6_STATUS,
                    gain: MIXER_4_6,
                },
                Gate {
                    enable: MIXER_4_7_STATUS,
                    gain: MIXER_4_7,
                },
            ],
            peq: &[
                PEQ_5_10, PEQ_5_9, PEQ_5_8, PEQ_5_7, PEQ_5_6, PEQ_5_5, PEQ_5_4, PEQ_5_3, PEQ_5_2,
                PEQ_5_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_6_0_STATUS,
                gain: D_GAIN_6_0,
            }),
            meter: Some(METER_IN_6),
            routing: &[
                Gate {
                    enable: MIXER_5_0_STATUS,
                    gain: MIXER_5_0,
                },
                Gate {
                    enable: MIXER_5_1_STATUS,
                    gain: MIXER_5_1,
                },
                Gate {
                    enable: MIXER_5_2_STATUS,
                    gain: MIXER_5_2,
                },
                Gate {
                    enable: MIXER_5_3_STATUS,
                    gain: MIXER_5_3,
                },
                Gate {
                    enable: MIXER_5_4_STATUS,
                    gain: MIXER_5_4,
                },
                Gate {
                    enable: MIXER_5_5_STATUS,
                    gain: MIXER_5_5,
                },
                Gate {
                    enable: MIXER_5_6_STATUS,
                    gain: MIXER_5_6,
                },
                Gate {
                    enable: MIXER_5_7_STATUS,
                    gain: MIXER_5_7,
                },
            ],
            peq: &[
                PEQ_6_10, PEQ_6_9, PEQ_6_8, PEQ_6_7, PEQ_6_6, PEQ_6_5, PEQ_6_4, PEQ_6_3, PEQ_6_2,
                PEQ_6_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_7_0_STATUS,
                gain: D_GAIN_7_0,
            }),
            meter: Some(METER_IN_7),
            routing: &[
                Gate {
                    enable: MIXER_6_0_STATUS,
                    gain: MIXER_6_0,
                },
                Gate {
                    enable: MIXER_6_1_STATUS,
                    gain: MIXER_6_1,
                },
                Gate {
                    enable: MIXER_6_2_STATUS,
                    gain: MIXER_6_2,
                },
                Gate {
                    enable: MIXER_6_3_STATUS,
                    gain: MIXER_6_3,
                },
                Gate {
                    enable: MIXER_6_4_STATUS,
                    gain: MIXER_6_4,
                },
                Gate {
                    enable: MIXER_6_5_STATUS,
                    gain: MIXER_6_5,
                },
                Gate {
                    enable: MIXER_6_6_STATUS,
                    gain: MIXER_6_6,
                },
                Gate {
                    enable: MIXER_6_7_STATUS,
                    gain: MIXER_6_7,
                },
            ],
            peq: &[
                PEQ_7_10, PEQ_7_9, PEQ_7_8, PEQ_7_7, PEQ_7_6, PEQ_7_5, PEQ_7_4, PEQ_7_3, PEQ_7_2,
                PEQ_7_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_8_0_STATUS,
                gain: D_GAIN_8_0,
            }),
            meter: Some(METER_IN_8),
            routing: &[
                Gate {
                    enable: MIXER_7_0_STATUS,
                    gain: MIXER_7_0,
                },
                Gate {
                    enable: MIXER_7_1_STATUS,
                    gain: MIXER_7_1,
                },
                Gate {
                    enable: MIXER_7_2_STATUS,
                    gain: MIXER_7_2,
                },
                Gate {
                    enable: MIXER_7_3_STATUS,
                    gain: MIXER_7_3,
                },
                Gate {
                    enable: MIXER_7_4_STATUS,
                    gain: MIXER_7_4,
                },
                Gate {
                    enable: MIXER_7_5_STATUS,
                    gain: MIXER_7_5,
                },
                Gate {
                    enable: MIXER_7_6_STATUS,
                    gain: MIXER_7_6,
                },
                Gate {
                    enable: MIXER_7_7_STATUS,
                    gain: MIXER_7_7,
                },
            ],
            peq: &[
                PEQ_8_10, PEQ_8_9, PEQ_8_8, PEQ_8_7, PEQ_8_6, PEQ_8_5, PEQ_8_4, PEQ_8_3, PEQ_8_2,
                PEQ_8_1,
            ],
        },
    ],
    outputs: &[
        Output {
            gate: Gate {
                enable: D_GAIN_9_0_STATUS,
                gain: D_GAIN_9_0,
            },
            meter: METER_OUT_1,
            delay_addr: DELAY_9_0,
            invert_addr: POLARITY_OUT_9_0,
            peq: &[
                PEQ_9_10, PEQ_9_9, PEQ_9_8, PEQ_9_7, PEQ_9_6, PEQ_9_5, PEQ_9_4, PEQ_9_3, PEQ_9_2,
                PEQ_9_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_9_1, BPF_9_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_9_0_STATUS,
                threshold: COMP_9_0_THRESHOLD,
                ratio: COMP_9_0_RATIO,
                attack: COMP_9_0_ATIME,
                release: COMP_9_0_RTIME,
                meter: Some(METER_COMP_1),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_10_0_STATUS,
                gain: D_GAIN_10_0,
            },
            meter: METER_OUT_2,
            delay_addr: DELAY_10_0,
            invert_addr: POLARITY_OUT_10_0,
            peq: &[
                PEQ_10_10, PEQ_10_9, PEQ_10_8, PEQ_10_7, PEQ_10_6, PEQ_10_5, PEQ_10_4, PEQ_10_3,
                PEQ_10_2, PEQ_10_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_10_1, BPF_10_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_10_0_STATUS,
                threshold: COMP_10_0_THRESHOLD,
                ratio: COMP_10_0_RATIO,
                attack: COMP_10_0_ATIME,
                release: COMP_10_0_RTIME,
                meter: Some(METER_COMP_2),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_11_0_STATUS,
                gain: D_GAIN_11_0,
            },
            meter: METER_OUT_3,
            delay_addr: DELAY_11_0,
            invert_addr: POLARITY_OUT_11_0,
            peq: &[
                PEQ_11_10, PEQ_11_9, PEQ_11_8, PEQ_11_7, PEQ_11_6, PEQ_11_5, PEQ_11_4, PEQ_11_3,
                PEQ_11_2, PEQ_11_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_11_1, BPF_11_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_11_0_STATUS,
                threshold: COMP_11_0_THRESHOLD,
                ratio: COMP_11_0_RATIO,
                attack: COMP_11_0_ATIME,
                release: COMP_11_0_RTIME,
                meter: Some(METER_COMP_3),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_12_0_STATUS,
                gain: D_GAIN_12_0,
            },
            meter: METER_OUT_4,
            delay_addr: DELAY_12_0,
            invert_addr: POLARITY_OUT_12_0,
            peq: &[
                PEQ_12_10, PEQ_12_9, PEQ_12_8, PEQ_12_7, PEQ_12_6, PEQ_12_5, PEQ_12_4, PEQ_12_3,
                PEQ_12_2, PEQ_12_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_12_1, BPF_12_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_12_0_STATUS,
                threshold: COMP_12_0_THRESHOLD,
                ratio: COMP_12_0_RATIO,
                attack: COMP_12_0_ATIME,
                release: COMP_12_0_RTIME,
                meter: Some(METER_COMP_4),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_13_0_STATUS,
                gain: D_GAIN_13_0,
            },
            meter: METER_OUT_5,
            delay_addr: DELAY_13_0,
            invert_addr: POLARITY_OUT_13_0,
            peq: &[
                PEQ_13_10, PEQ_13_9, PEQ_13_8, PEQ_13_7, PEQ_13_6, PEQ_13_5, PEQ_13_4, PEQ_13_3,
                PEQ_13_2, PEQ_13_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_13_1, BPF_13_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_13_0_STATUS,
                threshold: COMP_13_0_THRESHOLD,
                ratio: COMP_13_0_RATIO,
                attack: COMP_13_0_ATIME,
                release: COMP_13_0_RTIME,
                meter: Some(METER_COMP_5),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_14_0_STATUS,
                gain: D_GAIN_14_0,
            },
            meter: METER_OUT_6,
            delay_addr: DELAY_14_0,
            invert_addr: POLARITY_OUT_14_0,
            peq: &[
                PEQ_14_10, PEQ_14_9, PEQ_14_8, PEQ_14_7, PEQ_14_6, PEQ_14_5, PEQ_14_4, PEQ_14_3,
                PEQ_14_2, PEQ_14_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_14_1, BPF_14_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_14_0_STATUS,
                threshold: COMP_14_0_THRESHOLD,
                ratio: COMP_14_0_RATIO,
                attack: COMP_14_0_ATIME,
                release: COMP_14_0_RTIME,
                meter: Some(METER_COMP_6),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_15_0_STATUS,
                gain: D_GAIN_15_0,
            },
            meter: METER_OUT_7,
            delay_addr: DELAY_15_0,
            invert_addr: POLARITY_OUT_15_0,
            peq: &[
                PEQ_15_10, PEQ_15_9, PEQ_15_8, PEQ_15_7, PEQ_15_6, PEQ_15_5, PEQ_15_4, PEQ_15_3,
                PEQ_15_2, PEQ_15_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_15_1, BPF_15_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_15_0_STATUS,
                threshold: COMP_15_0_THRESHOLD,
                ratio: COMP_15_0_RATIO,
                attack: COMP_15_0_ATIME,
                release: COMP_15_0_RTIME,
                meter: Some(METER_COMP_7),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_16_0_STATUS,
                gain: D_GAIN_16_0,
            },
            meter: METER_OUT_8,
            delay_addr: DELAY_16_0,
            invert_addr: POLARITY_OUT_16_0,
            peq: &[
                PEQ_16_10, PEQ_16_9, PEQ_16_8, PEQ_16_7, PEQ_16_6, PEQ_16_5, PEQ_16_4, PEQ_16_3,
                PEQ_16_2, PEQ_16_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_16_1, BPF_16_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_16_0_STATUS,
                threshold: COMP_16_0_THRESHOLD,
                ratio: COMP_16_0_RATIO,
                attack: COMP_16_0_ATIME,
                release: COMP_16_0_RTIME,
                meter: Some(METER_COMP_8),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_17_0_STATUS,
                gain: D_GAIN_17_0,
            },
            meter: METER_OUT_9,
            delay_addr: DELAY_17_0,
            invert_addr: POLARITY_OUT_17_0,
            peq: &[
                PEQ_17_10, PEQ_17_9, PEQ_17_8, PEQ_17_7, PEQ_17_6, PEQ_17_5, PEQ_17_4, PEQ_17_3,
                PEQ_17_2, PEQ_17_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_17_1, BPF_17_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_17_0_STATUS,
                threshold: COMP_17_0_THRESHOLD,
                ratio: COMP_17_0_RATIO,
                attack: COMP_17_0_ATIME,
                release: COMP_17_0_RTIME,
                meter: Some(METER_COMP_9),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_18_0_STATUS,
                gain: D_GAIN_18_0,
            },
            meter: METER_OUT_10,
            delay_addr: DELAY_18_0,
            invert_addr: POLARITY_OUT_18_0,
            peq: &[
                PEQ_18_10, PEQ_18_9, PEQ_18_8, PEQ_18_7, PEQ_18_6, PEQ_18_5, PEQ_18_4, PEQ_18_3,
                PEQ_18_2, PEQ_18_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_18_1, BPF_18_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_18_0_STATUS,
                threshold: COMP_18_0_THRESHOLD,
                ratio: COMP_18_0_RATIO,
                attack: COMP_18_0_ATIME,
                release: COMP_18_0_RTIME,
                meter: Some(METER_COMP_10),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_19_0_STATUS,
                gain: D_GAIN_19_0,
            },
            meter: METER_OUT_11,
            delay_addr: DELAY_19_0,
            invert_addr: POLARITY_OUT_19_0,
            peq: &[
                PEQ_19_10, PEQ_19_9, PEQ_19_8, PEQ_19_7, PEQ_19_6, PEQ_19_5, PEQ_19_4, PEQ_19_3,
                PEQ_19_2, PEQ_19_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_19_1, BPF_19_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_19_0_STATUS,
                threshold: COMP_19_0_THRESHOLD,
                ratio: COMP_19_0_RATIO,
                attack: COMP_19_0_ATIME,
                release: COMP_19_0_RTIME,
                meter: Some(METER_COMP_11),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_20_0_STATUS,
                gain: D_GAIN_20_0,
            },
            meter: METER_OUT_12,
            delay_addr: DELAY_20_0,
            invert_addr: POLARITY_OUT_20_0,
            peq: &[
                PEQ_20_10, PEQ_20_9, PEQ_20_8, PEQ_20_7, PEQ_20_6, PEQ_20_5, PEQ_20_4, PEQ_20_3,
                PEQ_20_2, PEQ_20_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_20_1, BPF_20_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_20_0_STATUS,
                threshold: COMP_20_0_THRESHOLD,
                ratio: COMP_20_0_RATIO,
                attack: COMP_20_0_ATIME,
                release: COMP_20_0_RTIME,
                meter: Some(METER_COMP_12),
            }),
            fir: None,
        },
    ],
    fir_max_taps: 0,
    internal_sampling_rate: 0,
    #[cfg(feature = "symbols")]
    symbols: SYMBOLS,
};
