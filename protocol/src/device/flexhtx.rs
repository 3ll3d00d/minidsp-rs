//
// This file is generated by `minidsp-devtools codegen`. DO NOT EDIT.
//
use super::*;
pub mod sym {
    #[allow(dead_code)]
    pub const BM_BPF_ALL_1: u16 = 0;
    pub const BM_BPF_ALL_5: u16 = 20;
    pub const BM_D_GAIN_1_STATUS: u16 = 40;
    pub const BM_D_GAIN_2_STATUS: u16 = 41;
    pub const BM_D_GAIN_3_STATUS: u16 = 42;
    pub const BM_D_GAIN_4_STATUS: u16 = 43;
    pub const BM_D_GAIN_5_STATUS: u16 = 44;
    pub const BM_D_GAIN_6_STATUS: u16 = 45;
    pub const BM_D_GAIN_7_STATUS: u16 = 46;
    pub const BM_D_GAIN_8_STATUS: u16 = 47;
    pub const BM_D_GAIN_1: u16 = 48;
    pub const BM_D_GAIN_2: u16 = 49;
    pub const BM_D_GAIN_3: u16 = 50;
    pub const BM_D_GAIN_4: u16 = 51;
    pub const BM_D_GAIN_5: u16 = 52;
    pub const BM_D_GAIN_6: u16 = 53;
    pub const BM_D_GAIN_7: u16 = 54;
    pub const BM_D_GAIN_8: u16 = 55;
    pub const BM_MIXER_1_1_STATUS: u16 = 56;
    pub const BM_MIXER_1_2_STATUS: u16 = 57;
    pub const BM_MIXER_1_3_STATUS: u16 = 58;
    pub const BM_MIXER_1_4_STATUS: u16 = 59;
    pub const BM_MIXER_1_5_STATUS: u16 = 60;
    pub const BM_MIXER_1_6_STATUS: u16 = 61;
    pub const BM_MIXER_1_7_STATUS: u16 = 62;
    pub const BM_MIXER_1_8_STATUS: u16 = 63;
    pub const BM_MIXER_2_1_STATUS: u16 = 64;
    pub const BM_MIXER_2_2_STATUS: u16 = 65;
    pub const BM_MIXER_2_3_STATUS: u16 = 66;
    pub const BM_MIXER_2_4_STATUS: u16 = 67;
    pub const BM_MIXER_2_5_STATUS: u16 = 68;
    pub const BM_MIXER_2_6_STATUS: u16 = 69;
    pub const BM_MIXER_2_7_STATUS: u16 = 70;
    pub const BM_MIXER_2_8_STATUS: u16 = 71;
    pub const BM_MIXER_3_1_STATUS: u16 = 72;
    pub const BM_MIXER_3_2_STATUS: u16 = 73;
    pub const BM_MIXER_3_3_STATUS: u16 = 74;
    pub const BM_MIXER_3_4_STATUS: u16 = 75;
    pub const BM_MIXER_3_5_STATUS: u16 = 76;
    pub const BM_MIXER_3_6_STATUS: u16 = 77;
    pub const BM_MIXER_3_7_STATUS: u16 = 78;
    pub const BM_MIXER_3_8_STATUS: u16 = 79;
    pub const BM_MIXER_4_1_STATUS: u16 = 80;
    pub const BM_MIXER_4_2_STATUS: u16 = 81;
    pub const BM_MIXER_4_3_STATUS: u16 = 82;
    pub const BM_MIXER_4_4_STATUS: u16 = 83;
    pub const BM_MIXER_4_5_STATUS: u16 = 84;
    pub const BM_MIXER_4_6_STATUS: u16 = 85;
    pub const BM_MIXER_4_7_STATUS: u16 = 86;
    pub const BM_MIXER_4_8_STATUS: u16 = 87;
    pub const BM_MIXER_5_1_STATUS: u16 = 88;
    pub const BM_MIXER_5_2_STATUS: u16 = 89;
    pub const BM_MIXER_5_3_STATUS: u16 = 90;
    pub const BM_MIXER_5_4_STATUS: u16 = 91;
    pub const BM_MIXER_5_5_STATUS: u16 = 92;
    pub const BM_MIXER_5_6_STATUS: u16 = 93;
    pub const BM_MIXER_5_7_STATUS: u16 = 94;
    pub const BM_MIXER_5_8_STATUS: u16 = 95;
    pub const BM_MIXER_6_1_STATUS: u16 = 96;
    pub const BM_MIXER_6_2_STATUS: u16 = 97;
    pub const BM_MIXER_6_3_STATUS: u16 = 98;
    pub const BM_MIXER_6_4_STATUS: u16 = 99;
    pub const BM_MIXER_6_5_STATUS: u16 = 100;
    pub const BM_MIXER_6_6_STATUS: u16 = 101;
    pub const BM_MIXER_6_7_STATUS: u16 = 102;
    pub const BM_MIXER_6_8_STATUS: u16 = 103;
    pub const BM_MIXER_7_1_STATUS: u16 = 104;
    pub const BM_MIXER_7_2_STATUS: u16 = 105;
    pub const BM_MIXER_7_3_STATUS: u16 = 106;
    pub const BM_MIXER_7_4_STATUS: u16 = 107;
    pub const BM_MIXER_7_5_STATUS: u16 = 108;
    pub const BM_MIXER_7_6_STATUS: u16 = 109;
    pub const BM_MIXER_7_7_STATUS: u16 = 110;
    pub const BM_MIXER_7_8_STATUS: u16 = 111;
    pub const BM_MIXER_8_1_STATUS: u16 = 112;
    pub const BM_MIXER_8_2_STATUS: u16 = 113;
    pub const BM_MIXER_8_3_STATUS: u16 = 114;
    pub const BM_MIXER_8_4_STATUS: u16 = 115;
    pub const BM_MIXER_8_5_STATUS: u16 = 116;
    pub const BM_MIXER_8_6_STATUS: u16 = 117;
    pub const BM_MIXER_8_7_STATUS: u16 = 118;
    pub const BM_MIXER_8_8_STATUS: u16 = 119;
    pub const BM_MIXER_9_1_STATUS: u16 = 120;
    pub const BM_MIXER_9_2_STATUS: u16 = 121;
    pub const BM_MIXER_9_3_STATUS: u16 = 122;
    pub const BM_MIXER_9_4_STATUS: u16 = 123;
    pub const BM_MIXER_9_5_STATUS: u16 = 124;
    pub const BM_MIXER_9_6_STATUS: u16 = 125;
    pub const BM_MIXER_9_7_STATUS: u16 = 126;
    pub const BM_MIXER_9_8_STATUS: u16 = 127;
    pub const BM_MIXER_1_1: u16 = 128;
    pub const BM_MIXER_1_2: u16 = 129;
    pub const BM_MIXER_1_3: u16 = 130;
    pub const BM_MIXER_1_4: u16 = 131;
    pub const BM_MIXER_1_5: u16 = 132;
    pub const BM_MIXER_1_6: u16 = 133;
    pub const BM_MIXER_1_7: u16 = 134;
    pub const BM_MIXER_1_8: u16 = 135;
    pub const BM_MIXER_2_1: u16 = 136;
    pub const BM_MIXER_2_2: u16 = 137;
    pub const BM_MIXER_2_3: u16 = 138;
    pub const BM_MIXER_2_4: u16 = 139;
    pub const BM_MIXER_2_5: u16 = 140;
    pub const BM_MIXER_2_6: u16 = 141;
    pub const BM_MIXER_2_7: u16 = 142;
    pub const BM_MIXER_2_8: u16 = 143;
    pub const BM_MIXER_3_1: u16 = 144;
    pub const BM_MIXER_3_2: u16 = 145;
    pub const BM_MIXER_3_3: u16 = 146;
    pub const BM_MIXER_3_4: u16 = 147;
    pub const BM_MIXER_3_5: u16 = 148;
    pub const BM_MIXER_3_6: u16 = 149;
    pub const BM_MIXER_3_7: u16 = 150;
    pub const BM_MIXER_3_8: u16 = 151;
    pub const BM_MIXER_4_1: u16 = 152;
    pub const BM_MIXER_4_2: u16 = 153;
    pub const BM_MIXER_4_3: u16 = 154;
    pub const BM_MIXER_4_4: u16 = 155;
    pub const BM_MIXER_4_5: u16 = 156;
    pub const BM_MIXER_4_6: u16 = 157;
    pub const BM_MIXER_4_7: u16 = 158;
    pub const BM_MIXER_4_8: u16 = 159;
    pub const BM_MIXER_5_1: u16 = 160;
    pub const BM_MIXER_5_2: u16 = 161;
    pub const BM_MIXER_5_3: u16 = 162;
    pub const BM_MIXER_5_4: u16 = 163;
    pub const BM_MIXER_5_5: u16 = 164;
    pub const BM_MIXER_5_6: u16 = 165;
    pub const BM_MIXER_5_7: u16 = 166;
    pub const BM_MIXER_5_8: u16 = 167;
    pub const BM_MIXER_6_1: u16 = 168;
    pub const BM_MIXER_6_2: u16 = 169;
    pub const BM_MIXER_6_3: u16 = 170;
    pub const BM_MIXER_6_4: u16 = 171;
    pub const BM_MIXER_6_5: u16 = 172;
    pub const BM_MIXER_6_6: u16 = 173;
    pub const BM_MIXER_6_7: u16 = 174;
    pub const BM_MIXER_6_8: u16 = 175;
    pub const BM_MIXER_7_1: u16 = 176;
    pub const BM_MIXER_7_2: u16 = 177;
    pub const BM_MIXER_7_3: u16 = 178;
    pub const BM_MIXER_7_4: u16 = 179;
    pub const BM_MIXER_7_5: u16 = 180;
    pub const BM_MIXER_7_6: u16 = 181;
    pub const BM_MIXER_7_7: u16 = 182;
    pub const BM_MIXER_7_8: u16 = 183;
    pub const BM_MIXER_8_1: u16 = 184;
    pub const BM_MIXER_8_2: u16 = 185;
    pub const BM_MIXER_8_3: u16 = 186;
    pub const BM_MIXER_8_4: u16 = 187;
    pub const BM_MIXER_8_5: u16 = 188;
    pub const BM_MIXER_8_6: u16 = 189;
    pub const BM_MIXER_8_7: u16 = 190;
    pub const BM_MIXER_8_8: u16 = 191;
    pub const BM_MIXER_9_1: u16 = 192;
    pub const BM_MIXER_9_2: u16 = 193;
    pub const BM_MIXER_9_3: u16 = 194;
    pub const BM_MIXER_9_4: u16 = 195;
    pub const BM_MIXER_9_5: u16 = 196;
    pub const BM_MIXER_9_6: u16 = 197;
    pub const BM_MIXER_9_7: u16 = 198;
    pub const BM_MIXER_9_8: u16 = 199;
    pub const BM_MIXER_1_1_POL: u16 = 200;
    pub const BM_MIXER_1_2_POL: u16 = 201;
    pub const BM_MIXER_1_3_POL: u16 = 202;
    pub const BM_MIXER_1_4_POL: u16 = 203;
    pub const BM_MIXER_1_5_POL: u16 = 204;
    pub const BM_MIXER_1_6_POL: u16 = 205;
    pub const BM_MIXER_1_7_POL: u16 = 206;
    pub const BM_MIXER_1_8_POL: u16 = 207;
    pub const BM_MIXER_2_1_POL: u16 = 208;
    pub const BM_MIXER_2_2_POL: u16 = 209;
    pub const BM_MIXER_2_3_POL: u16 = 210;
    pub const BM_MIXER_2_4_POL: u16 = 211;
    pub const BM_MIXER_2_5_POL: u16 = 212;
    pub const BM_MIXER_2_6_POL: u16 = 213;
    pub const BM_MIXER_2_7_POL: u16 = 214;
    pub const BM_MIXER_2_8_POL: u16 = 215;
    pub const BM_MIXER_3_1_POL: u16 = 216;
    pub const BM_MIXER_3_2_POL: u16 = 217;
    pub const BM_MIXER_3_3_POL: u16 = 218;
    pub const BM_MIXER_3_4_POL: u16 = 219;
    pub const BM_MIXER_3_5_POL: u16 = 220;
    pub const BM_MIXER_3_6_POL: u16 = 221;
    pub const BM_MIXER_3_7_POL: u16 = 222;
    pub const BM_MIXER_3_8_POL: u16 = 223;
    pub const BM_MIXER_4_1_POL: u16 = 224;
    pub const BM_MIXER_4_2_POL: u16 = 225;
    pub const BM_MIXER_4_3_POL: u16 = 226;
    pub const BM_MIXER_4_4_POL: u16 = 227;
    pub const BM_MIXER_4_5_POL: u16 = 228;
    pub const BM_MIXER_4_6_POL: u16 = 229;
    pub const BM_MIXER_4_7_POL: u16 = 230;
    pub const BM_MIXER_4_8_POL: u16 = 231;
    pub const BM_MIXER_5_1_POL: u16 = 232;
    pub const BM_MIXER_5_2_POL: u16 = 233;
    pub const BM_MIXER_5_3_POL: u16 = 234;
    pub const BM_MIXER_5_4_POL: u16 = 235;
    pub const BM_MIXER_5_5_POL: u16 = 236;
    pub const BM_MIXER_5_6_POL: u16 = 237;
    pub const BM_MIXER_5_7_POL: u16 = 238;
    pub const BM_MIXER_5_8_POL: u16 = 239;
    pub const BM_MIXER_6_1_POL: u16 = 240;
    pub const BM_MIXER_6_2_POL: u16 = 241;
    pub const BM_MIXER_6_3_POL: u16 = 242;
    pub const BM_MIXER_6_4_POL: u16 = 243;
    pub const BM_MIXER_6_5_POL: u16 = 244;
    pub const BM_MIXER_6_6_POL: u16 = 245;
    pub const BM_MIXER_6_7_POL: u16 = 246;
    pub const BM_MIXER_6_8_POL: u16 = 247;
    pub const BM_MIXER_7_1_POL: u16 = 248;
    pub const BM_MIXER_7_2_POL: u16 = 249;
    pub const BM_MIXER_7_3_POL: u16 = 250;
    pub const BM_MIXER_7_4_POL: u16 = 251;
    pub const BM_MIXER_7_5_POL: u16 = 252;
    pub const BM_MIXER_7_6_POL: u16 = 253;
    pub const BM_MIXER_7_7_POL: u16 = 254;
    pub const BM_MIXER_7_8_POL: u16 = 255;
    pub const BM_MIXER_8_1_POL: u16 = 256;
    pub const BM_MIXER_8_2_POL: u16 = 257;
    pub const BM_MIXER_8_3_POL: u16 = 258;
    pub const BM_MIXER_8_4_POL: u16 = 259;
    pub const BM_MIXER_8_5_POL: u16 = 260;
    pub const BM_MIXER_8_6_POL: u16 = 261;
    pub const BM_MIXER_8_7_POL: u16 = 262;
    pub const BM_MIXER_8_8_POL: u16 = 263;
    pub const BM_MIXER_9_1_POL: u16 = 264;
    pub const BM_MIXER_9_2_POL: u16 = 265;
    pub const BM_MIXER_9_3_POL: u16 = 266;
    pub const BM_MIXER_9_4_POL: u16 = 267;
    pub const BM_MIXER_9_5_POL: u16 = 268;
    pub const BM_MIXER_9_6_POL: u16 = 269;
    pub const BM_MIXER_9_7_POL: u16 = 270;
    pub const BM_MIXER_9_8_POL: u16 = 271;
    pub const BM_BPF_1_1: u16 = 272;
    pub const BM_BPF_1_5: u16 = 292;
    pub const BM_BPF_2_1: u16 = 312;
    pub const BM_BPF_2_5: u16 = 332;
    pub const BM_BPF_3_1: u16 = 352;
    pub const BM_BPF_3_5: u16 = 372;
    pub const BM_BPF_4_1: u16 = 392;
    pub const BM_BPF_4_5: u16 = 412;
    pub const BM_BPF_5_1: u16 = 432;
    pub const BM_BPF_5_5: u16 = 452;
    pub const BM_BPF_6_1: u16 = 472;
    pub const BM_BPF_6_5: u16 = 492;
    pub const BM_BPF_7_1: u16 = 512;
    pub const BM_BPF_7_5: u16 = 532;
    pub const BM_BPF_8_1: u16 = 552;
    pub const BM_BPF_8_5: u16 = 572;
    pub const OUT_MIXER_0_0_STATUS: u16 = 592;
    pub const OUT_MIXER_0_1_STATUS: u16 = 593;
    pub const OUT_MIXER_0_2_STATUS: u16 = 594;
    pub const OUT_MIXER_0_3_STATUS: u16 = 595;
    pub const OUT_MIXER_0_4_STATUS: u16 = 596;
    pub const OUT_MIXER_0_5_STATUS: u16 = 597;
    pub const OUT_MIXER_0_6_STATUS: u16 = 598;
    pub const OUT_MIXER_0_7_STATUS: u16 = 599;
    pub const OUT_MIXER_1_0_STATUS: u16 = 600;
    pub const OUT_MIXER_1_1_STATUS: u16 = 601;
    pub const OUT_MIXER_1_2_STATUS: u16 = 602;
    pub const OUT_MIXER_1_3_STATUS: u16 = 603;
    pub const OUT_MIXER_1_4_STATUS: u16 = 604;
    pub const OUT_MIXER_1_5_STATUS: u16 = 605;
    pub const OUT_MIXER_1_6_STATUS: u16 = 606;
    pub const OUT_MIXER_1_7_STATUS: u16 = 607;
    pub const OUT_MIXER_2_0_STATUS: u16 = 608;
    pub const OUT_MIXER_2_1_STATUS: u16 = 609;
    pub const OUT_MIXER_2_2_STATUS: u16 = 610;
    pub const OUT_MIXER_2_3_STATUS: u16 = 611;
    pub const OUT_MIXER_2_4_STATUS: u16 = 612;
    pub const OUT_MIXER_2_5_STATUS: u16 = 613;
    pub const OUT_MIXER_2_6_STATUS: u16 = 614;
    pub const OUT_MIXER_2_7_STATUS: u16 = 615;
    pub const OUT_MIXER_3_0_STATUS: u16 = 616;
    pub const OUT_MIXER_3_1_STATUS: u16 = 617;
    pub const OUT_MIXER_3_2_STATUS: u16 = 618;
    pub const OUT_MIXER_3_3_STATUS: u16 = 619;
    pub const OUT_MIXER_3_4_STATUS: u16 = 620;
    pub const OUT_MIXER_3_5_STATUS: u16 = 621;
    pub const OUT_MIXER_3_6_STATUS: u16 = 622;
    pub const OUT_MIXER_3_7_STATUS: u16 = 623;
    pub const OUT_MIXER_4_0_STATUS: u16 = 624;
    pub const OUT_MIXER_4_1_STATUS: u16 = 625;
    pub const OUT_MIXER_4_2_STATUS: u16 = 626;
    pub const OUT_MIXER_4_3_STATUS: u16 = 627;
    pub const OUT_MIXER_4_4_STATUS: u16 = 628;
    pub const OUT_MIXER_4_5_STATUS: u16 = 629;
    pub const OUT_MIXER_4_6_STATUS: u16 = 630;
    pub const OUT_MIXER_4_7_STATUS: u16 = 631;
    pub const OUT_MIXER_5_0_STATUS: u16 = 632;
    pub const OUT_MIXER_5_1_STATUS: u16 = 633;
    pub const OUT_MIXER_5_2_STATUS: u16 = 634;
    pub const OUT_MIXER_5_3_STATUS: u16 = 635;
    pub const OUT_MIXER_5_4_STATUS: u16 = 636;
    pub const OUT_MIXER_5_5_STATUS: u16 = 637;
    pub const OUT_MIXER_5_6_STATUS: u16 = 638;
    pub const OUT_MIXER_5_7_STATUS: u16 = 639;
    pub const OUT_MIXER_6_0_STATUS: u16 = 640;
    pub const OUT_MIXER_6_1_STATUS: u16 = 641;
    pub const OUT_MIXER_6_2_STATUS: u16 = 642;
    pub const OUT_MIXER_6_3_STATUS: u16 = 643;
    pub const OUT_MIXER_6_4_STATUS: u16 = 644;
    pub const OUT_MIXER_6_5_STATUS: u16 = 645;
    pub const OUT_MIXER_6_6_STATUS: u16 = 646;
    pub const OUT_MIXER_6_7_STATUS: u16 = 647;
    pub const OUT_MIXER_7_0_STATUS: u16 = 648;
    pub const OUT_MIXER_7_1_STATUS: u16 = 649;
    pub const OUT_MIXER_7_2_STATUS: u16 = 650;
    pub const OUT_MIXER_7_3_STATUS: u16 = 651;
    pub const OUT_MIXER_7_4_STATUS: u16 = 652;
    pub const OUT_MIXER_7_5_STATUS: u16 = 653;
    pub const OUT_MIXER_7_6_STATUS: u16 = 654;
    pub const OUT_MIXER_7_7_STATUS: u16 = 655;
    pub const OUT_MIXER_0_0: u16 = 656;
    pub const OUT_MIXER_0_1: u16 = 657;
    pub const OUT_MIXER_0_2: u16 = 658;
    pub const OUT_MIXER_0_3: u16 = 659;
    pub const OUT_MIXER_0_4: u16 = 660;
    pub const OUT_MIXER_0_5: u16 = 661;
    pub const OUT_MIXER_0_6: u16 = 662;
    pub const OUT_MIXER_0_7: u16 = 663;
    pub const OUT_MIXER_1_0: u16 = 664;
    pub const OUT_MIXER_1_1: u16 = 665;
    pub const OUT_MIXER_1_2: u16 = 666;
    pub const OUT_MIXER_1_3: u16 = 667;
    pub const OUT_MIXER_1_4: u16 = 668;
    pub const OUT_MIXER_1_5: u16 = 669;
    pub const OUT_MIXER_1_6: u16 = 670;
    pub const OUT_MIXER_1_7: u16 = 671;
    pub const OUT_MIXER_2_0: u16 = 672;
    pub const OUT_MIXER_2_1: u16 = 673;
    pub const OUT_MIXER_2_2: u16 = 674;
    pub const OUT_MIXER_2_3: u16 = 675;
    pub const OUT_MIXER_2_4: u16 = 676;
    pub const OUT_MIXER_2_5: u16 = 677;
    pub const OUT_MIXER_2_6: u16 = 678;
    pub const OUT_MIXER_2_7: u16 = 679;
    pub const OUT_MIXER_3_0: u16 = 680;
    pub const OUT_MIXER_3_1: u16 = 681;
    pub const OUT_MIXER_3_2: u16 = 682;
    pub const OUT_MIXER_3_3: u16 = 683;
    pub const OUT_MIXER_3_4: u16 = 684;
    pub const OUT_MIXER_3_5: u16 = 685;
    pub const OUT_MIXER_3_6: u16 = 686;
    pub const OUT_MIXER_3_7: u16 = 687;
    pub const OUT_MIXER_4_0: u16 = 688;
    pub const OUT_MIXER_4_1: u16 = 689;
    pub const OUT_MIXER_4_2: u16 = 690;
    pub const OUT_MIXER_4_3: u16 = 691;
    pub const OUT_MIXER_4_4: u16 = 692;
    pub const OUT_MIXER_4_5: u16 = 693;
    pub const OUT_MIXER_4_6: u16 = 694;
    pub const OUT_MIXER_4_7: u16 = 695;
    pub const OUT_MIXER_5_0: u16 = 696;
    pub const OUT_MIXER_5_1: u16 = 697;
    pub const OUT_MIXER_5_2: u16 = 698;
    pub const OUT_MIXER_5_3: u16 = 699;
    pub const OUT_MIXER_5_4: u16 = 700;
    pub const OUT_MIXER_5_5: u16 = 701;
    pub const OUT_MIXER_5_6: u16 = 702;
    pub const OUT_MIXER_5_7: u16 = 703;
    pub const OUT_MIXER_6_0: u16 = 704;
    pub const OUT_MIXER_6_1: u16 = 705;
    pub const OUT_MIXER_6_2: u16 = 706;
    pub const OUT_MIXER_6_3: u16 = 707;
    pub const OUT_MIXER_6_4: u16 = 708;
    pub const OUT_MIXER_6_5: u16 = 709;
    pub const OUT_MIXER_6_6: u16 = 710;
    pub const OUT_MIXER_6_7: u16 = 711;
    pub const OUT_MIXER_7_0: u16 = 712;
    pub const OUT_MIXER_7_1: u16 = 713;
    pub const OUT_MIXER_7_2: u16 = 714;
    pub const OUT_MIXER_7_3: u16 = 715;
    pub const OUT_MIXER_7_4: u16 = 716;
    pub const OUT_MIXER_7_5: u16 = 717;
    pub const OUT_MIXER_7_6: u16 = 718;
    pub const OUT_MIXER_7_7: u16 = 719;
    pub const OUT_MIXER_0_0_POL: u16 = 720;
    pub const OUT_MIXER_0_1_POL: u16 = 721;
    pub const OUT_MIXER_0_2_POL: u16 = 722;
    pub const OUT_MIXER_0_3_POL: u16 = 723;
    pub const OUT_MIXER_0_4_POL: u16 = 724;
    pub const OUT_MIXER_0_5_POL: u16 = 725;
    pub const OUT_MIXER_0_6_POL: u16 = 726;
    pub const OUT_MIXER_0_7_POL: u16 = 727;
    pub const OUT_MIXER_1_0_POL: u16 = 728;
    pub const OUT_MIXER_1_1_POL: u16 = 729;
    pub const OUT_MIXER_1_2_POL: u16 = 730;
    pub const OUT_MIXER_1_3_POL: u16 = 731;
    pub const OUT_MIXER_1_4_POL: u16 = 732;
    pub const OUT_MIXER_1_5_POL: u16 = 733;
    pub const OUT_MIXER_1_6_POL: u16 = 734;
    pub const OUT_MIXER_1_7_POL: u16 = 735;
    pub const OUT_MIXER_2_0_POL: u16 = 736;
    pub const OUT_MIXER_2_1_POL: u16 = 737;
    pub const OUT_MIXER_2_2_POL: u16 = 738;
    pub const OUT_MIXER_2_3_POL: u16 = 739;
    pub const OUT_MIXER_2_4_POL: u16 = 740;
    pub const OUT_MIXER_2_5_POL: u16 = 741;
    pub const OUT_MIXER_2_6_POL: u16 = 742;
    pub const OUT_MIXER_2_7_POL: u16 = 743;
    pub const OUT_MIXER_3_0_POL: u16 = 744;
    pub const OUT_MIXER_3_1_POL: u16 = 745;
    pub const OUT_MIXER_3_2_POL: u16 = 746;
    pub const OUT_MIXER_3_3_POL: u16 = 747;
    pub const OUT_MIXER_3_4_POL: u16 = 748;
    pub const OUT_MIXER_3_5_POL: u16 = 749;
    pub const OUT_MIXER_3_6_POL: u16 = 750;
    pub const OUT_MIXER_3_7_POL: u16 = 751;
    pub const OUT_MIXER_4_0_POL: u16 = 752;
    pub const OUT_MIXER_4_1_POL: u16 = 753;
    pub const OUT_MIXER_4_2_POL: u16 = 754;
    pub const OUT_MIXER_4_3_POL: u16 = 755;
    pub const OUT_MIXER_4_4_POL: u16 = 756;
    pub const OUT_MIXER_4_5_POL: u16 = 757;
    pub const OUT_MIXER_4_6_POL: u16 = 758;
    pub const OUT_MIXER_4_7_POL: u16 = 759;
    pub const OUT_MIXER_5_0_POL: u16 = 760;
    pub const OUT_MIXER_5_1_POL: u16 = 761;
    pub const OUT_MIXER_5_2_POL: u16 = 762;
    pub const OUT_MIXER_5_3_POL: u16 = 763;
    pub const OUT_MIXER_5_4_POL: u16 = 764;
    pub const OUT_MIXER_5_5_POL: u16 = 765;
    pub const OUT_MIXER_5_6_POL: u16 = 766;
    pub const OUT_MIXER_5_7_POL: u16 = 767;
    pub const OUT_MIXER_6_0_POL: u16 = 768;
    pub const OUT_MIXER_6_1_POL: u16 = 769;
    pub const OUT_MIXER_6_2_POL: u16 = 770;
    pub const OUT_MIXER_6_3_POL: u16 = 771;
    pub const OUT_MIXER_6_4_POL: u16 = 772;
    pub const OUT_MIXER_6_5_POL: u16 = 773;
    pub const OUT_MIXER_6_6_POL: u16 = 774;
    pub const OUT_MIXER_6_7_POL: u16 = 775;
    pub const OUT_MIXER_7_0_POL: u16 = 776;
    pub const OUT_MIXER_7_1_POL: u16 = 777;
    pub const OUT_MIXER_7_2_POL: u16 = 778;
    pub const OUT_MIXER_7_3_POL: u16 = 779;
    pub const OUT_MIXER_7_4_POL: u16 = 780;
    pub const OUT_MIXER_7_5_POL: u16 = 781;
    pub const OUT_MIXER_7_6_POL: u16 = 782;
    pub const OUT_MIXER_7_7_POL: u16 = 783;
    pub const METER_IN_1: u16 = 784;
    pub const METER_IN_2: u16 = 785;
    pub const METER_IN_3: u16 = 786;
    pub const METER_IN_4: u16 = 787;
    pub const METER_IN_5: u16 = 788;
    pub const METER_IN_6: u16 = 789;
    pub const METER_IN_7: u16 = 790;
    pub const METER_IN_8: u16 = 791;
    pub const METER_D_IN_1: u16 = 792;
    pub const METER_D_IN_2: u16 = 793;
    pub const METER_D_IN_3: u16 = 794;
    pub const METER_D_IN_4: u16 = 795;
    pub const METER_D_IN_5: u16 = 796;
    pub const METER_D_IN_6: u16 = 797;
    pub const METER_D_IN_7: u16 = 798;
    pub const METER_D_IN_8: u16 = 799;
    pub const METER_D_OUT_1: u16 = 800;
    pub const METER_D_OUT_2: u16 = 801;
    pub const METER_D_OUT_3: u16 = 802;
    pub const METER_D_OUT_4: u16 = 803;
    pub const METER_D_OUT_5: u16 = 804;
    pub const METER_D_OUT_6: u16 = 805;
    pub const METER_D_OUT_7: u16 = 806;
    pub const METER_D_OUT_8: u16 = 807;
    pub const METER_COMP_1: u16 = 808;
    pub const METER_COMP_2: u16 = 809;
    pub const METER_COMP_3: u16 = 810;
    pub const METER_COMP_4: u16 = 811;
    pub const METER_COMP_5: u16 = 812;
    pub const METER_COMP_6: u16 = 813;
    pub const METER_COMP_7: u16 = 814;
    pub const METER_COMP_8: u16 = 815;
    pub const METER_OUT_1: u16 = 816;
    pub const METER_OUT_2: u16 = 817;
    pub const METER_OUT_3: u16 = 818;
    pub const METER_OUT_4: u16 = 819;
    pub const METER_OUT_5: u16 = 820;
    pub const METER_OUT_6: u16 = 821;
    pub const METER_OUT_7: u16 = 822;
    pub const METER_OUT_8: u16 = 823;
    pub const D_GAIN_1_0_STATUS: u16 = 824;
    pub const COMP_1_0_STATUS: u16 = 825;
    pub const D_GAIN_1_0: u16 = 826;
    pub const COMP_1_0_THRESHOLD: u16 = 827;
    pub const COMP_1_0_GAIN: u16 = 828;
    pub const COMP_1_0_RATIO: u16 = 829;
    pub const COMP_1_0_KNEE: u16 = 830;
    pub const COMP_1_0_ATIME: u16 = 831;
    pub const COMP_1_0_RTIME: u16 = 832;
    pub const DELAY_1_0: u16 = 833;
    pub const METER_1_0: u16 = 834;
    pub const METER_1_1: u16 = 835;
    pub const METER_1_2: u16 = 836;
    pub const POLARITY_OUT_1_0: u16 = 837;
    pub const PEQ_1_1: u16 = 838;
    pub const PEQ_1_2: u16 = 843;
    pub const PEQ_1_3: u16 = 848;
    pub const PEQ_1_4: u16 = 853;
    pub const PEQ_1_5: u16 = 858;
    pub const PEQ_1_6: u16 = 863;
    pub const PEQ_1_7: u16 = 868;
    pub const PEQ_1_8: u16 = 873;
    pub const PEQ_1_9: u16 = 878;
    pub const PEQ_1_10: u16 = 883;
    pub const BPF_1_1: u16 = 888;
    pub const BPF_1_5: u16 = 908;
    pub const D_GAIN_2_0_STATUS: u16 = 928;
    pub const COMP_2_0_STATUS: u16 = 929;
    pub const D_GAIN_2_0: u16 = 930;
    pub const COMP_2_0_THRESHOLD: u16 = 931;
    pub const COMP_2_0_GAIN: u16 = 932;
    pub const COMP_2_0_RATIO: u16 = 933;
    pub const COMP_2_0_KNEE: u16 = 934;
    pub const COMP_2_0_ATIME: u16 = 935;
    pub const COMP_2_0_RTIME: u16 = 936;
    pub const DELAY_2_0: u16 = 937;
    pub const METER_2_0: u16 = 938;
    pub const METER_2_1: u16 = 939;
    pub const METER_2_2: u16 = 940;
    pub const POLARITY_OUT_2_0: u16 = 941;
    pub const PEQ_2_1: u16 = 942;
    pub const PEQ_2_2: u16 = 947;
    pub const PEQ_2_3: u16 = 952;
    pub const PEQ_2_4: u16 = 957;
    pub const PEQ_2_5: u16 = 962;
    pub const PEQ_2_6: u16 = 967;
    pub const PEQ_2_7: u16 = 972;
    pub const PEQ_2_8: u16 = 977;
    pub const PEQ_2_9: u16 = 982;
    pub const PEQ_2_10: u16 = 987;
    pub const BPF_2_1: u16 = 992;
    pub const BPF_2_5: u16 = 1012;
    pub const D_GAIN_3_0_STATUS: u16 = 1032;
    pub const COMP_3_0_STATUS: u16 = 1033;
    pub const D_GAIN_3_0: u16 = 1034;
    pub const COMP_3_0_THRESHOLD: u16 = 1035;
    pub const COMP_3_0_GAIN: u16 = 1036;
    pub const COMP_3_0_RATIO: u16 = 1037;
    pub const COMP_3_0_KNEE: u16 = 1038;
    pub const COMP_3_0_ATIME: u16 = 1039;
    pub const COMP_3_0_RTIME: u16 = 1040;
    pub const DELAY_3_0: u16 = 1041;
    pub const METER_3_0: u16 = 1042;
    pub const METER_3_1: u16 = 1043;
    pub const METER_3_2: u16 = 1044;
    pub const POLARITY_OUT_3_0: u16 = 1045;
    pub const PEQ_3_1: u16 = 1046;
    pub const PEQ_3_2: u16 = 1051;
    pub const PEQ_3_3: u16 = 1056;
    pub const PEQ_3_4: u16 = 1061;
    pub const PEQ_3_5: u16 = 1066;
    pub const PEQ_3_6: u16 = 1071;
    pub const PEQ_3_7: u16 = 1076;
    pub const PEQ_3_8: u16 = 1081;
    pub const PEQ_3_9: u16 = 1086;
    pub const PEQ_3_10: u16 = 1091;
    pub const BPF_3_1: u16 = 1096;
    pub const BPF_3_5: u16 = 1116;
    pub const D_GAIN_4_0_STATUS: u16 = 1136;
    pub const COMP_4_0_STATUS: u16 = 1137;
    pub const D_GAIN_4_0: u16 = 1138;
    pub const COMP_4_0_THRESHOLD: u16 = 1139;
    pub const COMP_4_0_GAIN: u16 = 1140;
    pub const COMP_4_0_RATIO: u16 = 1141;
    pub const COMP_4_0_KNEE: u16 = 1142;
    pub const COMP_4_0_ATIME: u16 = 1143;
    pub const COMP_4_0_RTIME: u16 = 1144;
    pub const DELAY_4_0: u16 = 1145;
    pub const METER_4_0: u16 = 1146;
    pub const METER_4_1: u16 = 1147;
    pub const METER_4_2: u16 = 1148;
    pub const POLARITY_OUT_4_0: u16 = 1149;
    pub const PEQ_4_1: u16 = 1150;
    pub const PEQ_4_2: u16 = 1155;
    pub const PEQ_4_3: u16 = 1160;
    pub const PEQ_4_4: u16 = 1165;
    pub const PEQ_4_5: u16 = 1170;
    pub const PEQ_4_6: u16 = 1175;
    pub const PEQ_4_7: u16 = 1180;
    pub const PEQ_4_8: u16 = 1185;
    pub const PEQ_4_9: u16 = 1190;
    pub const PEQ_4_10: u16 = 1195;
    pub const BPF_4_1: u16 = 1200;
    pub const BPF_4_5: u16 = 1220;
    pub const D_GAIN_5_0_STATUS: u16 = 1240;
    pub const COMP_5_0_STATUS: u16 = 1241;
    pub const D_GAIN_5_0: u16 = 1242;
    pub const COMP_5_0_THRESHOLD: u16 = 1243;
    pub const COMP_5_0_GAIN: u16 = 1244;
    pub const COMP_5_0_RATIO: u16 = 1245;
    pub const COMP_5_0_KNEE: u16 = 1246;
    pub const COMP_5_0_ATIME: u16 = 1247;
    pub const COMP_5_0_RTIME: u16 = 1248;
    pub const DELAY_5_0: u16 = 1249;
    pub const METER_5_0: u16 = 1250;
    pub const METER_5_1: u16 = 1251;
    pub const METER_5_2: u16 = 1252;
    pub const POLARITY_OUT_5_0: u16 = 1253;
    pub const PEQ_5_1: u16 = 1254;
    pub const PEQ_5_2: u16 = 1259;
    pub const PEQ_5_3: u16 = 1264;
    pub const PEQ_5_4: u16 = 1269;
    pub const PEQ_5_5: u16 = 1274;
    pub const PEQ_5_6: u16 = 1279;
    pub const PEQ_5_7: u16 = 1284;
    pub const PEQ_5_8: u16 = 1289;
    pub const PEQ_5_9: u16 = 1294;
    pub const PEQ_5_10: u16 = 1299;
    pub const BPF_5_1: u16 = 1304;
    pub const BPF_5_5: u16 = 1324;
    pub const D_GAIN_6_0_STATUS: u16 = 1344;
    pub const COMP_6_0_STATUS: u16 = 1345;
    pub const D_GAIN_6_0: u16 = 1346;
    pub const COMP_6_0_THRESHOLD: u16 = 1347;
    pub const COMP_6_0_GAIN: u16 = 1348;
    pub const COMP_6_0_RATIO: u16 = 1349;
    pub const COMP_6_0_KNEE: u16 = 1350;
    pub const COMP_6_0_ATIME: u16 = 1351;
    pub const COMP_6_0_RTIME: u16 = 1352;
    pub const DELAY_6_0: u16 = 1353;
    pub const METER_6_0: u16 = 1354;
    pub const METER_6_1: u16 = 1355;
    pub const METER_6_2: u16 = 1356;
    pub const POLARITY_OUT_6_0: u16 = 1357;
    pub const PEQ_6_1: u16 = 1358;
    pub const PEQ_6_2: u16 = 1363;
    pub const PEQ_6_3: u16 = 1368;
    pub const PEQ_6_4: u16 = 1373;
    pub const PEQ_6_5: u16 = 1378;
    pub const PEQ_6_6: u16 = 1383;
    pub const PEQ_6_7: u16 = 1388;
    pub const PEQ_6_8: u16 = 1393;
    pub const PEQ_6_9: u16 = 1398;
    pub const PEQ_6_10: u16 = 1403;
    pub const BPF_6_1: u16 = 1408;
    pub const BPF_6_5: u16 = 1428;
    pub const D_GAIN_7_0_STATUS: u16 = 1448;
    pub const COMP_7_0_STATUS: u16 = 1449;
    pub const D_GAIN_7_0: u16 = 1450;
    pub const COMP_7_0_THRESHOLD: u16 = 1451;
    pub const COMP_7_0_GAIN: u16 = 1452;
    pub const COMP_7_0_RATIO: u16 = 1453;
    pub const COMP_7_0_KNEE: u16 = 1454;
    pub const COMP_7_0_ATIME: u16 = 1455;
    pub const COMP_7_0_RTIME: u16 = 1456;
    pub const DELAY_7_0: u16 = 1457;
    pub const METER_7_0: u16 = 1458;
    pub const METER_7_1: u16 = 1459;
    pub const METER_7_2: u16 = 1460;
    pub const POLARITY_OUT_7_0: u16 = 1461;
    pub const PEQ_7_1: u16 = 1462;
    pub const PEQ_7_2: u16 = 1467;
    pub const PEQ_7_3: u16 = 1472;
    pub const PEQ_7_4: u16 = 1477;
    pub const PEQ_7_5: u16 = 1482;
    pub const PEQ_7_6: u16 = 1487;
    pub const PEQ_7_7: u16 = 1492;
    pub const PEQ_7_8: u16 = 1497;
    pub const PEQ_7_9: u16 = 1502;
    pub const PEQ_7_10: u16 = 1507;
    pub const BPF_7_1: u16 = 1512;
    pub const BPF_7_5: u16 = 1532;
    pub const D_GAIN_8_0_STATUS: u16 = 1552;
    pub const COMP_8_0_STATUS: u16 = 1553;
    pub const D_GAIN_8_0: u16 = 1554;
    pub const COMP_8_0_THRESHOLD: u16 = 1555;
    pub const COMP_8_0_GAIN: u16 = 1556;
    pub const COMP_8_0_RATIO: u16 = 1557;
    pub const COMP_8_0_KNEE: u16 = 1558;
    pub const COMP_8_0_ATIME: u16 = 1559;
    pub const COMP_8_0_RTIME: u16 = 1560;
    pub const DELAY_8_0: u16 = 1561;
    pub const METER_8_0: u16 = 1562;
    pub const METER_8_1: u16 = 1563;
    pub const METER_8_2: u16 = 1564;
    pub const POLARITY_OUT_8_0: u16 = 1565;
    pub const PEQ_8_1: u16 = 1566;
    pub const PEQ_8_2: u16 = 1571;
    pub const PEQ_8_3: u16 = 1576;
    pub const PEQ_8_4: u16 = 1581;
    pub const PEQ_8_5: u16 = 1586;
    pub const PEQ_8_6: u16 = 1591;
    pub const PEQ_8_7: u16 = 1596;
    pub const PEQ_8_8: u16 = 1601;
    pub const PEQ_8_9: u16 = 1606;
    pub const PEQ_8_10: u16 = 1611;
    pub const BPF_8_1: u16 = 1616;
    pub const BPF_8_5: u16 = 1636;
    #[cfg(feature = "symbols")]
    pub const SYMBOLS: &[(&str, u16)] = &[
        ("BM_BPF_ALL_1", BM_BPF_ALL_1),
        ("BM_BPF_ALL_5", BM_BPF_ALL_5),
        ("BM_D_GAIN_1_STATUS", BM_D_GAIN_1_STATUS),
        ("BM_D_GAIN_2_STATUS", BM_D_GAIN_2_STATUS),
        ("BM_D_GAIN_3_STATUS", BM_D_GAIN_3_STATUS),
        ("BM_D_GAIN_4_STATUS", BM_D_GAIN_4_STATUS),
        ("BM_D_GAIN_5_STATUS", BM_D_GAIN_5_STATUS),
        ("BM_D_GAIN_6_STATUS", BM_D_GAIN_6_STATUS),
        ("BM_D_GAIN_7_STATUS", BM_D_GAIN_7_STATUS),
        ("BM_D_GAIN_8_STATUS", BM_D_GAIN_8_STATUS),
        ("BM_D_GAIN_1", BM_D_GAIN_1),
        ("BM_D_GAIN_2", BM_D_GAIN_2),
        ("BM_D_GAIN_3", BM_D_GAIN_3),
        ("BM_D_GAIN_4", BM_D_GAIN_4),
        ("BM_D_GAIN_5", BM_D_GAIN_5),
        ("BM_D_GAIN_6", BM_D_GAIN_6),
        ("BM_D_GAIN_7", BM_D_GAIN_7),
        ("BM_D_GAIN_8", BM_D_GAIN_8),
        ("BM_MIXER_1_1_STATUS", BM_MIXER_1_1_STATUS),
        ("BM_MIXER_1_2_STATUS", BM_MIXER_1_2_STATUS),
        ("BM_MIXER_1_3_STATUS", BM_MIXER_1_3_STATUS),
        ("BM_MIXER_1_4_STATUS", BM_MIXER_1_4_STATUS),
        ("BM_MIXER_1_5_STATUS", BM_MIXER_1_5_STATUS),
        ("BM_MIXER_1_6_STATUS", BM_MIXER_1_6_STATUS),
        ("BM_MIXER_1_7_STATUS", BM_MIXER_1_7_STATUS),
        ("BM_MIXER_1_8_STATUS", BM_MIXER_1_8_STATUS),
        ("BM_MIXER_2_1_STATUS", BM_MIXER_2_1_STATUS),
        ("BM_MIXER_2_2_STATUS", BM_MIXER_2_2_STATUS),
        ("BM_MIXER_2_3_STATUS", BM_MIXER_2_3_STATUS),
        ("BM_MIXER_2_4_STATUS", BM_MIXER_2_4_STATUS),
        ("BM_MIXER_2_5_STATUS", BM_MIXER_2_5_STATUS),
        ("BM_MIXER_2_6_STATUS", BM_MIXER_2_6_STATUS),
        ("BM_MIXER_2_7_STATUS", BM_MIXER_2_7_STATUS),
        ("BM_MIXER_2_8_STATUS", BM_MIXER_2_8_STATUS),
        ("BM_MIXER_3_1_STATUS", BM_MIXER_3_1_STATUS),
        ("BM_MIXER_3_2_STATUS", BM_MIXER_3_2_STATUS),
        ("BM_MIXER_3_3_STATUS", BM_MIXER_3_3_STATUS),
        ("BM_MIXER_3_4_STATUS", BM_MIXER_3_4_STATUS),
        ("BM_MIXER_3_5_STATUS", BM_MIXER_3_5_STATUS),
        ("BM_MIXER_3_6_STATUS", BM_MIXER_3_6_STATUS),
        ("BM_MIXER_3_7_STATUS", BM_MIXER_3_7_STATUS),
        ("BM_MIXER_3_8_STATUS", BM_MIXER_3_8_STATUS),
        ("BM_MIXER_4_1_STATUS", BM_MIXER_4_1_STATUS),
        ("BM_MIXER_4_2_STATUS", BM_MIXER_4_2_STATUS),
        ("BM_MIXER_4_3_STATUS", BM_MIXER_4_3_STATUS),
        ("BM_MIXER_4_4_STATUS", BM_MIXER_4_4_STATUS),
        ("BM_MIXER_4_5_STATUS", BM_MIXER_4_5_STATUS),
        ("BM_MIXER_4_6_STATUS", BM_MIXER_4_6_STATUS),
        ("BM_MIXER_4_7_STATUS", BM_MIXER_4_7_STATUS),
        ("BM_MIXER_4_8_STATUS", BM_MIXER_4_8_STATUS),
        ("BM_MIXER_5_1_STATUS", BM_MIXER_5_1_STATUS),
        ("BM_MIXER_5_2_STATUS", BM_MIXER_5_2_STATUS),
        ("BM_MIXER_5_3_STATUS", BM_MIXER_5_3_STATUS),
        ("BM_MIXER_5_4_STATUS", BM_MIXER_5_4_STATUS),
        ("BM_MIXER_5_5_STATUS", BM_MIXER_5_5_STATUS),
        ("BM_MIXER_5_6_STATUS", BM_MIXER_5_6_STATUS),
        ("BM_MIXER_5_7_STATUS", BM_MIXER_5_7_STATUS),
        ("BM_MIXER_5_8_STATUS", BM_MIXER_5_8_STATUS),
        ("BM_MIXER_6_1_STATUS", BM_MIXER_6_1_STATUS),
        ("BM_MIXER_6_2_STATUS", BM_MIXER_6_2_STATUS),
        ("BM_MIXER_6_3_STATUS", BM_MIXER_6_3_STATUS),
        ("BM_MIXER_6_4_STATUS", BM_MIXER_6_4_STATUS),
        ("BM_MIXER_6_5_STATUS", BM_MIXER_6_5_STATUS),
        ("BM_MIXER_6_6_STATUS", BM_MIXER_6_6_STATUS),
        ("BM_MIXER_6_7_STATUS", BM_MIXER_6_7_STATUS),
        ("BM_MIXER_6_8_STATUS", BM_MIXER_6_8_STATUS),
        ("BM_MIXER_7_1_STATUS", BM_MIXER_7_1_STATUS),
        ("BM_MIXER_7_2_STATUS", BM_MIXER_7_2_STATUS),
        ("BM_MIXER_7_3_STATUS", BM_MIXER_7_3_STATUS),
        ("BM_MIXER_7_4_STATUS", BM_MIXER_7_4_STATUS),
        ("BM_MIXER_7_5_STATUS", BM_MIXER_7_5_STATUS),
        ("BM_MIXER_7_6_STATUS", BM_MIXER_7_6_STATUS),
        ("BM_MIXER_7_7_STATUS", BM_MIXER_7_7_STATUS),
        ("BM_MIXER_7_8_STATUS", BM_MIXER_7_8_STATUS),
        ("BM_MIXER_8_1_STATUS", BM_MIXER_8_1_STATUS),
        ("BM_MIXER_8_2_STATUS", BM_MIXER_8_2_STATUS),
        ("BM_MIXER_8_3_STATUS", BM_MIXER_8_3_STATUS),
        ("BM_MIXER_8_4_STATUS", BM_MIXER_8_4_STATUS),
        ("BM_MIXER_8_5_STATUS", BM_MIXER_8_5_STATUS),
        ("BM_MIXER_8_6_STATUS", BM_MIXER_8_6_STATUS),
        ("BM_MIXER_8_7_STATUS", BM_MIXER_8_7_STATUS),
        ("BM_MIXER_8_8_STATUS", BM_MIXER_8_8_STATUS),
        ("BM_MIXER_9_1_STATUS", BM_MIXER_9_1_STATUS),
        ("BM_MIXER_9_2_STATUS", BM_MIXER_9_2_STATUS),
        ("BM_MIXER_9_3_STATUS", BM_MIXER_9_3_STATUS),
        ("BM_MIXER_9_4_STATUS", BM_MIXER_9_4_STATUS),
        ("BM_MIXER_9_5_STATUS", BM_MIXER_9_5_STATUS),
        ("BM_MIXER_9_6_STATUS", BM_MIXER_9_6_STATUS),
        ("BM_MIXER_9_7_STATUS", BM_MIXER_9_7_STATUS),
        ("BM_MIXER_9_8_STATUS", BM_MIXER_9_8_STATUS),
        ("BM_MIXER_1_1", BM_MIXER_1_1),
        ("BM_MIXER_1_2", BM_MIXER_1_2),
        ("BM_MIXER_1_3", BM_MIXER_1_3),
        ("BM_MIXER_1_4", BM_MIXER_1_4),
        ("BM_MIXER_1_5", BM_MIXER_1_5),
        ("BM_MIXER_1_6", BM_MIXER_1_6),
        ("BM_MIXER_1_7", BM_MIXER_1_7),
        ("BM_MIXER_1_8", BM_MIXER_1_8),
        ("BM_MIXER_2_1", BM_MIXER_2_1),
        ("BM_MIXER_2_2", BM_MIXER_2_2),
        ("BM_MIXER_2_3", BM_MIXER_2_3),
        ("BM_MIXER_2_4", BM_MIXER_2_4),
        ("BM_MIXER_2_5", BM_MIXER_2_5),
        ("BM_MIXER_2_6", BM_MIXER_2_6),
        ("BM_MIXER_2_7", BM_MIXER_2_7),
        ("BM_MIXER_2_8", BM_MIXER_2_8),
        ("BM_MIXER_3_1", BM_MIXER_3_1),
        ("BM_MIXER_3_2", BM_MIXER_3_2),
        ("BM_MIXER_3_3", BM_MIXER_3_3),
        ("BM_MIXER_3_4", BM_MIXER_3_4),
        ("BM_MIXER_3_5", BM_MIXER_3_5),
        ("BM_MIXER_3_6", BM_MIXER_3_6),
        ("BM_MIXER_3_7", BM_MIXER_3_7),
        ("BM_MIXER_3_8", BM_MIXER_3_8),
        ("BM_MIXER_4_1", BM_MIXER_4_1),
        ("BM_MIXER_4_2", BM_MIXER_4_2),
        ("BM_MIXER_4_3", BM_MIXER_4_3),
        ("BM_MIXER_4_4", BM_MIXER_4_4),
        ("BM_MIXER_4_5", BM_MIXER_4_5),
        ("BM_MIXER_4_6", BM_MIXER_4_6),
        ("BM_MIXER_4_7", BM_MIXER_4_7),
        ("BM_MIXER_4_8", BM_MIXER_4_8),
        ("BM_MIXER_5_1", BM_MIXER_5_1),
        ("BM_MIXER_5_2", BM_MIXER_5_2),
        ("BM_MIXER_5_3", BM_MIXER_5_3),
        ("BM_MIXER_5_4", BM_MIXER_5_4),
        ("BM_MIXER_5_5", BM_MIXER_5_5),
        ("BM_MIXER_5_6", BM_MIXER_5_6),
        ("BM_MIXER_5_7", BM_MIXER_5_7),
        ("BM_MIXER_5_8", BM_MIXER_5_8),
        ("BM_MIXER_6_1", BM_MIXER_6_1),
        ("BM_MIXER_6_2", BM_MIXER_6_2),
        ("BM_MIXER_6_3", BM_MIXER_6_3),
        ("BM_MIXER_6_4", BM_MIXER_6_4),
        ("BM_MIXER_6_5", BM_MIXER_6_5),
        ("BM_MIXER_6_6", BM_MIXER_6_6),
        ("BM_MIXER_6_7", BM_MIXER_6_7),
        ("BM_MIXER_6_8", BM_MIXER_6_8),
        ("BM_MIXER_7_1", BM_MIXER_7_1),
        ("BM_MIXER_7_2", BM_MIXER_7_2),
        ("BM_MIXER_7_3", BM_MIXER_7_3),
        ("BM_MIXER_7_4", BM_MIXER_7_4),
        ("BM_MIXER_7_5", BM_MIXER_7_5),
        ("BM_MIXER_7_6", BM_MIXER_7_6),
        ("BM_MIXER_7_7", BM_MIXER_7_7),
        ("BM_MIXER_7_8", BM_MIXER_7_8),
        ("BM_MIXER_8_1", BM_MIXER_8_1),
        ("BM_MIXER_8_2", BM_MIXER_8_2),
        ("BM_MIXER_8_3", BM_MIXER_8_3),
        ("BM_MIXER_8_4", BM_MIXER_8_4),
        ("BM_MIXER_8_5", BM_MIXER_8_5),
        ("BM_MIXER_8_6", BM_MIXER_8_6),
        ("BM_MIXER_8_7", BM_MIXER_8_7),
        ("BM_MIXER_8_8", BM_MIXER_8_8),
        ("BM_MIXER_9_1", BM_MIXER_9_1),
        ("BM_MIXER_9_2", BM_MIXER_9_2),
        ("BM_MIXER_9_3", BM_MIXER_9_3),
        ("BM_MIXER_9_4", BM_MIXER_9_4),
        ("BM_MIXER_9_5", BM_MIXER_9_5),
        ("BM_MIXER_9_6", BM_MIXER_9_6),
        ("BM_MIXER_9_7", BM_MIXER_9_7),
        ("BM_MIXER_9_8", BM_MIXER_9_8),
        ("BM_MIXER_1_1_POL", BM_MIXER_1_1_POL),
        ("BM_MIXER_1_2_POL", BM_MIXER_1_2_POL),
        ("BM_MIXER_1_3_POL", BM_MIXER_1_3_POL),
        ("BM_MIXER_1_4_POL", BM_MIXER_1_4_POL),
        ("BM_MIXER_1_5_POL", BM_MIXER_1_5_POL),
        ("BM_MIXER_1_6_POL", BM_MIXER_1_6_POL),
        ("BM_MIXER_1_7_POL", BM_MIXER_1_7_POL),
        ("BM_MIXER_1_8_POL", BM_MIXER_1_8_POL),
        ("BM_MIXER_2_1_POL", BM_MIXER_2_1_POL),
        ("BM_MIXER_2_2_POL", BM_MIXER_2_2_POL),
        ("BM_MIXER_2_3_POL", BM_MIXER_2_3_POL),
        ("BM_MIXER_2_4_POL", BM_MIXER_2_4_POL),
        ("BM_MIXER_2_5_POL", BM_MIXER_2_5_POL),
        ("BM_MIXER_2_6_POL", BM_MIXER_2_6_POL),
        ("BM_MIXER_2_7_POL", BM_MIXER_2_7_POL),
        ("BM_MIXER_2_8_POL", BM_MIXER_2_8_POL),
        ("BM_MIXER_3_1_POL", BM_MIXER_3_1_POL),
        ("BM_MIXER_3_2_POL", BM_MIXER_3_2_POL),
        ("BM_MIXER_3_3_POL", BM_MIXER_3_3_POL),
        ("BM_MIXER_3_4_POL", BM_MIXER_3_4_POL),
        ("BM_MIXER_3_5_POL", BM_MIXER_3_5_POL),
        ("BM_MIXER_3_6_POL", BM_MIXER_3_6_POL),
        ("BM_MIXER_3_7_POL", BM_MIXER_3_7_POL),
        ("BM_MIXER_3_8_POL", BM_MIXER_3_8_POL),
        ("BM_MIXER_4_1_POL", BM_MIXER_4_1_POL),
        ("BM_MIXER_4_2_POL", BM_MIXER_4_2_POL),
        ("BM_MIXER_4_3_POL", BM_MIXER_4_3_POL),
        ("BM_MIXER_4_4_POL", BM_MIXER_4_4_POL),
        ("BM_MIXER_4_5_POL", BM_MIXER_4_5_POL),
        ("BM_MIXER_4_6_POL", BM_MIXER_4_6_POL),
        ("BM_MIXER_4_7_POL", BM_MIXER_4_7_POL),
        ("BM_MIXER_4_8_POL", BM_MIXER_4_8_POL),
        ("BM_MIXER_5_1_POL", BM_MIXER_5_1_POL),
        ("BM_MIXER_5_2_POL", BM_MIXER_5_2_POL),
        ("BM_MIXER_5_3_POL", BM_MIXER_5_3_POL),
        ("BM_MIXER_5_4_POL", BM_MIXER_5_4_POL),
        ("BM_MIXER_5_5_POL", BM_MIXER_5_5_POL),
        ("BM_MIXER_5_6_POL", BM_MIXER_5_6_POL),
        ("BM_MIXER_5_7_POL", BM_MIXER_5_7_POL),
        ("BM_MIXER_5_8_POL", BM_MIXER_5_8_POL),
        ("BM_MIXER_6_1_POL", BM_MIXER_6_1_POL),
        ("BM_MIXER_6_2_POL", BM_MIXER_6_2_POL),
        ("BM_MIXER_6_3_POL", BM_MIXER_6_3_POL),
        ("BM_MIXER_6_4_POL", BM_MIXER_6_4_POL),
        ("BM_MIXER_6_5_POL", BM_MIXER_6_5_POL),
        ("BM_MIXER_6_6_POL", BM_MIXER_6_6_POL),
        ("BM_MIXER_6_7_POL", BM_MIXER_6_7_POL),
        ("BM_MIXER_6_8_POL", BM_MIXER_6_8_POL),
        ("BM_MIXER_7_1_POL", BM_MIXER_7_1_POL),
        ("BM_MIXER_7_2_POL", BM_MIXER_7_2_POL),
        ("BM_MIXER_7_3_POL", BM_MIXER_7_3_POL),
        ("BM_MIXER_7_4_POL", BM_MIXER_7_4_POL),
        ("BM_MIXER_7_5_POL", BM_MIXER_7_5_POL),
        ("BM_MIXER_7_6_POL", BM_MIXER_7_6_POL),
        ("BM_MIXER_7_7_POL", BM_MIXER_7_7_POL),
        ("BM_MIXER_7_8_POL", BM_MIXER_7_8_POL),
        ("BM_MIXER_8_1_POL", BM_MIXER_8_1_POL),
        ("BM_MIXER_8_2_POL", BM_MIXER_8_2_POL),
        ("BM_MIXER_8_3_POL", BM_MIXER_8_3_POL),
        ("BM_MIXER_8_4_POL", BM_MIXER_8_4_POL),
        ("BM_MIXER_8_5_POL", BM_MIXER_8_5_POL),
        ("BM_MIXER_8_6_POL", BM_MIXER_8_6_POL),
        ("BM_MIXER_8_7_POL", BM_MIXER_8_7_POL),
        ("BM_MIXER_8_8_POL", BM_MIXER_8_8_POL),
        ("BM_MIXER_9_1_POL", BM_MIXER_9_1_POL),
        ("BM_MIXER_9_2_POL", BM_MIXER_9_2_POL),
        ("BM_MIXER_9_3_POL", BM_MIXER_9_3_POL),
        ("BM_MIXER_9_4_POL", BM_MIXER_9_4_POL),
        ("BM_MIXER_9_5_POL", BM_MIXER_9_5_POL),
        ("BM_MIXER_9_6_POL", BM_MIXER_9_6_POL),
        ("BM_MIXER_9_7_POL", BM_MIXER_9_7_POL),
        ("BM_MIXER_9_8_POL", BM_MIXER_9_8_POL),
        ("BM_BPF_1_1", BM_BPF_1_1),
        ("BM_BPF_1_5", BM_BPF_1_5),
        ("BM_BPF_2_1", BM_BPF_2_1),
        ("BM_BPF_2_5", BM_BPF_2_5),
        ("BM_BPF_3_1", BM_BPF_3_1),
        ("BM_BPF_3_5", BM_BPF_3_5),
        ("BM_BPF_4_1", BM_BPF_4_1),
        ("BM_BPF_4_5", BM_BPF_4_5),
        ("BM_BPF_5_1", BM_BPF_5_1),
        ("BM_BPF_5_5", BM_BPF_5_5),
        ("BM_BPF_6_1", BM_BPF_6_1),
        ("BM_BPF_6_5", BM_BPF_6_5),
        ("BM_BPF_7_1", BM_BPF_7_1),
        ("BM_BPF_7_5", BM_BPF_7_5),
        ("BM_BPF_8_1", BM_BPF_8_1),
        ("BM_BPF_8_5", BM_BPF_8_5),
        ("OUT_MIXER_0_0_STATUS", OUT_MIXER_0_0_STATUS),
        ("OUT_MIXER_0_1_STATUS", OUT_MIXER_0_1_STATUS),
        ("OUT_MIXER_0_2_STATUS", OUT_MIXER_0_2_STATUS),
        ("OUT_MIXER_0_3_STATUS", OUT_MIXER_0_3_STATUS),
        ("OUT_MIXER_0_4_STATUS", OUT_MIXER_0_4_STATUS),
        ("OUT_MIXER_0_5_STATUS", OUT_MIXER_0_5_STATUS),
        ("OUT_MIXER_0_6_STATUS", OUT_MIXER_0_6_STATUS),
        ("OUT_MIXER_0_7_STATUS", OUT_MIXER_0_7_STATUS),
        ("OUT_MIXER_1_0_STATUS", OUT_MIXER_1_0_STATUS),
        ("OUT_MIXER_1_1_STATUS", OUT_MIXER_1_1_STATUS),
        ("OUT_MIXER_1_2_STATUS", OUT_MIXER_1_2_STATUS),
        ("OUT_MIXER_1_3_STATUS", OUT_MIXER_1_3_STATUS),
        ("OUT_MIXER_1_4_STATUS", OUT_MIXER_1_4_STATUS),
        ("OUT_MIXER_1_5_STATUS", OUT_MIXER_1_5_STATUS),
        ("OUT_MIXER_1_6_STATUS", OUT_MIXER_1_6_STATUS),
        ("OUT_MIXER_1_7_STATUS", OUT_MIXER_1_7_STATUS),
        ("OUT_MIXER_2_0_STATUS", OUT_MIXER_2_0_STATUS),
        ("OUT_MIXER_2_1_STATUS", OUT_MIXER_2_1_STATUS),
        ("OUT_MIXER_2_2_STATUS", OUT_MIXER_2_2_STATUS),
        ("OUT_MIXER_2_3_STATUS", OUT_MIXER_2_3_STATUS),
        ("OUT_MIXER_2_4_STATUS", OUT_MIXER_2_4_STATUS),
        ("OUT_MIXER_2_5_STATUS", OUT_MIXER_2_5_STATUS),
        ("OUT_MIXER_2_6_STATUS", OUT_MIXER_2_6_STATUS),
        ("OUT_MIXER_2_7_STATUS", OUT_MIXER_2_7_STATUS),
        ("OUT_MIXER_3_0_STATUS", OUT_MIXER_3_0_STATUS),
        ("OUT_MIXER_3_1_STATUS", OUT_MIXER_3_1_STATUS),
        ("OUT_MIXER_3_2_STATUS", OUT_MIXER_3_2_STATUS),
        ("OUT_MIXER_3_3_STATUS", OUT_MIXER_3_3_STATUS),
        ("OUT_MIXER_3_4_STATUS", OUT_MIXER_3_4_STATUS),
        ("OUT_MIXER_3_5_STATUS", OUT_MIXER_3_5_STATUS),
        ("OUT_MIXER_3_6_STATUS", OUT_MIXER_3_6_STATUS),
        ("OUT_MIXER_3_7_STATUS", OUT_MIXER_3_7_STATUS),
        ("OUT_MIXER_4_0_STATUS", OUT_MIXER_4_0_STATUS),
        ("OUT_MIXER_4_1_STATUS", OUT_MIXER_4_1_STATUS),
        ("OUT_MIXER_4_2_STATUS", OUT_MIXER_4_2_STATUS),
        ("OUT_MIXER_4_3_STATUS", OUT_MIXER_4_3_STATUS),
        ("OUT_MIXER_4_4_STATUS", OUT_MIXER_4_4_STATUS),
        ("OUT_MIXER_4_5_STATUS", OUT_MIXER_4_5_STATUS),
        ("OUT_MIXER_4_6_STATUS", OUT_MIXER_4_6_STATUS),
        ("OUT_MIXER_4_7_STATUS", OUT_MIXER_4_7_STATUS),
        ("OUT_MIXER_5_0_STATUS", OUT_MIXER_5_0_STATUS),
        ("OUT_MIXER_5_1_STATUS", OUT_MIXER_5_1_STATUS),
        ("OUT_MIXER_5_2_STATUS", OUT_MIXER_5_2_STATUS),
        ("OUT_MIXER_5_3_STATUS", OUT_MIXER_5_3_STATUS),
        ("OUT_MIXER_5_4_STATUS", OUT_MIXER_5_4_STATUS),
        ("OUT_MIXER_5_5_STATUS", OUT_MIXER_5_5_STATUS),
        ("OUT_MIXER_5_6_STATUS", OUT_MIXER_5_6_STATUS),
        ("OUT_MIXER_5_7_STATUS", OUT_MIXER_5_7_STATUS),
        ("OUT_MIXER_6_0_STATUS", OUT_MIXER_6_0_STATUS),
        ("OUT_MIXER_6_1_STATUS", OUT_MIXER_6_1_STATUS),
        ("OUT_MIXER_6_2_STATUS", OUT_MIXER_6_2_STATUS),
        ("OUT_MIXER_6_3_STATUS", OUT_MIXER_6_3_STATUS),
        ("OUT_MIXER_6_4_STATUS", OUT_MIXER_6_4_STATUS),
        ("OUT_MIXER_6_5_STATUS", OUT_MIXER_6_5_STATUS),
        ("OUT_MIXER_6_6_STATUS", OUT_MIXER_6_6_STATUS),
        ("OUT_MIXER_6_7_STATUS", OUT_MIXER_6_7_STATUS),
        ("OUT_MIXER_7_0_STATUS", OUT_MIXER_7_0_STATUS),
        ("OUT_MIXER_7_1_STATUS", OUT_MIXER_7_1_STATUS),
        ("OUT_MIXER_7_2_STATUS", OUT_MIXER_7_2_STATUS),
        ("OUT_MIXER_7_3_STATUS", OUT_MIXER_7_3_STATUS),
        ("OUT_MIXER_7_4_STATUS", OUT_MIXER_7_4_STATUS),
        ("OUT_MIXER_7_5_STATUS", OUT_MIXER_7_5_STATUS),
        ("OUT_MIXER_7_6_STATUS", OUT_MIXER_7_6_STATUS),
        ("OUT_MIXER_7_7_STATUS", OUT_MIXER_7_7_STATUS),
        ("OUT_MIXER_0_0", OUT_MIXER_0_0),
        ("OUT_MIXER_0_1", OUT_MIXER_0_1),
        ("OUT_MIXER_0_2", OUT_MIXER_0_2),
        ("OUT_MIXER_0_3", OUT_MIXER_0_3),
        ("OUT_MIXER_0_4", OUT_MIXER_0_4),
        ("OUT_MIXER_0_5", OUT_MIXER_0_5),
        ("OUT_MIXER_0_6", OUT_MIXER_0_6),
        ("OUT_MIXER_0_7", OUT_MIXER_0_7),
        ("OUT_MIXER_1_0", OUT_MIXER_1_0),
        ("OUT_MIXER_1_1", OUT_MIXER_1_1),
        ("OUT_MIXER_1_2", OUT_MIXER_1_2),
        ("OUT_MIXER_1_3", OUT_MIXER_1_3),
        ("OUT_MIXER_1_4", OUT_MIXER_1_4),
        ("OUT_MIXER_1_5", OUT_MIXER_1_5),
        ("OUT_MIXER_1_6", OUT_MIXER_1_6),
        ("OUT_MIXER_1_7", OUT_MIXER_1_7),
        ("OUT_MIXER_2_0", OUT_MIXER_2_0),
        ("OUT_MIXER_2_1", OUT_MIXER_2_1),
        ("OUT_MIXER_2_2", OUT_MIXER_2_2),
        ("OUT_MIXER_2_3", OUT_MIXER_2_3),
        ("OUT_MIXER_2_4", OUT_MIXER_2_4),
        ("OUT_MIXER_2_5", OUT_MIXER_2_5),
        ("OUT_MIXER_2_6", OUT_MIXER_2_6),
        ("OUT_MIXER_2_7", OUT_MIXER_2_7),
        ("OUT_MIXER_3_0", OUT_MIXER_3_0),
        ("OUT_MIXER_3_1", OUT_MIXER_3_1),
        ("OUT_MIXER_3_2", OUT_MIXER_3_2),
        ("OUT_MIXER_3_3", OUT_MIXER_3_3),
        ("OUT_MIXER_3_4", OUT_MIXER_3_4),
        ("OUT_MIXER_3_5", OUT_MIXER_3_5),
        ("OUT_MIXER_3_6", OUT_MIXER_3_6),
        ("OUT_MIXER_3_7", OUT_MIXER_3_7),
        ("OUT_MIXER_4_0", OUT_MIXER_4_0),
        ("OUT_MIXER_4_1", OUT_MIXER_4_1),
        ("OUT_MIXER_4_2", OUT_MIXER_4_2),
        ("OUT_MIXER_4_3", OUT_MIXER_4_3),
        ("OUT_MIXER_4_4", OUT_MIXER_4_4),
        ("OUT_MIXER_4_5", OUT_MIXER_4_5),
        ("OUT_MIXER_4_6", OUT_MIXER_4_6),
        ("OUT_MIXER_4_7", OUT_MIXER_4_7),
        ("OUT_MIXER_5_0", OUT_MIXER_5_0),
        ("OUT_MIXER_5_1", OUT_MIXER_5_1),
        ("OUT_MIXER_5_2", OUT_MIXER_5_2),
        ("OUT_MIXER_5_3", OUT_MIXER_5_3),
        ("OUT_MIXER_5_4", OUT_MIXER_5_4),
        ("OUT_MIXER_5_5", OUT_MIXER_5_5),
        ("OUT_MIXER_5_6", OUT_MIXER_5_6),
        ("OUT_MIXER_5_7", OUT_MIXER_5_7),
        ("OUT_MIXER_6_0", OUT_MIXER_6_0),
        ("OUT_MIXER_6_1", OUT_MIXER_6_1),
        ("OUT_MIXER_6_2", OUT_MIXER_6_2),
        ("OUT_MIXER_6_3", OUT_MIXER_6_3),
        ("OUT_MIXER_6_4", OUT_MIXER_6_4),
        ("OUT_MIXER_6_5", OUT_MIXER_6_5),
        ("OUT_MIXER_6_6", OUT_MIXER_6_6),
        ("OUT_MIXER_6_7", OUT_MIXER_6_7),
        ("OUT_MIXER_7_0", OUT_MIXER_7_0),
        ("OUT_MIXER_7_1", OUT_MIXER_7_1),
        ("OUT_MIXER_7_2", OUT_MIXER_7_2),
        ("OUT_MIXER_7_3", OUT_MIXER_7_3),
        ("OUT_MIXER_7_4", OUT_MIXER_7_4),
        ("OUT_MIXER_7_5", OUT_MIXER_7_5),
        ("OUT_MIXER_7_6", OUT_MIXER_7_6),
        ("OUT_MIXER_7_7", OUT_MIXER_7_7),
        ("OUT_MIXER_0_0_POL", OUT_MIXER_0_0_POL),
        ("OUT_MIXER_0_1_POL", OUT_MIXER_0_1_POL),
        ("OUT_MIXER_0_2_POL", OUT_MIXER_0_2_POL),
        ("OUT_MIXER_0_3_POL", OUT_MIXER_0_3_POL),
        ("OUT_MIXER_0_4_POL", OUT_MIXER_0_4_POL),
        ("OUT_MIXER_0_5_POL", OUT_MIXER_0_5_POL),
        ("OUT_MIXER_0_6_POL", OUT_MIXER_0_6_POL),
        ("OUT_MIXER_0_7_POL", OUT_MIXER_0_7_POL),
        ("OUT_MIXER_1_0_POL", OUT_MIXER_1_0_POL),
        ("OUT_MIXER_1_1_POL", OUT_MIXER_1_1_POL),
        ("OUT_MIXER_1_2_POL", OUT_MIXER_1_2_POL),
        ("OUT_MIXER_1_3_POL", OUT_MIXER_1_3_POL),
        ("OUT_MIXER_1_4_POL", OUT_MIXER_1_4_POL),
        ("OUT_MIXER_1_5_POL", OUT_MIXER_1_5_POL),
        ("OUT_MIXER_1_6_POL", OUT_MIXER_1_6_POL),
        ("OUT_MIXER_1_7_POL", OUT_MIXER_1_7_POL),
        ("OUT_MIXER_2_0_POL", OUT_MIXER_2_0_POL),
        ("OUT_MIXER_2_1_POL", OUT_MIXER_2_1_POL),
        ("OUT_MIXER_2_2_POL", OUT_MIXER_2_2_POL),
        ("OUT_MIXER_2_3_POL", OUT_MIXER_2_3_POL),
        ("OUT_MIXER_2_4_POL", OUT_MIXER_2_4_POL),
        ("OUT_MIXER_2_5_POL", OUT_MIXER_2_5_POL),
        ("OUT_MIXER_2_6_POL", OUT_MIXER_2_6_POL),
        ("OUT_MIXER_2_7_POL", OUT_MIXER_2_7_POL),
        ("OUT_MIXER_3_0_POL", OUT_MIXER_3_0_POL),
        ("OUT_MIXER_3_1_POL", OUT_MIXER_3_1_POL),
        ("OUT_MIXER_3_2_POL", OUT_MIXER_3_2_POL),
        ("OUT_MIXER_3_3_POL", OUT_MIXER_3_3_POL),
        ("OUT_MIXER_3_4_POL", OUT_MIXER_3_4_POL),
        ("OUT_MIXER_3_5_POL", OUT_MIXER_3_5_POL),
        ("OUT_MIXER_3_6_POL", OUT_MIXER_3_6_POL),
        ("OUT_MIXER_3_7_POL", OUT_MIXER_3_7_POL),
        ("OUT_MIXER_4_0_POL", OUT_MIXER_4_0_POL),
        ("OUT_MIXER_4_1_POL", OUT_MIXER_4_1_POL),
        ("OUT_MIXER_4_2_POL", OUT_MIXER_4_2_POL),
        ("OUT_MIXER_4_3_POL", OUT_MIXER_4_3_POL),
        ("OUT_MIXER_4_4_POL", OUT_MIXER_4_4_POL),
        ("OUT_MIXER_4_5_POL", OUT_MIXER_4_5_POL),
        ("OUT_MIXER_4_6_POL", OUT_MIXER_4_6_POL),
        ("OUT_MIXER_4_7_POL", OUT_MIXER_4_7_POL),
        ("OUT_MIXER_5_0_POL", OUT_MIXER_5_0_POL),
        ("OUT_MIXER_5_1_POL", OUT_MIXER_5_1_POL),
        ("OUT_MIXER_5_2_POL", OUT_MIXER_5_2_POL),
        ("OUT_MIXER_5_3_POL", OUT_MIXER_5_3_POL),
        ("OUT_MIXER_5_4_POL", OUT_MIXER_5_4_POL),
        ("OUT_MIXER_5_5_POL", OUT_MIXER_5_5_POL),
        ("OUT_MIXER_5_6_POL", OUT_MIXER_5_6_POL),
        ("OUT_MIXER_5_7_POL", OUT_MIXER_5_7_POL),
        ("OUT_MIXER_6_0_POL", OUT_MIXER_6_0_POL),
        ("OUT_MIXER_6_1_POL", OUT_MIXER_6_1_POL),
        ("OUT_MIXER_6_2_POL", OUT_MIXER_6_2_POL),
        ("OUT_MIXER_6_3_POL", OUT_MIXER_6_3_POL),
        ("OUT_MIXER_6_4_POL", OUT_MIXER_6_4_POL),
        ("OUT_MIXER_6_5_POL", OUT_MIXER_6_5_POL),
        ("OUT_MIXER_6_6_POL", OUT_MIXER_6_6_POL),
        ("OUT_MIXER_6_7_POL", OUT_MIXER_6_7_POL),
        ("OUT_MIXER_7_0_POL", OUT_MIXER_7_0_POL),
        ("OUT_MIXER_7_1_POL", OUT_MIXER_7_1_POL),
        ("OUT_MIXER_7_2_POL", OUT_MIXER_7_2_POL),
        ("OUT_MIXER_7_3_POL", OUT_MIXER_7_3_POL),
        ("OUT_MIXER_7_4_POL", OUT_MIXER_7_4_POL),
        ("OUT_MIXER_7_5_POL", OUT_MIXER_7_5_POL),
        ("OUT_MIXER_7_6_POL", OUT_MIXER_7_6_POL),
        ("OUT_MIXER_7_7_POL", OUT_MIXER_7_7_POL),
        ("METER_IN_1", METER_IN_1),
        ("METER_IN_2", METER_IN_2),
        ("METER_IN_3", METER_IN_3),
        ("METER_IN_4", METER_IN_4),
        ("METER_IN_5", METER_IN_5),
        ("METER_IN_6", METER_IN_6),
        ("METER_IN_7", METER_IN_7),
        ("METER_IN_8", METER_IN_8),
        ("METER_D_IN_1", METER_D_IN_1),
        ("METER_D_IN_2", METER_D_IN_2),
        ("METER_D_IN_3", METER_D_IN_3),
        ("METER_D_IN_4", METER_D_IN_4),
        ("METER_D_IN_5", METER_D_IN_5),
        ("METER_D_IN_6", METER_D_IN_6),
        ("METER_D_IN_7", METER_D_IN_7),
        ("METER_D_IN_8", METER_D_IN_8),
        ("METER_D_OUT_1", METER_D_OUT_1),
        ("METER_D_OUT_2", METER_D_OUT_2),
        ("METER_D_OUT_3", METER_D_OUT_3),
        ("METER_D_OUT_4", METER_D_OUT_4),
        ("METER_D_OUT_5", METER_D_OUT_5),
        ("METER_D_OUT_6", METER_D_OUT_6),
        ("METER_D_OUT_7", METER_D_OUT_7),
        ("METER_D_OUT_8", METER_D_OUT_8),
        ("METER_COMP_1", METER_COMP_1),
        ("METER_COMP_2", METER_COMP_2),
        ("METER_COMP_3", METER_COMP_3),
        ("METER_COMP_4", METER_COMP_4),
        ("METER_COMP_5", METER_COMP_5),
        ("METER_COMP_6", METER_COMP_6),
        ("METER_COMP_7", METER_COMP_7),
        ("METER_COMP_8", METER_COMP_8),
        ("METER_OUT_1", METER_OUT_1),
        ("METER_OUT_2", METER_OUT_2),
        ("METER_OUT_3", METER_OUT_3),
        ("METER_OUT_4", METER_OUT_4),
        ("METER_OUT_5", METER_OUT_5),
        ("METER_OUT_6", METER_OUT_6),
        ("METER_OUT_7", METER_OUT_7),
        ("METER_OUT_8", METER_OUT_8),
        ("D_GAIN_1_0_STATUS", D_GAIN_1_0_STATUS),
        ("COMP_1_0_STATUS", COMP_1_0_STATUS),
        ("D_GAIN_1_0", D_GAIN_1_0),
        ("COMP_1_0_THRESHOLD", COMP_1_0_THRESHOLD),
        ("COMP_1_0_GAIN", COMP_1_0_GAIN),
        ("COMP_1_0_RATIO", COMP_1_0_RATIO),
        ("COMP_1_0_KNEE", COMP_1_0_KNEE),
        ("COMP_1_0_ATIME", COMP_1_0_ATIME),
        ("COMP_1_0_RTIME", COMP_1_0_RTIME),
        ("DELAY_1_0", DELAY_1_0),
        ("METER_1_0", METER_1_0),
        ("METER_1_1", METER_1_1),
        ("METER_1_2", METER_1_2),
        ("POLARITY_OUT_1_0", POLARITY_OUT_1_0),
        ("PEQ_1_1", PEQ_1_1),
        ("PEQ_1_2", PEQ_1_2),
        ("PEQ_1_3", PEQ_1_3),
        ("PEQ_1_4", PEQ_1_4),
        ("PEQ_1_5", PEQ_1_5),
        ("PEQ_1_6", PEQ_1_6),
        ("PEQ_1_7", PEQ_1_7),
        ("PEQ_1_8", PEQ_1_8),
        ("PEQ_1_9", PEQ_1_9),
        ("PEQ_1_10", PEQ_1_10),
        ("BPF_1_1", BPF_1_1),
        ("BPF_1_5", BPF_1_5),
        ("D_GAIN_2_0_STATUS", D_GAIN_2_0_STATUS),
        ("COMP_2_0_STATUS", COMP_2_0_STATUS),
        ("D_GAIN_2_0", D_GAIN_2_0),
        ("COMP_2_0_THRESHOLD", COMP_2_0_THRESHOLD),
        ("COMP_2_0_GAIN", COMP_2_0_GAIN),
        ("COMP_2_0_RATIO", COMP_2_0_RATIO),
        ("COMP_2_0_KNEE", COMP_2_0_KNEE),
        ("COMP_2_0_ATIME", COMP_2_0_ATIME),
        ("COMP_2_0_RTIME", COMP_2_0_RTIME),
        ("DELAY_2_0", DELAY_2_0),
        ("METER_2_0", METER_2_0),
        ("METER_2_1", METER_2_1),
        ("METER_2_2", METER_2_2),
        ("POLARITY_OUT_2_0", POLARITY_OUT_2_0),
        ("PEQ_2_1", PEQ_2_1),
        ("PEQ_2_2", PEQ_2_2),
        ("PEQ_2_3", PEQ_2_3),
        ("PEQ_2_4", PEQ_2_4),
        ("PEQ_2_5", PEQ_2_5),
        ("PEQ_2_6", PEQ_2_6),
        ("PEQ_2_7", PEQ_2_7),
        ("PEQ_2_8", PEQ_2_8),
        ("PEQ_2_9", PEQ_2_9),
        ("PEQ_2_10", PEQ_2_10),
        ("BPF_2_1", BPF_2_1),
        ("BPF_2_5", BPF_2_5),
        ("D_GAIN_3_0_STATUS", D_GAIN_3_0_STATUS),
        ("COMP_3_0_STATUS", COMP_3_0_STATUS),
        ("D_GAIN_3_0", D_GAIN_3_0),
        ("COMP_3_0_THRESHOLD", COMP_3_0_THRESHOLD),
        ("COMP_3_0_GAIN", COMP_3_0_GAIN),
        ("COMP_3_0_RATIO", COMP_3_0_RATIO),
        ("COMP_3_0_KNEE", COMP_3_0_KNEE),
        ("COMP_3_0_ATIME", COMP_3_0_ATIME),
        ("COMP_3_0_RTIME", COMP_3_0_RTIME),
        ("DELAY_3_0", DELAY_3_0),
        ("METER_3_0", METER_3_0),
        ("METER_3_1", METER_3_1),
        ("METER_3_2", METER_3_2),
        ("POLARITY_OUT_3_0", POLARITY_OUT_3_0),
        ("PEQ_3_1", PEQ_3_1),
        ("PEQ_3_2", PEQ_3_2),
        ("PEQ_3_3", PEQ_3_3),
        ("PEQ_3_4", PEQ_3_4),
        ("PEQ_3_5", PEQ_3_5),
        ("PEQ_3_6", PEQ_3_6),
        ("PEQ_3_7", PEQ_3_7),
        ("PEQ_3_8", PEQ_3_8),
        ("PEQ_3_9", PEQ_3_9),
        ("PEQ_3_10", PEQ_3_10),
        ("BPF_3_1", BPF_3_1),
        ("BPF_3_5", BPF_3_5),
        ("D_GAIN_4_0_STATUS", D_GAIN_4_0_STATUS),
        ("COMP_4_0_STATUS", COMP_4_0_STATUS),
        ("D_GAIN_4_0", D_GAIN_4_0),
        ("COMP_4_0_THRESHOLD", COMP_4_0_THRESHOLD),
        ("COMP_4_0_GAIN", COMP_4_0_GAIN),
        ("COMP_4_0_RATIO", COMP_4_0_RATIO),
        ("COMP_4_0_KNEE", COMP_4_0_KNEE),
        ("COMP_4_0_ATIME", COMP_4_0_ATIME),
        ("COMP_4_0_RTIME", COMP_4_0_RTIME),
        ("DELAY_4_0", DELAY_4_0),
        ("METER_4_0", METER_4_0),
        ("METER_4_1", METER_4_1),
        ("METER_4_2", METER_4_2),
        ("POLARITY_OUT_4_0", POLARITY_OUT_4_0),
        ("PEQ_4_1", PEQ_4_1),
        ("PEQ_4_2", PEQ_4_2),
        ("PEQ_4_3", PEQ_4_3),
        ("PEQ_4_4", PEQ_4_4),
        ("PEQ_4_5", PEQ_4_5),
        ("PEQ_4_6", PEQ_4_6),
        ("PEQ_4_7", PEQ_4_7),
        ("PEQ_4_8", PEQ_4_8),
        ("PEQ_4_9", PEQ_4_9),
        ("PEQ_4_10", PEQ_4_10),
        ("BPF_4_1", BPF_4_1),
        ("BPF_4_5", BPF_4_5),
        ("D_GAIN_5_0_STATUS", D_GAIN_5_0_STATUS),
        ("COMP_5_0_STATUS", COMP_5_0_STATUS),
        ("D_GAIN_5_0", D_GAIN_5_0),
        ("COMP_5_0_THRESHOLD", COMP_5_0_THRESHOLD),
        ("COMP_5_0_GAIN", COMP_5_0_GAIN),
        ("COMP_5_0_RATIO", COMP_5_0_RATIO),
        ("COMP_5_0_KNEE", COMP_5_0_KNEE),
        ("COMP_5_0_ATIME", COMP_5_0_ATIME),
        ("COMP_5_0_RTIME", COMP_5_0_RTIME),
        ("DELAY_5_0", DELAY_5_0),
        ("METER_5_0", METER_5_0),
        ("METER_5_1", METER_5_1),
        ("METER_5_2", METER_5_2),
        ("POLARITY_OUT_5_0", POLARITY_OUT_5_0),
        ("PEQ_5_1", PEQ_5_1),
        ("PEQ_5_2", PEQ_5_2),
        ("PEQ_5_3", PEQ_5_3),
        ("PEQ_5_4", PEQ_5_4),
        ("PEQ_5_5", PEQ_5_5),
        ("PEQ_5_6", PEQ_5_6),
        ("PEQ_5_7", PEQ_5_7),
        ("PEQ_5_8", PEQ_5_8),
        ("PEQ_5_9", PEQ_5_9),
        ("PEQ_5_10", PEQ_5_10),
        ("BPF_5_1", BPF_5_1),
        ("BPF_5_5", BPF_5_5),
        ("D_GAIN_6_0_STATUS", D_GAIN_6_0_STATUS),
        ("COMP_6_0_STATUS", COMP_6_0_STATUS),
        ("D_GAIN_6_0", D_GAIN_6_0),
        ("COMP_6_0_THRESHOLD", COMP_6_0_THRESHOLD),
        ("COMP_6_0_GAIN", COMP_6_0_GAIN),
        ("COMP_6_0_RATIO", COMP_6_0_RATIO),
        ("COMP_6_0_KNEE", COMP_6_0_KNEE),
        ("COMP_6_0_ATIME", COMP_6_0_ATIME),
        ("COMP_6_0_RTIME", COMP_6_0_RTIME),
        ("DELAY_6_0", DELAY_6_0),
        ("METER_6_0", METER_6_0),
        ("METER_6_1", METER_6_1),
        ("METER_6_2", METER_6_2),
        ("POLARITY_OUT_6_0", POLARITY_OUT_6_0),
        ("PEQ_6_1", PEQ_6_1),
        ("PEQ_6_2", PEQ_6_2),
        ("PEQ_6_3", PEQ_6_3),
        ("PEQ_6_4", PEQ_6_4),
        ("PEQ_6_5", PEQ_6_5),
        ("PEQ_6_6", PEQ_6_6),
        ("PEQ_6_7", PEQ_6_7),
        ("PEQ_6_8", PEQ_6_8),
        ("PEQ_6_9", PEQ_6_9),
        ("PEQ_6_10", PEQ_6_10),
        ("BPF_6_1", BPF_6_1),
        ("BPF_6_5", BPF_6_5),
        ("D_GAIN_7_0_STATUS", D_GAIN_7_0_STATUS),
        ("COMP_7_0_STATUS", COMP_7_0_STATUS),
        ("D_GAIN_7_0", D_GAIN_7_0),
        ("COMP_7_0_THRESHOLD", COMP_7_0_THRESHOLD),
        ("COMP_7_0_GAIN", COMP_7_0_GAIN),
        ("COMP_7_0_RATIO", COMP_7_0_RATIO),
        ("COMP_7_0_KNEE", COMP_7_0_KNEE),
        ("COMP_7_0_ATIME", COMP_7_0_ATIME),
        ("COMP_7_0_RTIME", COMP_7_0_RTIME),
        ("DELAY_7_0", DELAY_7_0),
        ("METER_7_0", METER_7_0),
        ("METER_7_1", METER_7_1),
        ("METER_7_2", METER_7_2),
        ("POLARITY_OUT_7_0", POLARITY_OUT_7_0),
        ("PEQ_7_1", PEQ_7_1),
        ("PEQ_7_2", PEQ_7_2),
        ("PEQ_7_3", PEQ_7_3),
        ("PEQ_7_4", PEQ_7_4),
        ("PEQ_7_5", PEQ_7_5),
        ("PEQ_7_6", PEQ_7_6),
        ("PEQ_7_7", PEQ_7_7),
        ("PEQ_7_8", PEQ_7_8),
        ("PEQ_7_9", PEQ_7_9),
        ("PEQ_7_10", PEQ_7_10),
        ("BPF_7_1", BPF_7_1),
        ("BPF_7_5", BPF_7_5),
        ("D_GAIN_8_0_STATUS", D_GAIN_8_0_STATUS),
        ("COMP_8_0_STATUS", COMP_8_0_STATUS),
        ("D_GAIN_8_0", D_GAIN_8_0),
        ("COMP_8_0_THRESHOLD", COMP_8_0_THRESHOLD),
        ("COMP_8_0_GAIN", COMP_8_0_GAIN),
        ("COMP_8_0_RATIO", COMP_8_0_RATIO),
        ("COMP_8_0_KNEE", COMP_8_0_KNEE),
        ("COMP_8_0_ATIME", COMP_8_0_ATIME),
        ("COMP_8_0_RTIME", COMP_8_0_RTIME),
        ("DELAY_8_0", DELAY_8_0),
        ("METER_8_0", METER_8_0),
        ("METER_8_1", METER_8_1),
        ("METER_8_2", METER_8_2),
        ("POLARITY_OUT_8_0", POLARITY_OUT_8_0),
        ("PEQ_8_1", PEQ_8_1),
        ("PEQ_8_2", PEQ_8_2),
        ("PEQ_8_3", PEQ_8_3),
        ("PEQ_8_4", PEQ_8_4),
        ("PEQ_8_5", PEQ_8_5),
        ("PEQ_8_6", PEQ_8_6),
        ("PEQ_8_7", PEQ_8_7),
        ("PEQ_8_8", PEQ_8_8),
        ("PEQ_8_9", PEQ_8_9),
        ("PEQ_8_10", PEQ_8_10),
        ("BPF_8_1", BPF_8_1),
        ("BPF_8_5", BPF_8_5),
    ];
}
#[allow(unused_imports)]
use sym::*;
pub const DEVICE: Device = Device {
    product_name: "FlexHtx",
    sources: &[Analog, Toslink, Spdif, Usb, Hdmi],
    inputs: &[
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_1_STATUS,
                gain: Some(BM_D_GAIN_1),
            }),
            meter: Some(METER_IN_1),
            routing: &[
                Gate {
                    enable: BM_MIXER_1_1_STATUS,
                    gain: Some(BM_MIXER_1_1),
                },
                Gate {
                    enable: BM_MIXER_1_2_STATUS,
                    gain: Some(BM_MIXER_1_2),
                },
                Gate {
                    enable: BM_MIXER_1_3_STATUS,
                    gain: Some(BM_MIXER_1_3),
                },
                Gate {
                    enable: BM_MIXER_1_4_STATUS,
                    gain: Some(BM_MIXER_1_4),
                },
                Gate {
                    enable: BM_MIXER_1_5_STATUS,
                    gain: Some(BM_MIXER_1_5),
                },
                Gate {
                    enable: BM_MIXER_1_6_STATUS,
                    gain: Some(BM_MIXER_1_6),
                },
                Gate {
                    enable: BM_MIXER_1_7_STATUS,
                    gain: Some(BM_MIXER_1_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_2_STATUS,
                gain: Some(BM_D_GAIN_2),
            }),
            meter: Some(METER_IN_2),
            routing: &[
                Gate {
                    enable: BM_MIXER_2_1_STATUS,
                    gain: Some(BM_MIXER_2_1),
                },
                Gate {
                    enable: BM_MIXER_2_2_STATUS,
                    gain: Some(BM_MIXER_2_2),
                },
                Gate {
                    enable: BM_MIXER_2_3_STATUS,
                    gain: Some(BM_MIXER_2_3),
                },
                Gate {
                    enable: BM_MIXER_2_4_STATUS,
                    gain: Some(BM_MIXER_2_4),
                },
                Gate {
                    enable: BM_MIXER_2_5_STATUS,
                    gain: Some(BM_MIXER_2_5),
                },
                Gate {
                    enable: BM_MIXER_2_6_STATUS,
                    gain: Some(BM_MIXER_2_6),
                },
                Gate {
                    enable: BM_MIXER_2_7_STATUS,
                    gain: Some(BM_MIXER_2_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_3_STATUS,
                gain: Some(BM_D_GAIN_3),
            }),
            meter: Some(METER_IN_3),
            routing: &[
                Gate {
                    enable: BM_MIXER_3_1_STATUS,
                    gain: Some(BM_MIXER_3_1),
                },
                Gate {
                    enable: BM_MIXER_3_2_STATUS,
                    gain: Some(BM_MIXER_3_2),
                },
                Gate {
                    enable: BM_MIXER_3_3_STATUS,
                    gain: Some(BM_MIXER_3_3),
                },
                Gate {
                    enable: BM_MIXER_3_4_STATUS,
                    gain: Some(BM_MIXER_3_4),
                },
                Gate {
                    enable: BM_MIXER_3_5_STATUS,
                    gain: Some(BM_MIXER_3_5),
                },
                Gate {
                    enable: BM_MIXER_3_6_STATUS,
                    gain: Some(BM_MIXER_3_6),
                },
                Gate {
                    enable: BM_MIXER_3_7_STATUS,
                    gain: Some(BM_MIXER_3_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_4_STATUS,
                gain: Some(BM_D_GAIN_4),
            }),
            meter: Some(METER_IN_4),
            routing: &[
                Gate {
                    enable: BM_MIXER_4_1_STATUS,
                    gain: Some(BM_MIXER_4_1),
                },
                Gate {
                    enable: BM_MIXER_4_2_STATUS,
                    gain: Some(BM_MIXER_4_2),
                },
                Gate {
                    enable: BM_MIXER_4_3_STATUS,
                    gain: Some(BM_MIXER_4_3),
                },
                Gate {
                    enable: BM_MIXER_4_4_STATUS,
                    gain: Some(BM_MIXER_4_4),
                },
                Gate {
                    enable: BM_MIXER_4_5_STATUS,
                    gain: Some(BM_MIXER_4_5),
                },
                Gate {
                    enable: BM_MIXER_4_6_STATUS,
                    gain: Some(BM_MIXER_4_6),
                },
                Gate {
                    enable: BM_MIXER_4_7_STATUS,
                    gain: Some(BM_MIXER_4_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_5_STATUS,
                gain: Some(BM_D_GAIN_5),
            }),
            meter: Some(METER_IN_5),
            routing: &[
                Gate {
                    enable: BM_MIXER_5_1_STATUS,
                    gain: Some(BM_MIXER_5_1),
                },
                Gate {
                    enable: BM_MIXER_5_2_STATUS,
                    gain: Some(BM_MIXER_5_2),
                },
                Gate {
                    enable: BM_MIXER_5_3_STATUS,
                    gain: Some(BM_MIXER_5_3),
                },
                Gate {
                    enable: BM_MIXER_5_4_STATUS,
                    gain: Some(BM_MIXER_5_4),
                },
                Gate {
                    enable: BM_MIXER_5_5_STATUS,
                    gain: Some(BM_MIXER_5_5),
                },
                Gate {
                    enable: BM_MIXER_5_6_STATUS,
                    gain: Some(BM_MIXER_5_6),
                },
                Gate {
                    enable: BM_MIXER_5_7_STATUS,
                    gain: Some(BM_MIXER_5_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_6_STATUS,
                gain: Some(BM_D_GAIN_6),
            }),
            meter: Some(METER_IN_6),
            routing: &[
                Gate {
                    enable: BM_MIXER_6_1_STATUS,
                    gain: Some(BM_MIXER_6_1),
                },
                Gate {
                    enable: BM_MIXER_6_2_STATUS,
                    gain: Some(BM_MIXER_6_2),
                },
                Gate {
                    enable: BM_MIXER_6_3_STATUS,
                    gain: Some(BM_MIXER_6_3),
                },
                Gate {
                    enable: BM_MIXER_6_4_STATUS,
                    gain: Some(BM_MIXER_6_4),
                },
                Gate {
                    enable: BM_MIXER_6_5_STATUS,
                    gain: Some(BM_MIXER_6_5),
                },
                Gate {
                    enable: BM_MIXER_6_6_STATUS,
                    gain: Some(BM_MIXER_6_6),
                },
                Gate {
                    enable: BM_MIXER_6_7_STATUS,
                    gain: Some(BM_MIXER_6_7),
                },
            ],
            peq: &[],
        },
        Input {
            gate: Some(Gate {
                enable: BM_D_GAIN_7_STATUS,
                gain: Some(BM_D_GAIN_7),
            }),
            meter: Some(METER_IN_7),
            routing: &[
                Gate {
                    enable: BM_MIXER_7_1_STATUS,
                    gain: Some(BM_MIXER_7_1),
                },
                Gate {
                    enable: BM_MIXER_7_2_STATUS,
                    gain: Some(BM_MIXER_7_2),
                },
                Gate {
                    enable: BM_MIXER_7_3_STATUS,
                    gain: Some(BM_MIXER_7_3),
                },
                Gate {
                    enable: BM_MIXER_7_4_STATUS,
                    gain: Some(BM_MIXER_7_4),
                },
                Gate {
                    enable: BM_MIXER_7_5_STATUS,
                    gain: Some(BM_MIXER_7_5),
                },
                Gate {
                    enable: BM_MIXER_7_6_STATUS,
                    gain: Some(BM_MIXER_7_6),
                },
                Gate {
                    enable: BM_MIXER_7_7_STATUS,
                    gain: Some(BM_MIXER_7_7),
                },
            ],
            peq: &[],
        },
    ],
    outputs: &[
        Output {
            gate: Gate {
                enable: D_GAIN_1_0_STATUS,
                gain: Some(D_GAIN_1_0),
            },
            meter: Some(METER_OUT_1),
            delay_addr: Some(DELAY_1_0),
            invert_addr: POLARITY_OUT_1_0,
            peq: &[
                PEQ_1_10, PEQ_1_9, PEQ_1_8, PEQ_1_7, PEQ_1_6, PEQ_1_5, PEQ_1_4, PEQ_1_3, PEQ_1_2,
                PEQ_1_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_1_1, BPF_1_5, BM_BPF_1_1, BM_BPF_1_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_1_0_STATUS,
                threshold: COMP_1_0_THRESHOLD,
                ratio: COMP_1_0_RATIO,
                attack: COMP_1_0_ATIME,
                release: COMP_1_0_RTIME,
                meter: Some(METER_COMP_1),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_2_0_STATUS,
                gain: Some(D_GAIN_2_0),
            },
            meter: Some(METER_OUT_2),
            delay_addr: Some(DELAY_2_0),
            invert_addr: POLARITY_OUT_2_0,
            peq: &[
                PEQ_2_10, PEQ_2_9, PEQ_2_8, PEQ_2_7, PEQ_2_6, PEQ_2_5, PEQ_2_4, PEQ_2_3, PEQ_2_2,
                PEQ_2_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_2_1, BPF_2_5, BM_BPF_2_1, BM_BPF_2_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_2_0_STATUS,
                threshold: COMP_2_0_THRESHOLD,
                ratio: COMP_2_0_RATIO,
                attack: COMP_2_0_ATIME,
                release: COMP_2_0_RTIME,
                meter: Some(METER_COMP_2),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_3_0_STATUS,
                gain: Some(D_GAIN_3_0),
            },
            meter: Some(METER_OUT_3),
            delay_addr: Some(DELAY_3_0),
            invert_addr: POLARITY_OUT_3_0,
            peq: &[
                PEQ_3_10, PEQ_3_9, PEQ_3_8, PEQ_3_7, PEQ_3_6, PEQ_3_5, PEQ_3_4, PEQ_3_3, PEQ_3_2,
                PEQ_3_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_3_1, BPF_3_5, BM_BPF_3_1, BM_BPF_3_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_3_0_STATUS,
                threshold: COMP_3_0_THRESHOLD,
                ratio: COMP_3_0_RATIO,
                attack: COMP_3_0_ATIME,
                release: COMP_3_0_RTIME,
                meter: Some(METER_COMP_3),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_4_0_STATUS,
                gain: Some(D_GAIN_4_0),
            },
            meter: Some(METER_OUT_4),
            delay_addr: Some(DELAY_4_0),
            invert_addr: POLARITY_OUT_4_0,
            peq: &[
                PEQ_4_10, PEQ_4_9, PEQ_4_8, PEQ_4_7, PEQ_4_6, PEQ_4_5, PEQ_4_4, PEQ_4_3, PEQ_4_2,
                PEQ_4_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_4_1, BPF_4_5, BM_BPF_4_1, BM_BPF_4_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_4_0_STATUS,
                threshold: COMP_4_0_THRESHOLD,
                ratio: COMP_4_0_RATIO,
                attack: COMP_4_0_ATIME,
                release: COMP_4_0_RTIME,
                meter: Some(METER_COMP_4),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_5_0_STATUS,
                gain: Some(D_GAIN_5_0),
            },
            meter: Some(METER_OUT_5),
            delay_addr: Some(DELAY_5_0),
            invert_addr: POLARITY_OUT_5_0,
            peq: &[
                PEQ_5_10, PEQ_5_9, PEQ_5_8, PEQ_5_7, PEQ_5_6, PEQ_5_5, PEQ_5_4, PEQ_5_3, PEQ_5_2,
                PEQ_5_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_5_1, BPF_5_5, BM_BPF_5_1, BM_BPF_5_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_5_0_STATUS,
                threshold: COMP_5_0_THRESHOLD,
                ratio: COMP_5_0_RATIO,
                attack: COMP_5_0_ATIME,
                release: COMP_5_0_RTIME,
                meter: Some(METER_COMP_5),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_6_0_STATUS,
                gain: Some(D_GAIN_6_0),
            },
            meter: Some(METER_OUT_6),
            delay_addr: Some(DELAY_6_0),
            invert_addr: POLARITY_OUT_6_0,
            peq: &[
                PEQ_6_10, PEQ_6_9, PEQ_6_8, PEQ_6_7, PEQ_6_6, PEQ_6_5, PEQ_6_4, PEQ_6_3, PEQ_6_2,
                PEQ_6_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_6_1, BPF_6_5, BM_BPF_6_1, BM_BPF_6_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_6_0_STATUS,
                threshold: COMP_6_0_THRESHOLD,
                ratio: COMP_6_0_RATIO,
                attack: COMP_6_0_ATIME,
                release: COMP_6_0_RTIME,
                meter: Some(METER_COMP_6),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_7_0_STATUS,
                gain: Some(D_GAIN_7_0),
            },
            meter: Some(METER_OUT_7),
            delay_addr: Some(DELAY_7_0),
            invert_addr: POLARITY_OUT_7_0,
            peq: &[
                PEQ_7_10, PEQ_7_9, PEQ_7_8, PEQ_7_7, PEQ_7_6, PEQ_7_5, PEQ_7_4, PEQ_7_3, PEQ_7_2,
                PEQ_7_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_7_1, BPF_7_5, BM_BPF_7_1, BM_BPF_7_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_7_0_STATUS,
                threshold: COMP_7_0_THRESHOLD,
                ratio: COMP_7_0_RATIO,
                attack: COMP_7_0_ATIME,
                release: COMP_7_0_RTIME,
                meter: Some(METER_COMP_7),
            }),
            fir: None,
        },
    ],
    fir_max_taps: 0,
    internal_sampling_rate: 48000,
    dialect: Dialect {
        addr_encoding: AddrEncoding::AddrLen3,
        float_encoding: FloatEncoding::Float32LE,
    },
    #[cfg(feature = "symbols")]
    symbols: SYMBOLS,
};
