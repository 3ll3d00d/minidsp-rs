//
// This file is generated by `minidsp-devtools codegen`. DO NOT EDIT.
//
use super::*;
pub mod sym {
    #[allow(dead_code)]
    pub const NON_MOD_RAM_ALLOC: u16 = 0;
    pub const DC_INP_ALG_1: u16 = 8;
    pub const DC_INP_ALG_2: u16 = 9;
    pub const DC_INP_ALG_4: u16 = 10;
    pub const GAIN_1940_ALG_NS11: u16 = 11;
    pub const GAIN_1940_ALG_NS12: u16 = 12;
    pub const GAIN_1940_ALG_NS13: u16 = 13;
    pub const GAIN_1940_ALG_NS14: u16 = 14;
    pub const GAIN_1940_ALG_NS15: u16 = 15;
    pub const GAIN_1940_ALG_NS16: u16 = 16;
    pub const GAIN_1940_ALG_NS17: u16 = 17;
    pub const GAIN_1940_ALG_NS18: u16 = 18;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_0: u16 = 19;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_1: u16 = 20;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_2: u16 = 21;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_3: u16 = 22;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_4: u16 = 23;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_5: u16 = 24;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_6: u16 = 25;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_7: u16 = 26;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_8: u16 = 27;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_9: u16 = 28;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_10: u16 = 29;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_11: u16 = 30;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_12: u16 = 31;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_13: u16 = 32;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_14: u16 = 33;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_15: u16 = 34;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_16: u16 = 35;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_17: u16 = 36;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_18: u16 = 37;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_19: u16 = 38;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_20: u16 = 39;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_21: u16 = 40;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_22: u16 = 41;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_23: u16 = 42;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_24: u16 = 43;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_25: u16 = 44;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_26: u16 = 45;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_27: u16 = 46;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_28: u16 = 47;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_29: u16 = 48;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_30: u16 = 49;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_31: u16 = 50;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_32: u16 = 51;
    pub const MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_33: u16 = 52;
    pub const COMP_NO_HOLD_NO_DELAY_1RMS: u16 = 53;
    pub const GAIN_1940_ALG_NS19: u16 = 54;
    pub const GAIN_1940_ALG_NS20: u16 = 55;
    pub const MONOMUX_194_0NS_3_0: u16 = 56;
    pub const MONOMUX_194_0NS_3_1: u16 = 57;
    pub const MONOMUX_194_0NS_3_2: u16 = 58;
    pub const MUTE_NO_SLEW_ALG_7_1MUTE: u16 = 59;
    pub const MUTE_NO_SLEW_ALG_7_2MUTE: u16 = 60;
    pub const MUTE_NO_SLEW_ALG_7_3MUTE: u16 = 61;
    pub const MUTE_NO_SLEW_ALG_7_4MUTE: u16 = 62;
    pub const MUTE_NO_SLEW_ALG_7_5MUTE: u16 = 63;
    pub const MUTE_NO_SLEW_ALG_7_6MUTE: u16 = 64;
    pub const MUTE_NO_SLEW_ALG_7_7MUTE: u16 = 65;
    pub const MUTE_NO_SLEW_ALG_7_8MUTE: u16 = 66;
    pub const MUTE_NO_SLEW_ALG_7_9MUTE: u16 = 67;
    pub const MUTE_NO_SLEW_ALG_8_0MUTE: u16 = 68;
    pub const MONOMUX_194_0NS_5_0: u16 = 69;
    pub const MONOMUX_194_0NS_5_1: u16 = 70;
    pub const MONOMUX_194_0NS_2_0: u16 = 71;
    pub const MONOMUX_194_0NS_2_1: u16 = 72;
    pub const MONOMUX_194_0NS_2_2: u16 = 73;
    pub const MONOMUX_194_0NS_2_3: u16 = 74;
    pub const MONOMUX_194_0NS_2_4: u16 = 75;
    pub const MONOMUX_194_0NS_2_5: u16 = 76;
    pub const MONOMUX_194_0NS_2_6: u16 = 77;
    pub const MONOMUX_194_0NS_2_7: u16 = 78;
    pub const MONOMUX_194_0NS_2_8: u16 = 79;
    pub const MONOMUX_194_0NS_2_9: u16 = 80;
    pub const PEQ_11_1: u16 = 81;
    pub const PEQ_11_2: u16 = 86;
    pub const PEQ_11_3: u16 = 91;
    pub const PEQ_11_4: u16 = 96;
    pub const PEQ_11_5: u16 = 101;
    pub const PEQ_11_6: u16 = 106;
    pub const PEQ_12_1: u16 = 111;
    pub const PEQ_12_2: u16 = 116;
    pub const PEQ_12_3: u16 = 121;
    pub const PEQ_12_4: u16 = 126;
    pub const PEQ_12_5: u16 = 131;
    pub const PEQ_12_6: u16 = 136;
    pub const PEQ_13_1: u16 = 141;
    pub const PEQ_13_2: u16 = 146;
    pub const PEQ_13_3: u16 = 151;
    pub const PEQ_13_4: u16 = 156;
    pub const PEQ_13_5: u16 = 161;
    pub const PEQ_13_6: u16 = 166;
    pub const PEQ_14_1: u16 = 171;
    pub const PEQ_14_2: u16 = 176;
    pub const PEQ_14_3: u16 = 181;
    pub const PEQ_14_4: u16 = 186;
    pub const PEQ_14_5: u16 = 191;
    pub const PEQ_14_6: u16 = 196;
    pub const PEQ_15_1: u16 = 201;
    pub const PEQ_15_2: u16 = 206;
    pub const PEQ_15_3: u16 = 211;
    pub const PEQ_15_4: u16 = 216;
    pub const PEQ_15_5: u16 = 221;
    pub const PEQ_15_6: u16 = 226;
    pub const PEQ_16_1: u16 = 231;
    pub const PEQ_16_2: u16 = 236;
    pub const PEQ_16_3: u16 = 241;
    pub const PEQ_16_4: u16 = 246;
    pub const PEQ_16_5: u16 = 251;
    pub const PEQ_16_6: u16 = 256;
    pub const PEQ_17_1: u16 = 261;
    pub const PEQ_17_2: u16 = 266;
    pub const PEQ_17_3: u16 = 271;
    pub const PEQ_17_4: u16 = 276;
    pub const PEQ_17_5: u16 = 281;
    pub const PEQ_17_6: u16 = 286;
    pub const PEQ_18_1: u16 = 291;
    pub const PEQ_18_2: u16 = 296;
    pub const PEQ_18_3: u16 = 301;
    pub const PEQ_18_4: u16 = 306;
    pub const PEQ_18_5: u16 = 311;
    pub const PEQ_18_6: u16 = 316;
    pub const PEQ_19_1: u16 = 321;
    pub const PEQ_19_2: u16 = 326;
    pub const PEQ_19_3: u16 = 331;
    pub const PEQ_19_4: u16 = 336;
    pub const PEQ_19_5: u16 = 341;
    pub const PEQ_19_6: u16 = 346;
    pub const PEQ_20_1: u16 = 351;
    pub const PEQ_20_2: u16 = 356;
    pub const PEQ_20_3: u16 = 361;
    pub const PEQ_20_4: u16 = 366;
    pub const PEQ_20_5: u16 = 371;
    pub const PEQ_20_6: u16 = 376;
    pub const MONO_ENVELOPE_PEAK_ALG_1HOLD: u16 = 381;
    pub const MONO_ENVELOPE_PEAK_ALG_1DECAY: u16 = 382;
    pub const READ_BACK_ALG_SIGMA_2002: u16 = 383;
    pub const MUTE_NO_SLEW_ALG_6_8MUTE: u16 = 384;
    pub const MUTE_NO_SLEW_ALG_11_0MUTE: u16 = 385;
    pub const MUTE_NO_SLEW_ALG_9_8MUTE: u16 = 386;
    pub const MUTE_NO_SLEW_ALG_1_9MUTE: u16 = 387;
    pub const MUTE_NO_SLEW_ALG_2_7MUTE: u16 = 388;
    pub const MUTE_NO_SLEW_ALG_5_8MUTE: u16 = 389;
    pub const MUTE_NO_SLEW_ALG_3_7MUTE: u16 = 390;
    pub const MUTE_NO_SLEW_ALG_4_2MUTE: u16 = 391;
    pub const MUTE_NO_SLEW_ALG_2_4MUTE: u16 = 392;
    pub const MUTE_NO_SLEW_ALG_3_6MUTE: u16 = 393;
    pub const MUTE_NO_SLEW_ALG_3_2MUTE: u16 = 394;
    pub const MUTE_NO_SLEW_ALG_5_3MUTE: u16 = 395;
    pub const MUTE_NO_SLEW_ALG_7_0MUTE: u16 = 396;
    pub const MUTE_NO_SLEW_ALG_5_6MUTE: u16 = 397;
    pub const MUTE_NO_SLEW_ALG_9_9MUTE: u16 = 398;
    pub const MUTE_NO_SLEW_ALG_1_2MUTE: u16 = 399;
    pub const MUTE_NO_SLEW_ALG_6_6MUTE: u16 = 400;
    pub const MUTE_NO_SLEW_ALG_6_2MUTE: u16 = 401;
    pub const MUTE_NO_SLEW_ALG_4_7MUTE: u16 = 402;
    pub const MUTE_NO_SLEW_ALG_9_5MUTE: u16 = 403;
    pub const MUTE_NO_SLEW_ALG_2_5MUTE: u16 = 404;
    pub const MUTE_NO_SLEW_ALG_3_9MUTE: u16 = 405;
    pub const MUTE_NO_SLEW_ALG_10_1MUTE: u16 = 406;
    pub const MUTE_NO_SLEW_ALG_4_9MUTE: u16 = 407;
    pub const MUTE_NO_SLEW_ALG_8_4MUTE: u16 = 408;
    pub const MUTE_NO_SLEW_ALG_10_9MUTE: u16 = 409;
    pub const MUTE_NO_SLEW_ALG_2_0MUTE: u16 = 410;
    pub const MUTE_NO_SLEW_ALG_4_8MUTE: u16 = 411;
    pub const MUTE_NO_SLEW_ALG_2_1MUTE: u16 = 412;
    pub const MUTE_NO_SLEW_ALG_8_5MUTE: u16 = 413;
    pub const MUTE_NO_SLEW_ALG_9_3MUTE: u16 = 414;
    pub const MUTE_NO_SLEW_ALG_6_5MUTE: u16 = 415;
    pub const MUTE_NO_SLEW_ALG_8_3MUTE: u16 = 416;
    pub const MUTE_NO_SLEW_ALG_10_2MUTE: u16 = 417;
    pub const MUTE_NO_SLEW_ALG_10_8MUTE: u16 = 418;
    pub const MUTE_NO_SLEW_ALG_2_2MUTE: u16 = 419;
    pub const MUTE_NO_SLEW_ALG_2_8MUTE: u16 = 420;
    pub const MUTE_NO_SLEW_ALG_1_8MUTE: u16 = 421;
    pub const MUTE_NO_SLEW_ALG_1_3MUTE: u16 = 422;
    pub const MUTE_NO_SLEW_ALG_6_4MUTE: u16 = 423;
    pub const MUTE_NO_SLEW_ALG_4_5MUTE: u16 = 424;
    pub const MUTE_NO_SLEW_ALG_5_0MUTE: u16 = 425;
    pub const MUTE_NO_SLEW_ALG_2_3MUTE: u16 = 426;
    pub const MUTE_NO_SLEW_ALG_6_9MUTE: u16 = 427;
    pub const MUTE_NO_SLEW_ALG_5_9MUTE: u16 = 428;
    pub const MUTE_NO_SLEW_ALG_5_1MUTE: u16 = 429;
    pub const MUTE_NO_SLEW_ALG_5_7MUTE: u16 = 430;
    pub const MUTE_NO_SLEW_ALG_6_7MUTE: u16 = 431;
    pub const MUTE_NO_SLEW_ALG_6_3MUTE: u16 = 432;
    pub const MUTE_NO_SLEW_ALG_1_7MUTE: u16 = 433;
    pub const MUTE_NO_SLEW_ALG_1_6MUTE: u16 = 434;
    pub const MUTE_NO_SLEW_ALG_3_8MUTE: u16 = 435;
    pub const MUTE_NO_SLEW_ALG_3_3MUTE: u16 = 436;
    pub const MUTE_NO_SLEW_ALG_5_5MUTE: u16 = 437;
    pub const MUTE_NO_SLEW_ALG_11_1MUTE: u16 = 438;
    pub const MUTE_NO_SLEW_ALG_1_4MUTE: u16 = 439;
    pub const MUTE_NO_SLEW_ALG_3_5MUTE: u16 = 440;
    pub const MUTE_NO_SLEW_ALG_10_7MUTE: u16 = 441;
    pub const MUTE_NO_SLEW_ALG_8_7MUTE: u16 = 442;
    pub const MUTE_NO_SLEW_ALG_2_9MUTE: u16 = 443;
    pub const MUTE_NO_SLEW_ALG_1_5MUTE: u16 = 444;
    pub const MUTE_NO_SLEW_ALG_4_6MUTE: u16 = 445;
    pub const MUTE_NO_SLEW_ALG_10_3MUTE: u16 = 446;
    pub const MUTE_NO_SLEW_ALG_11_8MUTE: u16 = 447;
    pub const MUTE_NO_SLEW_ALG_6_1MUTE: u16 = 448;
    pub const MUTE_NO_SLEW_ALG_11_3MUTE: u16 = 449;
    pub const MUTE_NO_SLEW_ALG_4_0MUTE: u16 = 450;
    pub const MUTE_NO_SLEW_ALG_3_0MUTE: u16 = 451;
    pub const MUTE_NO_SLEW_ALG_9_4MUTE: u16 = 452;
    pub const MUTE_NO_SLEW_ALG_11_4MUTE: u16 = 453;
    pub const MUTE_NO_SLEW_ALG_9_2MUTE: u16 = 454;
    pub const MUTE_NO_SLEW_ALG_5_2MUTE: u16 = 455;
    pub const MUTE_NO_SLEW_ALG_3_4MUTE: u16 = 456;
    pub const MUTE_NO_SLEW_ALG_8_8MUTE: u16 = 457;
    pub const MUTE_NO_SLEW_ALG_10_6MUTE: u16 = 458;
    pub const MUTE_NO_SLEW_ALG_8_2MUTE: u16 = 459;
    pub const MUTE_NO_SLEW_ALG_10_5MUTE: u16 = 460;
    pub const MUTE_NO_SLEW_ALG_10_4MUTE: u16 = 461;
    pub const MUTE_NO_SLEW_ALG_8_6MUTE: u16 = 462;
    pub const MUTE_NO_SLEW_ALG_9_0MUTE: u16 = 463;
    pub const MUTE_NO_SLEW_ALG_11_2MUTE: u16 = 464;
    pub const MUTE_NO_SLEW_ALG_1_1MUTE: u16 = 465;
    pub const MUTE_NO_SLEW_ALG_11_6MUTE: u16 = 466;
    pub const MUTE_NO_SLEW_ALG_3_1MUTE: u16 = 467;
    pub const MUTE_NO_SLEW_ALG_4_4MUTE: u16 = 468;
    pub const MUTE_NO_SLEW_ALG_6_0MUTE: u16 = 469;
    pub const MUTE_NO_SLEW_ALG_9_1MUTE: u16 = 470;
    pub const MUTE_NO_SLEW_ALG_2_6MUTE: u16 = 471;
    pub const MUTE_NO_SLEW_ALG_9_6MUTE: u16 = 472;
    pub const MUTE_NO_SLEW_ALG_8_9MUTE: u16 = 473;
    pub const MUTE_NO_SLEW_ALG_5_4MUTE: u16 = 474;
    pub const MUTE_NO_SLEW_ALG_9_7MUTE: u16 = 475;
    pub const MUTE_NO_SLEW_ALG_11_7MUTE: u16 = 476;
    pub const MUTE_NO_SLEW_ALG_4_1MUTE: u16 = 477;
    pub const MUTE_NO_SLEW_ALG_11_9MUTE: u16 = 478;
    pub const MUTE_NO_SLEW_ALG_12_0MUTE: u16 = 479;
    pub const MUTE_NO_SLEW_ALG_11_5MUTE: u16 = 480;
    pub const MUTE_NO_SLEW_ALG_10_0MUTE: u16 = 481;
    pub const MUTE_NO_SLEW_ALG_8_1MUTE: u16 = 482;
    pub const MUTE_NO_SLEW_ALG_4_3MUTE: u16 = 483;
    pub const SINGLE_CTRL_MIXER_NEW19405: u16 = 484;
    pub const SINGLE_CTRL_MIXER_NEW19407: u16 = 485;
    pub const SINGLE_CTRL_MIXER_NEW19408: u16 = 486;
    pub const SINGLE_CTRL_MIXER_NEW19402: u16 = 487;
    pub const SINGLE_CTRL_MIXER_NEW19404: u16 = 488;
    pub const SINGLE_CTRL_MIXER_NEW19406: u16 = 489;
    pub const SINGLE_CTRL_MIXER_NEW19403: u16 = 490;
    pub const SINGLE_CTRL_MIXER_NEW194010: u16 = 491;
    pub const SINGLE_CTRL_MIXER_NEW19401: u16 = 492;
    pub const SINGLE_CTRL_MIXER_NEW19409: u16 = 493;
    pub const BPF_1_1: u16 = 494;
    pub const BPF_1_5: u16 = 514;
    pub const BPF_2_1: u16 = 534;
    pub const BPF_2_5: u16 = 554;
    pub const BPF_3_1: u16 = 574;
    pub const BPF_3_5: u16 = 594;
    pub const BPF_4_1: u16 = 614;
    pub const BPF_4_5: u16 = 634;
    pub const BPF_5_1: u16 = 654;
    pub const BPF_5_5: u16 = 674;
    pub const BPF_6_1: u16 = 694;
    pub const BPF_6_5: u16 = 714;
    pub const BPF_7_1: u16 = 734;
    pub const BPF_7_5: u16 = 754;
    pub const BPF_8_1: u16 = 774;
    pub const BPF_8_5: u16 = 794;
    pub const BPF_9_1: u16 = 814;
    pub const BPF_9_5: u16 = 834;
    pub const BPF_10_1: u16 = 854;
    pub const BPF_10_5: u16 = 874;
    pub const PEQ_2_1: u16 = 894;
    pub const PEQ_2_2: u16 = 899;
    pub const PEQ_2_3: u16 = 904;
    pub const PEQ_2_4: u16 = 909;
    pub const PEQ_2_5: u16 = 914;
    pub const PEQ_2_6: u16 = 919;
    pub const PEQ_3_1: u16 = 924;
    pub const PEQ_3_2: u16 = 929;
    pub const PEQ_3_3: u16 = 934;
    pub const PEQ_3_4: u16 = 939;
    pub const PEQ_3_5: u16 = 944;
    pub const PEQ_3_6: u16 = 949;
    pub const PEQ_5_1: u16 = 954;
    pub const PEQ_5_2: u16 = 959;
    pub const PEQ_5_3: u16 = 964;
    pub const PEQ_5_4: u16 = 969;
    pub const PEQ_5_5: u16 = 974;
    pub const PEQ_5_6: u16 = 979;
    pub const PEQ_6_1: u16 = 984;
    pub const PEQ_6_2: u16 = 989;
    pub const PEQ_6_3: u16 = 994;
    pub const PEQ_6_4: u16 = 999;
    pub const PEQ_6_5: u16 = 1004;
    pub const PEQ_6_6: u16 = 1009;
    pub const PEQ_7_1: u16 = 1014;
    pub const PEQ_7_2: u16 = 1019;
    pub const PEQ_7_3: u16 = 1024;
    pub const PEQ_7_4: u16 = 1029;
    pub const PEQ_7_5: u16 = 1034;
    pub const PEQ_7_6: u16 = 1039;
    pub const PEQ_8_1: u16 = 1044;
    pub const PEQ_8_2: u16 = 1049;
    pub const PEQ_8_3: u16 = 1054;
    pub const PEQ_8_4: u16 = 1059;
    pub const PEQ_8_5: u16 = 1064;
    pub const PEQ_8_6: u16 = 1069;
    pub const PEQ_9_1: u16 = 1074;
    pub const PEQ_9_2: u16 = 1079;
    pub const PEQ_9_3: u16 = 1084;
    pub const PEQ_9_4: u16 = 1089;
    pub const PEQ_9_5: u16 = 1094;
    pub const PEQ_9_6: u16 = 1099;
    pub const PEQ_10_1: u16 = 1104;
    pub const PEQ_10_2: u16 = 1109;
    pub const PEQ_10_3: u16 = 1114;
    pub const PEQ_10_4: u16 = 1119;
    pub const PEQ_10_5: u16 = 1124;
    pub const PEQ_10_6: u16 = 1129;
    pub const PEQ_1_1: u16 = 1134;
    pub const PEQ_1_2: u16 = 1139;
    pub const PEQ_1_3: u16 = 1144;
    pub const PEQ_1_4: u16 = 1149;
    pub const PEQ_1_5: u16 = 1154;
    pub const PEQ_1_6: u16 = 1159;
    pub const PEQ_4_1: u16 = 1164;
    pub const PEQ_4_2: u16 = 1169;
    pub const PEQ_4_3: u16 = 1174;
    pub const PEQ_4_4: u16 = 1179;
    pub const PEQ_4_5: u16 = 1184;
    pub const PEQ_4_6: u16 = 1189;
    pub const MULT_CTRL_DEL_GROW_ALG_1: u16 = 1194;
    pub const MULT_CTRL_DEL_GROW_ALG_3: u16 = 1195;
    pub const MULT_CTRL_DEL_GROW_ALG_4: u16 = 1196;
    pub const MULT_CTRL_DEL_GROW_ALG_5: u16 = 1197;
    pub const MULT_CTRL_DEL_GROW_ALG_6: u16 = 1198;
    pub const MULT_CTRL_DEL_GROW_ALG_7: u16 = 1199;
    pub const MULT_CTRL_DEL_GROW_ALG_8: u16 = 1200;
    pub const MULT_CTRL_DEL_GROW_ALG_9: u16 = 1201;
    pub const MULT_CTRL_DEL_GROW_ALG_10: u16 = 1202;
    pub const MULT_CTRL_DEL_GROW_ALG_2: u16 = 1203;
    pub const EQ1940_INVERT_1GAIN: u16 = 1204;
    pub const EQ1940_INVERT_1_0GAIN: u16 = 1205;
    pub const EQ1940_INVERT_9GAIN: u16 = 1206;
    pub const EQ1940_INVERT_8GAIN: u16 = 1207;
    pub const EQ1940_INVERT_7GAIN: u16 = 1208;
    pub const EQ1940_INVERT_6GAIN: u16 = 1209;
    pub const EQ1940_INVERT_5GAIN: u16 = 1210;
    pub const EQ1940_INVERT_4GAIN: u16 = 1211;
    pub const EQ1940_INVERT_2GAIN: u16 = 1212;
    pub const EQ1940_INVERT_3GAIN: u16 = 1213;
    pub const MUTE_NO_SLEW_ALG_1MUTE: u16 = 1214;
    pub const MUTE_NO_SLEW_ALG_2MUTE: u16 = 1215;
    pub const MUTE_NO_SLEW_ALG_3MUTE: u16 = 1216;
    pub const MUTE_NO_SLEW_ALG_5MUTE: u16 = 1217;
    pub const MUTE_NO_SLEW_ALG_6MUTE: u16 = 1218;
    pub const MUTE_NO_SLEW_ALG_7MUTE: u16 = 1219;
    pub const MUTE_NO_SLEW_ALG_8MUTE: u16 = 1220;
    pub const MUTE_NO_SLEW_ALG_9MUTE: u16 = 1221;
    pub const MUTE_NO_SLEW_ALG_1_0MUTE: u16 = 1222;
    pub const MUTE_NO_SLEW_ALG_4MUTE: u16 = 1223;
    pub const GAIN_1940_ALG_NS1: u16 = 1224;
    pub const GAIN_1940_ALG_NS2: u16 = 1225;
    pub const GAIN_1940_ALG_NS4: u16 = 1226;
    pub const GAIN_1940_ALG_NS5: u16 = 1227;
    pub const GAIN_1940_ALG_NS6: u16 = 1228;
    pub const GAIN_1940_ALG_NS7: u16 = 1229;
    pub const GAIN_1940_ALG_NS8: u16 = 1230;
    pub const GAIN_1940_ALG_NS9: u16 = 1231;
    pub const GAIN_1940_ALG_NS10: u16 = 1232;
    pub const GAIN_1940_ALG_NS3: u16 = 1233;
    pub const EXT_SW_GAIN_DB_1STEP: u16 = 1234;
    pub const COMP_1RMS: u16 = 1269;
    pub const COMP_1HOLD: u16 = 1270;
    pub const COMP_1DECAY: u16 = 1271;
    pub const COMP_2RMS: u16 = 1306;
    pub const COMP_2HOLD: u16 = 1307;
    pub const COMP_2DECAY: u16 = 1308;
    pub const COMP_3RMS: u16 = 1343;
    pub const COMP_3HOLD: u16 = 1344;
    pub const COMP_3DECAY: u16 = 1345;
    pub const COMP_4RMS: u16 = 1380;
    pub const COMP_4HOLD: u16 = 1381;
    pub const COMP_4DECAY: u16 = 1382;
    pub const COMP_5RMS: u16 = 1417;
    pub const COMP_5HOLD: u16 = 1418;
    pub const COMP_5DECAY: u16 = 1419;
    pub const COMP_6RMS: u16 = 1454;
    pub const COMP_6HOLD: u16 = 1455;
    pub const COMP_6DECAY: u16 = 1456;
    pub const COMP_7RMS: u16 = 1491;
    pub const COMP_7HOLD: u16 = 1492;
    pub const COMP_7DECAY: u16 = 1493;
    pub const COMP_8RMS: u16 = 1528;
    pub const COMP_8HOLD: u16 = 1529;
    pub const COMP_8DECAY: u16 = 1530;
    pub const COMP_9RMS: u16 = 1565;
    pub const COMP_9HOLD: u16 = 1566;
    pub const COMP_9DECAY: u16 = 1567;
    pub const COMP_10RMS: u16 = 1602;
    pub const COMP_1_0HOLD: u16 = 1603;
    pub const COMP_1_0DECAY: u16 = 1604;
    pub const STEREOMUX_194_0NS_10: u16 = 1605;
    pub const STEREOMUX_194_0NS_11: u16 = 1606;
    pub const STEREOMUX_194_0NS_12: u16 = 1607;
    pub const STEREOMUX_194_0NS_13: u16 = 1608;
    pub const STEREOMUX_194_0NS_14: u16 = 1609;
    pub const STEREOMUX_194_0NS_15: u16 = 1610;
    pub const STEREOMUX_194_0NS_16: u16 = 1611;
    pub const STEREOMUX_194_0NS_17: u16 = 1612;
    pub const STEREOMUX_194_0NS_18: u16 = 1613;
    pub const STEREOMUX_194_0NS_19: u16 = 1614;
    pub const MONO_ENVELOPE_PEAK_ALG_2HOLD: u16 = 1615;
    pub const MONO_ENVELOPE_PEAK_ALG_2DECAY: u16 = 1616;
    pub const MONO_ENVELOPE_PEAK_ALG_3HOLD: u16 = 1617;
    pub const MONO_ENVELOPE_PEAK_ALG_3DECAY: u16 = 1618;
    pub const READ_BACK_ALG_SIGMA_2001: u16 = 1619;
    pub const READ_BACK_ALG_SIGMA_2004: u16 = 1620;
    #[cfg(feature = "symbols")]
    pub const SYMBOLS: &[(&str, u16)] = &[
        ("NON_MOD_RAM_ALLOC", NON_MOD_RAM_ALLOC),
        ("DC_INP_ALG_1", DC_INP_ALG_1),
        ("DC_INP_ALG_2", DC_INP_ALG_2),
        ("DC_INP_ALG_4", DC_INP_ALG_4),
        ("GAIN_1940_ALG_NS11", GAIN_1940_ALG_NS11),
        ("GAIN_1940_ALG_NS12", GAIN_1940_ALG_NS12),
        ("GAIN_1940_ALG_NS13", GAIN_1940_ALG_NS13),
        ("GAIN_1940_ALG_NS14", GAIN_1940_ALG_NS14),
        ("GAIN_1940_ALG_NS15", GAIN_1940_ALG_NS15),
        ("GAIN_1940_ALG_NS16", GAIN_1940_ALG_NS16),
        ("GAIN_1940_ALG_NS17", GAIN_1940_ALG_NS17),
        ("GAIN_1940_ALG_NS18", GAIN_1940_ALG_NS18),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_0",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_0,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_1",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_1,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_2",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_2,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_3",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_3,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_4",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_4,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_5",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_5,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_6",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_6,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_7",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_7,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_8",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_8,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_9",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_9,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_10",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_10,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_11",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_11,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_12",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_12,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_13",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_13,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_14",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_14,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_15",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_15,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_16",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_16,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_17",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_17,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_18",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_18,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_19",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_19,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_20",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_20,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_21",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_21,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_22",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_22,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_23",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_23,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_24",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_24,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_25",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_25,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_26",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_26,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_27",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_27,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_28",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_28,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_29",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_29,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_30",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_30,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_31",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_31,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_32",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_32,
        ),
        (
            "MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_33",
            MONO_NO_POST_GAIN_NO_HOLD_NO_DELAY_1_33,
        ),
        ("COMP_NO_HOLD_NO_DELAY_1RMS", COMP_NO_HOLD_NO_DELAY_1RMS),
        ("GAIN_1940_ALG_NS19", GAIN_1940_ALG_NS19),
        ("GAIN_1940_ALG_NS20", GAIN_1940_ALG_NS20),
        ("MONOMUX_194_0NS_3_0", MONOMUX_194_0NS_3_0),
        ("MONOMUX_194_0NS_3_1", MONOMUX_194_0NS_3_1),
        ("MONOMUX_194_0NS_3_2", MONOMUX_194_0NS_3_2),
        ("MUTE_NO_SLEW_ALG_7_1MUTE", MUTE_NO_SLEW_ALG_7_1MUTE),
        ("MUTE_NO_SLEW_ALG_7_2MUTE", MUTE_NO_SLEW_ALG_7_2MUTE),
        ("MUTE_NO_SLEW_ALG_7_3MUTE", MUTE_NO_SLEW_ALG_7_3MUTE),
        ("MUTE_NO_SLEW_ALG_7_4MUTE", MUTE_NO_SLEW_ALG_7_4MUTE),
        ("MUTE_NO_SLEW_ALG_7_5MUTE", MUTE_NO_SLEW_ALG_7_5MUTE),
        ("MUTE_NO_SLEW_ALG_7_6MUTE", MUTE_NO_SLEW_ALG_7_6MUTE),
        ("MUTE_NO_SLEW_ALG_7_7MUTE", MUTE_NO_SLEW_ALG_7_7MUTE),
        ("MUTE_NO_SLEW_ALG_7_8MUTE", MUTE_NO_SLEW_ALG_7_8MUTE),
        ("MUTE_NO_SLEW_ALG_7_9MUTE", MUTE_NO_SLEW_ALG_7_9MUTE),
        ("MUTE_NO_SLEW_ALG_8_0MUTE", MUTE_NO_SLEW_ALG_8_0MUTE),
        ("MONOMUX_194_0NS_5_0", MONOMUX_194_0NS_5_0),
        ("MONOMUX_194_0NS_5_1", MONOMUX_194_0NS_5_1),
        ("MONOMUX_194_0NS_2_0", MONOMUX_194_0NS_2_0),
        ("MONOMUX_194_0NS_2_1", MONOMUX_194_0NS_2_1),
        ("MONOMUX_194_0NS_2_2", MONOMUX_194_0NS_2_2),
        ("MONOMUX_194_0NS_2_3", MONOMUX_194_0NS_2_3),
        ("MONOMUX_194_0NS_2_4", MONOMUX_194_0NS_2_4),
        ("MONOMUX_194_0NS_2_5", MONOMUX_194_0NS_2_5),
        ("MONOMUX_194_0NS_2_6", MONOMUX_194_0NS_2_6),
        ("MONOMUX_194_0NS_2_7", MONOMUX_194_0NS_2_7),
        ("MONOMUX_194_0NS_2_8", MONOMUX_194_0NS_2_8),
        ("MONOMUX_194_0NS_2_9", MONOMUX_194_0NS_2_9),
        ("PEQ_11_1", PEQ_11_1),
        ("PEQ_11_2", PEQ_11_2),
        ("PEQ_11_3", PEQ_11_3),
        ("PEQ_11_4", PEQ_11_4),
        ("PEQ_11_5", PEQ_11_5),
        ("PEQ_11_6", PEQ_11_6),
        ("PEQ_12_1", PEQ_12_1),
        ("PEQ_12_2", PEQ_12_2),
        ("PEQ_12_3", PEQ_12_3),
        ("PEQ_12_4", PEQ_12_4),
        ("PEQ_12_5", PEQ_12_5),
        ("PEQ_12_6", PEQ_12_6),
        ("PEQ_13_1", PEQ_13_1),
        ("PEQ_13_2", PEQ_13_2),
        ("PEQ_13_3", PEQ_13_3),
        ("PEQ_13_4", PEQ_13_4),
        ("PEQ_13_5", PEQ_13_5),
        ("PEQ_13_6", PEQ_13_6),
        ("PEQ_14_1", PEQ_14_1),
        ("PEQ_14_2", PEQ_14_2),
        ("PEQ_14_3", PEQ_14_3),
        ("PEQ_14_4", PEQ_14_4),
        ("PEQ_14_5", PEQ_14_5),
        ("PEQ_14_6", PEQ_14_6),
        ("PEQ_15_1", PEQ_15_1),
        ("PEQ_15_2", PEQ_15_2),
        ("PEQ_15_3", PEQ_15_3),
        ("PEQ_15_4", PEQ_15_4),
        ("PEQ_15_5", PEQ_15_5),
        ("PEQ_15_6", PEQ_15_6),
        ("PEQ_16_1", PEQ_16_1),
        ("PEQ_16_2", PEQ_16_2),
        ("PEQ_16_3", PEQ_16_3),
        ("PEQ_16_4", PEQ_16_4),
        ("PEQ_16_5", PEQ_16_5),
        ("PEQ_16_6", PEQ_16_6),
        ("PEQ_17_1", PEQ_17_1),
        ("PEQ_17_2", PEQ_17_2),
        ("PEQ_17_3", PEQ_17_3),
        ("PEQ_17_4", PEQ_17_4),
        ("PEQ_17_5", PEQ_17_5),
        ("PEQ_17_6", PEQ_17_6),
        ("PEQ_18_1", PEQ_18_1),
        ("PEQ_18_2", PEQ_18_2),
        ("PEQ_18_3", PEQ_18_3),
        ("PEQ_18_4", PEQ_18_4),
        ("PEQ_18_5", PEQ_18_5),
        ("PEQ_18_6", PEQ_18_6),
        ("PEQ_19_1", PEQ_19_1),
        ("PEQ_19_2", PEQ_19_2),
        ("PEQ_19_3", PEQ_19_3),
        ("PEQ_19_4", PEQ_19_4),
        ("PEQ_19_5", PEQ_19_5),
        ("PEQ_19_6", PEQ_19_6),
        ("PEQ_20_1", PEQ_20_1),
        ("PEQ_20_2", PEQ_20_2),
        ("PEQ_20_3", PEQ_20_3),
        ("PEQ_20_4", PEQ_20_4),
        ("PEQ_20_5", PEQ_20_5),
        ("PEQ_20_6", PEQ_20_6),
        ("MONO_ENVELOPE_PEAK_ALG_1HOLD", MONO_ENVELOPE_PEAK_ALG_1HOLD),
        (
            "MONO_ENVELOPE_PEAK_ALG_1DECAY",
            MONO_ENVELOPE_PEAK_ALG_1DECAY,
        ),
        ("READ_BACK_ALG_SIGMA_2002", READ_BACK_ALG_SIGMA_2002),
        ("MUTE_NO_SLEW_ALG_6_8MUTE", MUTE_NO_SLEW_ALG_6_8MUTE),
        ("MUTE_NO_SLEW_ALG_11_0MUTE", MUTE_NO_SLEW_ALG_11_0MUTE),
        ("MUTE_NO_SLEW_ALG_9_8MUTE", MUTE_NO_SLEW_ALG_9_8MUTE),
        ("MUTE_NO_SLEW_ALG_1_9MUTE", MUTE_NO_SLEW_ALG_1_9MUTE),
        ("MUTE_NO_SLEW_ALG_2_7MUTE", MUTE_NO_SLEW_ALG_2_7MUTE),
        ("MUTE_NO_SLEW_ALG_5_8MUTE", MUTE_NO_SLEW_ALG_5_8MUTE),
        ("MUTE_NO_SLEW_ALG_3_7MUTE", MUTE_NO_SLEW_ALG_3_7MUTE),
        ("MUTE_NO_SLEW_ALG_4_2MUTE", MUTE_NO_SLEW_ALG_4_2MUTE),
        ("MUTE_NO_SLEW_ALG_2_4MUTE", MUTE_NO_SLEW_ALG_2_4MUTE),
        ("MUTE_NO_SLEW_ALG_3_6MUTE", MUTE_NO_SLEW_ALG_3_6MUTE),
        ("MUTE_NO_SLEW_ALG_3_2MUTE", MUTE_NO_SLEW_ALG_3_2MUTE),
        ("MUTE_NO_SLEW_ALG_5_3MUTE", MUTE_NO_SLEW_ALG_5_3MUTE),
        ("MUTE_NO_SLEW_ALG_7_0MUTE", MUTE_NO_SLEW_ALG_7_0MUTE),
        ("MUTE_NO_SLEW_ALG_5_6MUTE", MUTE_NO_SLEW_ALG_5_6MUTE),
        ("MUTE_NO_SLEW_ALG_9_9MUTE", MUTE_NO_SLEW_ALG_9_9MUTE),
        ("MUTE_NO_SLEW_ALG_1_2MUTE", MUTE_NO_SLEW_ALG_1_2MUTE),
        ("MUTE_NO_SLEW_ALG_6_6MUTE", MUTE_NO_SLEW_ALG_6_6MUTE),
        ("MUTE_NO_SLEW_ALG_6_2MUTE", MUTE_NO_SLEW_ALG_6_2MUTE),
        ("MUTE_NO_SLEW_ALG_4_7MUTE", MUTE_NO_SLEW_ALG_4_7MUTE),
        ("MUTE_NO_SLEW_ALG_9_5MUTE", MUTE_NO_SLEW_ALG_9_5MUTE),
        ("MUTE_NO_SLEW_ALG_2_5MUTE", MUTE_NO_SLEW_ALG_2_5MUTE),
        ("MUTE_NO_SLEW_ALG_3_9MUTE", MUTE_NO_SLEW_ALG_3_9MUTE),
        ("MUTE_NO_SLEW_ALG_10_1MUTE", MUTE_NO_SLEW_ALG_10_1MUTE),
        ("MUTE_NO_SLEW_ALG_4_9MUTE", MUTE_NO_SLEW_ALG_4_9MUTE),
        ("MUTE_NO_SLEW_ALG_8_4MUTE", MUTE_NO_SLEW_ALG_8_4MUTE),
        ("MUTE_NO_SLEW_ALG_10_9MUTE", MUTE_NO_SLEW_ALG_10_9MUTE),
        ("MUTE_NO_SLEW_ALG_2_0MUTE", MUTE_NO_SLEW_ALG_2_0MUTE),
        ("MUTE_NO_SLEW_ALG_4_8MUTE", MUTE_NO_SLEW_ALG_4_8MUTE),
        ("MUTE_NO_SLEW_ALG_2_1MUTE", MUTE_NO_SLEW_ALG_2_1MUTE),
        ("MUTE_NO_SLEW_ALG_8_5MUTE", MUTE_NO_SLEW_ALG_8_5MUTE),
        ("MUTE_NO_SLEW_ALG_9_3MUTE", MUTE_NO_SLEW_ALG_9_3MUTE),
        ("MUTE_NO_SLEW_ALG_6_5MUTE", MUTE_NO_SLEW_ALG_6_5MUTE),
        ("MUTE_NO_SLEW_ALG_8_3MUTE", MUTE_NO_SLEW_ALG_8_3MUTE),
        ("MUTE_NO_SLEW_ALG_10_2MUTE", MUTE_NO_SLEW_ALG_10_2MUTE),
        ("MUTE_NO_SLEW_ALG_10_8MUTE", MUTE_NO_SLEW_ALG_10_8MUTE),
        ("MUTE_NO_SLEW_ALG_2_2MUTE", MUTE_NO_SLEW_ALG_2_2MUTE),
        ("MUTE_NO_SLEW_ALG_2_8MUTE", MUTE_NO_SLEW_ALG_2_8MUTE),
        ("MUTE_NO_SLEW_ALG_1_8MUTE", MUTE_NO_SLEW_ALG_1_8MUTE),
        ("MUTE_NO_SLEW_ALG_1_3MUTE", MUTE_NO_SLEW_ALG_1_3MUTE),
        ("MUTE_NO_SLEW_ALG_6_4MUTE", MUTE_NO_SLEW_ALG_6_4MUTE),
        ("MUTE_NO_SLEW_ALG_4_5MUTE", MUTE_NO_SLEW_ALG_4_5MUTE),
        ("MUTE_NO_SLEW_ALG_5_0MUTE", MUTE_NO_SLEW_ALG_5_0MUTE),
        ("MUTE_NO_SLEW_ALG_2_3MUTE", MUTE_NO_SLEW_ALG_2_3MUTE),
        ("MUTE_NO_SLEW_ALG_6_9MUTE", MUTE_NO_SLEW_ALG_6_9MUTE),
        ("MUTE_NO_SLEW_ALG_5_9MUTE", MUTE_NO_SLEW_ALG_5_9MUTE),
        ("MUTE_NO_SLEW_ALG_5_1MUTE", MUTE_NO_SLEW_ALG_5_1MUTE),
        ("MUTE_NO_SLEW_ALG_5_7MUTE", MUTE_NO_SLEW_ALG_5_7MUTE),
        ("MUTE_NO_SLEW_ALG_6_7MUTE", MUTE_NO_SLEW_ALG_6_7MUTE),
        ("MUTE_NO_SLEW_ALG_6_3MUTE", MUTE_NO_SLEW_ALG_6_3MUTE),
        ("MUTE_NO_SLEW_ALG_1_7MUTE", MUTE_NO_SLEW_ALG_1_7MUTE),
        ("MUTE_NO_SLEW_ALG_1_6MUTE", MUTE_NO_SLEW_ALG_1_6MUTE),
        ("MUTE_NO_SLEW_ALG_3_8MUTE", MUTE_NO_SLEW_ALG_3_8MUTE),
        ("MUTE_NO_SLEW_ALG_3_3MUTE", MUTE_NO_SLEW_ALG_3_3MUTE),
        ("MUTE_NO_SLEW_ALG_5_5MUTE", MUTE_NO_SLEW_ALG_5_5MUTE),
        ("MUTE_NO_SLEW_ALG_11_1MUTE", MUTE_NO_SLEW_ALG_11_1MUTE),
        ("MUTE_NO_SLEW_ALG_1_4MUTE", MUTE_NO_SLEW_ALG_1_4MUTE),
        ("MUTE_NO_SLEW_ALG_3_5MUTE", MUTE_NO_SLEW_ALG_3_5MUTE),
        ("MUTE_NO_SLEW_ALG_10_7MUTE", MUTE_NO_SLEW_ALG_10_7MUTE),
        ("MUTE_NO_SLEW_ALG_8_7MUTE", MUTE_NO_SLEW_ALG_8_7MUTE),
        ("MUTE_NO_SLEW_ALG_2_9MUTE", MUTE_NO_SLEW_ALG_2_9MUTE),
        ("MUTE_NO_SLEW_ALG_1_5MUTE", MUTE_NO_SLEW_ALG_1_5MUTE),
        ("MUTE_NO_SLEW_ALG_4_6MUTE", MUTE_NO_SLEW_ALG_4_6MUTE),
        ("MUTE_NO_SLEW_ALG_10_3MUTE", MUTE_NO_SLEW_ALG_10_3MUTE),
        ("MUTE_NO_SLEW_ALG_11_8MUTE", MUTE_NO_SLEW_ALG_11_8MUTE),
        ("MUTE_NO_SLEW_ALG_6_1MUTE", MUTE_NO_SLEW_ALG_6_1MUTE),
        ("MUTE_NO_SLEW_ALG_11_3MUTE", MUTE_NO_SLEW_ALG_11_3MUTE),
        ("MUTE_NO_SLEW_ALG_4_0MUTE", MUTE_NO_SLEW_ALG_4_0MUTE),
        ("MUTE_NO_SLEW_ALG_3_0MUTE", MUTE_NO_SLEW_ALG_3_0MUTE),
        ("MUTE_NO_SLEW_ALG_9_4MUTE", MUTE_NO_SLEW_ALG_9_4MUTE),
        ("MUTE_NO_SLEW_ALG_11_4MUTE", MUTE_NO_SLEW_ALG_11_4MUTE),
        ("MUTE_NO_SLEW_ALG_9_2MUTE", MUTE_NO_SLEW_ALG_9_2MUTE),
        ("MUTE_NO_SLEW_ALG_5_2MUTE", MUTE_NO_SLEW_ALG_5_2MUTE),
        ("MUTE_NO_SLEW_ALG_3_4MUTE", MUTE_NO_SLEW_ALG_3_4MUTE),
        ("MUTE_NO_SLEW_ALG_8_8MUTE", MUTE_NO_SLEW_ALG_8_8MUTE),
        ("MUTE_NO_SLEW_ALG_10_6MUTE", MUTE_NO_SLEW_ALG_10_6MUTE),
        ("MUTE_NO_SLEW_ALG_8_2MUTE", MUTE_NO_SLEW_ALG_8_2MUTE),
        ("MUTE_NO_SLEW_ALG_10_5MUTE", MUTE_NO_SLEW_ALG_10_5MUTE),
        ("MUTE_NO_SLEW_ALG_10_4MUTE", MUTE_NO_SLEW_ALG_10_4MUTE),
        ("MUTE_NO_SLEW_ALG_8_6MUTE", MUTE_NO_SLEW_ALG_8_6MUTE),
        ("MUTE_NO_SLEW_ALG_9_0MUTE", MUTE_NO_SLEW_ALG_9_0MUTE),
        ("MUTE_NO_SLEW_ALG_11_2MUTE", MUTE_NO_SLEW_ALG_11_2MUTE),
        ("MUTE_NO_SLEW_ALG_1_1MUTE", MUTE_NO_SLEW_ALG_1_1MUTE),
        ("MUTE_NO_SLEW_ALG_11_6MUTE", MUTE_NO_SLEW_ALG_11_6MUTE),
        ("MUTE_NO_SLEW_ALG_3_1MUTE", MUTE_NO_SLEW_ALG_3_1MUTE),
        ("MUTE_NO_SLEW_ALG_4_4MUTE", MUTE_NO_SLEW_ALG_4_4MUTE),
        ("MUTE_NO_SLEW_ALG_6_0MUTE", MUTE_NO_SLEW_ALG_6_0MUTE),
        ("MUTE_NO_SLEW_ALG_9_1MUTE", MUTE_NO_SLEW_ALG_9_1MUTE),
        ("MUTE_NO_SLEW_ALG_2_6MUTE", MUTE_NO_SLEW_ALG_2_6MUTE),
        ("MUTE_NO_SLEW_ALG_9_6MUTE", MUTE_NO_SLEW_ALG_9_6MUTE),
        ("MUTE_NO_SLEW_ALG_8_9MUTE", MUTE_NO_SLEW_ALG_8_9MUTE),
        ("MUTE_NO_SLEW_ALG_5_4MUTE", MUTE_NO_SLEW_ALG_5_4MUTE),
        ("MUTE_NO_SLEW_ALG_9_7MUTE", MUTE_NO_SLEW_ALG_9_7MUTE),
        ("MUTE_NO_SLEW_ALG_11_7MUTE", MUTE_NO_SLEW_ALG_11_7MUTE),
        ("MUTE_NO_SLEW_ALG_4_1MUTE", MUTE_NO_SLEW_ALG_4_1MUTE),
        ("MUTE_NO_SLEW_ALG_11_9MUTE", MUTE_NO_SLEW_ALG_11_9MUTE),
        ("MUTE_NO_SLEW_ALG_12_0MUTE", MUTE_NO_SLEW_ALG_12_0MUTE),
        ("MUTE_NO_SLEW_ALG_11_5MUTE", MUTE_NO_SLEW_ALG_11_5MUTE),
        ("MUTE_NO_SLEW_ALG_10_0MUTE", MUTE_NO_SLEW_ALG_10_0MUTE),
        ("MUTE_NO_SLEW_ALG_8_1MUTE", MUTE_NO_SLEW_ALG_8_1MUTE),
        ("MUTE_NO_SLEW_ALG_4_3MUTE", MUTE_NO_SLEW_ALG_4_3MUTE),
        ("SINGLE_CTRL_MIXER_NEW19405", SINGLE_CTRL_MIXER_NEW19405),
        ("SINGLE_CTRL_MIXER_NEW19407", SINGLE_CTRL_MIXER_NEW19407),
        ("SINGLE_CTRL_MIXER_NEW19408", SINGLE_CTRL_MIXER_NEW19408),
        ("SINGLE_CTRL_MIXER_NEW19402", SINGLE_CTRL_MIXER_NEW19402),
        ("SINGLE_CTRL_MIXER_NEW19404", SINGLE_CTRL_MIXER_NEW19404),
        ("SINGLE_CTRL_MIXER_NEW19406", SINGLE_CTRL_MIXER_NEW19406),
        ("SINGLE_CTRL_MIXER_NEW19403", SINGLE_CTRL_MIXER_NEW19403),
        ("SINGLE_CTRL_MIXER_NEW194010", SINGLE_CTRL_MIXER_NEW194010),
        ("SINGLE_CTRL_MIXER_NEW19401", SINGLE_CTRL_MIXER_NEW19401),
        ("SINGLE_CTRL_MIXER_NEW19409", SINGLE_CTRL_MIXER_NEW19409),
        ("BPF_1_1", BPF_1_1),
        ("BPF_1_5", BPF_1_5),
        ("BPF_2_1", BPF_2_1),
        ("BPF_2_5", BPF_2_5),
        ("BPF_3_1", BPF_3_1),
        ("BPF_3_5", BPF_3_5),
        ("BPF_4_1", BPF_4_1),
        ("BPF_4_5", BPF_4_5),
        ("BPF_5_1", BPF_5_1),
        ("BPF_5_5", BPF_5_5),
        ("BPF_6_1", BPF_6_1),
        ("BPF_6_5", BPF_6_5),
        ("BPF_7_1", BPF_7_1),
        ("BPF_7_5", BPF_7_5),
        ("BPF_8_1", BPF_8_1),
        ("BPF_8_5", BPF_8_5),
        ("BPF_9_1", BPF_9_1),
        ("BPF_9_5", BPF_9_5),
        ("BPF_10_1", BPF_10_1),
        ("BPF_10_5", BPF_10_5),
        ("PEQ_2_1", PEQ_2_1),
        ("PEQ_2_2", PEQ_2_2),
        ("PEQ_2_3", PEQ_2_3),
        ("PEQ_2_4", PEQ_2_4),
        ("PEQ_2_5", PEQ_2_5),
        ("PEQ_2_6", PEQ_2_6),
        ("PEQ_3_1", PEQ_3_1),
        ("PEQ_3_2", PEQ_3_2),
        ("PEQ_3_3", PEQ_3_3),
        ("PEQ_3_4", PEQ_3_4),
        ("PEQ_3_5", PEQ_3_5),
        ("PEQ_3_6", PEQ_3_6),
        ("PEQ_5_1", PEQ_5_1),
        ("PEQ_5_2", PEQ_5_2),
        ("PEQ_5_3", PEQ_5_3),
        ("PEQ_5_4", PEQ_5_4),
        ("PEQ_5_5", PEQ_5_5),
        ("PEQ_5_6", PEQ_5_6),
        ("PEQ_6_1", PEQ_6_1),
        ("PEQ_6_2", PEQ_6_2),
        ("PEQ_6_3", PEQ_6_3),
        ("PEQ_6_4", PEQ_6_4),
        ("PEQ_6_5", PEQ_6_5),
        ("PEQ_6_6", PEQ_6_6),
        ("PEQ_7_1", PEQ_7_1),
        ("PEQ_7_2", PEQ_7_2),
        ("PEQ_7_3", PEQ_7_3),
        ("PEQ_7_4", PEQ_7_4),
        ("PEQ_7_5", PEQ_7_5),
        ("PEQ_7_6", PEQ_7_6),
        ("PEQ_8_1", PEQ_8_1),
        ("PEQ_8_2", PEQ_8_2),
        ("PEQ_8_3", PEQ_8_3),
        ("PEQ_8_4", PEQ_8_4),
        ("PEQ_8_5", PEQ_8_5),
        ("PEQ_8_6", PEQ_8_6),
        ("PEQ_9_1", PEQ_9_1),
        ("PEQ_9_2", PEQ_9_2),
        ("PEQ_9_3", PEQ_9_3),
        ("PEQ_9_4", PEQ_9_4),
        ("PEQ_9_5", PEQ_9_5),
        ("PEQ_9_6", PEQ_9_6),
        ("PEQ_10_1", PEQ_10_1),
        ("PEQ_10_2", PEQ_10_2),
        ("PEQ_10_3", PEQ_10_3),
        ("PEQ_10_4", PEQ_10_4),
        ("PEQ_10_5", PEQ_10_5),
        ("PEQ_10_6", PEQ_10_6),
        ("PEQ_1_1", PEQ_1_1),
        ("PEQ_1_2", PEQ_1_2),
        ("PEQ_1_3", PEQ_1_3),
        ("PEQ_1_4", PEQ_1_4),
        ("PEQ_1_5", PEQ_1_5),
        ("PEQ_1_6", PEQ_1_6),
        ("PEQ_4_1", PEQ_4_1),
        ("PEQ_4_2", PEQ_4_2),
        ("PEQ_4_3", PEQ_4_3),
        ("PEQ_4_4", PEQ_4_4),
        ("PEQ_4_5", PEQ_4_5),
        ("PEQ_4_6", PEQ_4_6),
        ("MULT_CTRL_DEL_GROW_ALG_1", MULT_CTRL_DEL_GROW_ALG_1),
        ("MULT_CTRL_DEL_GROW_ALG_3", MULT_CTRL_DEL_GROW_ALG_3),
        ("MULT_CTRL_DEL_GROW_ALG_4", MULT_CTRL_DEL_GROW_ALG_4),
        ("MULT_CTRL_DEL_GROW_ALG_5", MULT_CTRL_DEL_GROW_ALG_5),
        ("MULT_CTRL_DEL_GROW_ALG_6", MULT_CTRL_DEL_GROW_ALG_6),
        ("MULT_CTRL_DEL_GROW_ALG_7", MULT_CTRL_DEL_GROW_ALG_7),
        ("MULT_CTRL_DEL_GROW_ALG_8", MULT_CTRL_DEL_GROW_ALG_8),
        ("MULT_CTRL_DEL_GROW_ALG_9", MULT_CTRL_DEL_GROW_ALG_9),
        ("MULT_CTRL_DEL_GROW_ALG_10", MULT_CTRL_DEL_GROW_ALG_10),
        ("MULT_CTRL_DEL_GROW_ALG_2", MULT_CTRL_DEL_GROW_ALG_2),
        ("EQ1940_INVERT_1GAIN", EQ1940_INVERT_1GAIN),
        ("EQ1940_INVERT_1_0GAIN", EQ1940_INVERT_1_0GAIN),
        ("EQ1940_INVERT_9GAIN", EQ1940_INVERT_9GAIN),
        ("EQ1940_INVERT_8GAIN", EQ1940_INVERT_8GAIN),
        ("EQ1940_INVERT_7GAIN", EQ1940_INVERT_7GAIN),
        ("EQ1940_INVERT_6GAIN", EQ1940_INVERT_6GAIN),
        ("EQ1940_INVERT_5GAIN", EQ1940_INVERT_5GAIN),
        ("EQ1940_INVERT_4GAIN", EQ1940_INVERT_4GAIN),
        ("EQ1940_INVERT_2GAIN", EQ1940_INVERT_2GAIN),
        ("EQ1940_INVERT_3GAIN", EQ1940_INVERT_3GAIN),
        ("MUTE_NO_SLEW_ALG_1MUTE", MUTE_NO_SLEW_ALG_1MUTE),
        ("MUTE_NO_SLEW_ALG_2MUTE", MUTE_NO_SLEW_ALG_2MUTE),
        ("MUTE_NO_SLEW_ALG_3MUTE", MUTE_NO_SLEW_ALG_3MUTE),
        ("MUTE_NO_SLEW_ALG_5MUTE", MUTE_NO_SLEW_ALG_5MUTE),
        ("MUTE_NO_SLEW_ALG_6MUTE", MUTE_NO_SLEW_ALG_6MUTE),
        ("MUTE_NO_SLEW_ALG_7MUTE", MUTE_NO_SLEW_ALG_7MUTE),
        ("MUTE_NO_SLEW_ALG_8MUTE", MUTE_NO_SLEW_ALG_8MUTE),
        ("MUTE_NO_SLEW_ALG_9MUTE", MUTE_NO_SLEW_ALG_9MUTE),
        ("MUTE_NO_SLEW_ALG_1_0MUTE", MUTE_NO_SLEW_ALG_1_0MUTE),
        ("MUTE_NO_SLEW_ALG_4MUTE", MUTE_NO_SLEW_ALG_4MUTE),
        ("GAIN_1940_ALG_NS1", GAIN_1940_ALG_NS1),
        ("GAIN_1940_ALG_NS2", GAIN_1940_ALG_NS2),
        ("GAIN_1940_ALG_NS4", GAIN_1940_ALG_NS4),
        ("GAIN_1940_ALG_NS5", GAIN_1940_ALG_NS5),
        ("GAIN_1940_ALG_NS6", GAIN_1940_ALG_NS6),
        ("GAIN_1940_ALG_NS7", GAIN_1940_ALG_NS7),
        ("GAIN_1940_ALG_NS8", GAIN_1940_ALG_NS8),
        ("GAIN_1940_ALG_NS9", GAIN_1940_ALG_NS9),
        ("GAIN_1940_ALG_NS10", GAIN_1940_ALG_NS10),
        ("GAIN_1940_ALG_NS3", GAIN_1940_ALG_NS3),
        ("EXT_SW_GAIN_DB_1STEP", EXT_SW_GAIN_DB_1STEP),
        ("COMP_1RMS", COMP_1RMS),
        ("COMP_1HOLD", COMP_1HOLD),
        ("COMP_1DECAY", COMP_1DECAY),
        ("COMP_2RMS", COMP_2RMS),
        ("COMP_2HOLD", COMP_2HOLD),
        ("COMP_2DECAY", COMP_2DECAY),
        ("COMP_3RMS", COMP_3RMS),
        ("COMP_3HOLD", COMP_3HOLD),
        ("COMP_3DECAY", COMP_3DECAY),
        ("COMP_4RMS", COMP_4RMS),
        ("COMP_4HOLD", COMP_4HOLD),
        ("COMP_4DECAY", COMP_4DECAY),
        ("COMP_5RMS", COMP_5RMS),
        ("COMP_5HOLD", COMP_5HOLD),
        ("COMP_5DECAY", COMP_5DECAY),
        ("COMP_6RMS", COMP_6RMS),
        ("COMP_6HOLD", COMP_6HOLD),
        ("COMP_6DECAY", COMP_6DECAY),
        ("COMP_7RMS", COMP_7RMS),
        ("COMP_7HOLD", COMP_7HOLD),
        ("COMP_7DECAY", COMP_7DECAY),
        ("COMP_8RMS", COMP_8RMS),
        ("COMP_8HOLD", COMP_8HOLD),
        ("COMP_8DECAY", COMP_8DECAY),
        ("COMP_9RMS", COMP_9RMS),
        ("COMP_9HOLD", COMP_9HOLD),
        ("COMP_9DECAY", COMP_9DECAY),
        ("COMP_10RMS", COMP_10RMS),
        ("COMP_1_0HOLD", COMP_1_0HOLD),
        ("COMP_1_0DECAY", COMP_1_0DECAY),
        ("STEREOMUX_194_0NS_10", STEREOMUX_194_0NS_10),
        ("STEREOMUX_194_0NS_11", STEREOMUX_194_0NS_11),
        ("STEREOMUX_194_0NS_12", STEREOMUX_194_0NS_12),
        ("STEREOMUX_194_0NS_13", STEREOMUX_194_0NS_13),
        ("STEREOMUX_194_0NS_14", STEREOMUX_194_0NS_14),
        ("STEREOMUX_194_0NS_15", STEREOMUX_194_0NS_15),
        ("STEREOMUX_194_0NS_16", STEREOMUX_194_0NS_16),
        ("STEREOMUX_194_0NS_17", STEREOMUX_194_0NS_17),
        ("STEREOMUX_194_0NS_18", STEREOMUX_194_0NS_18),
        ("STEREOMUX_194_0NS_19", STEREOMUX_194_0NS_19),
        ("MONO_ENVELOPE_PEAK_ALG_2HOLD", MONO_ENVELOPE_PEAK_ALG_2HOLD),
        (
            "MONO_ENVELOPE_PEAK_ALG_2DECAY",
            MONO_ENVELOPE_PEAK_ALG_2DECAY,
        ),
        ("MONO_ENVELOPE_PEAK_ALG_3HOLD", MONO_ENVELOPE_PEAK_ALG_3HOLD),
        (
            "MONO_ENVELOPE_PEAK_ALG_3DECAY",
            MONO_ENVELOPE_PEAK_ALG_3DECAY,
        ),
        ("READ_BACK_ALG_SIGMA_2001", READ_BACK_ALG_SIGMA_2001),
        ("READ_BACK_ALG_SIGMA_2004", READ_BACK_ALG_SIGMA_2004),
    ];
}
#[allow(unused_imports)]
use sym::*;
pub const DEVICE: Device = Device {
    product_name: "MiniDSP 10x10HD",
    sources: &[Toslink, Spdif],
    inputs: &[
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_1MUTE,
                gain: Some(GAIN_1940_ALG_NS11),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_1MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_1MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_11_5, PEQ_11_4, PEQ_11_3, PEQ_11_2, PEQ_11_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_2MUTE,
                gain: Some(GAIN_1940_ALG_NS12),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_2MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_2MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_12_5, PEQ_12_4, PEQ_12_3, PEQ_12_2, PEQ_12_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_3MUTE,
                gain: Some(GAIN_1940_ALG_NS13),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_3MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_3MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_13_5, PEQ_13_4, PEQ_13_3, PEQ_13_2, PEQ_13_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_4MUTE,
                gain: Some(GAIN_1940_ALG_NS14),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_4MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_4MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_14_5, PEQ_14_4, PEQ_14_3, PEQ_14_2, PEQ_14_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_5MUTE,
                gain: Some(GAIN_1940_ALG_NS15),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_5MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_5MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_15_5, PEQ_15_4, PEQ_15_3, PEQ_15_2, PEQ_15_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_6MUTE,
                gain: Some(GAIN_1940_ALG_NS16),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_6MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_6MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_16_5, PEQ_16_4, PEQ_16_3, PEQ_16_2, PEQ_16_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_7MUTE,
                gain: Some(GAIN_1940_ALG_NS17),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_7MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_7MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_17_5, PEQ_17_4, PEQ_17_3, PEQ_17_2, PEQ_17_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_8MUTE,
                gain: Some(GAIN_1940_ALG_NS18),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_8MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_8MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_18_5, PEQ_18_4, PEQ_18_3, PEQ_18_2, PEQ_18_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_7_9MUTE,
                gain: Some(GAIN_1940_ALG_NS19),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_1_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_8_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_9MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_9MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_19_5, PEQ_19_4, PEQ_19_3, PEQ_19_2, PEQ_19_1],
        },
        Input {
            gate: Some(Gate {
                enable: MUTE_NO_SLEW_ALG_8_0MUTE,
                gain: Some(GAIN_1940_ALG_NS20),
            }),
            meter: None,
            routing: &[
                Gate {
                    enable: MUTE_NO_SLEW_ALG_2_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_3_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_4_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_5_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_6_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_7_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_9_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_10_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_11_0MUTE,
                    gain: None,
                },
                Gate {
                    enable: MUTE_NO_SLEW_ALG_12_0MUTE,
                    gain: None,
                },
            ],
            peq: &[PEQ_20_5, PEQ_20_4, PEQ_20_3, PEQ_20_2, PEQ_20_1],
        },
    ],
    outputs: &[
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_1MUTE,
                gain: Some(GAIN_1940_ALG_NS1),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_1),
            invert_addr: EQ1940_INVERT_1GAIN,
            peq: &[PEQ_1_5, PEQ_1_4, PEQ_1_3, PEQ_1_2, PEQ_1_1],
            xover: Some(Crossover {
                peqs: &[BPF_1_1, BPF_1_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_2MUTE,
                gain: Some(GAIN_1940_ALG_NS2),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_2),
            invert_addr: EQ1940_INVERT_2GAIN,
            peq: &[PEQ_2_5, PEQ_2_4, PEQ_2_3, PEQ_2_2, PEQ_2_1],
            xover: Some(Crossover {
                peqs: &[BPF_2_1, BPF_2_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_3MUTE,
                gain: Some(GAIN_1940_ALG_NS3),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_3),
            invert_addr: EQ1940_INVERT_3GAIN,
            peq: &[PEQ_3_5, PEQ_3_4, PEQ_3_3, PEQ_3_2, PEQ_3_1],
            xover: Some(Crossover {
                peqs: &[BPF_3_1, BPF_3_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_4MUTE,
                gain: Some(GAIN_1940_ALG_NS4),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_4),
            invert_addr: EQ1940_INVERT_4GAIN,
            peq: &[PEQ_4_5, PEQ_4_4, PEQ_4_3, PEQ_4_2, PEQ_4_1],
            xover: Some(Crossover {
                peqs: &[BPF_4_1, BPF_4_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_5MUTE,
                gain: Some(GAIN_1940_ALG_NS5),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_5),
            invert_addr: EQ1940_INVERT_5GAIN,
            peq: &[PEQ_5_5, PEQ_5_4, PEQ_5_3, PEQ_5_2, PEQ_5_1],
            xover: Some(Crossover {
                peqs: &[BPF_5_1, BPF_5_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_6MUTE,
                gain: Some(GAIN_1940_ALG_NS6),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_6),
            invert_addr: EQ1940_INVERT_6GAIN,
            peq: &[PEQ_6_5, PEQ_6_4, PEQ_6_3, PEQ_6_2, PEQ_6_1],
            xover: Some(Crossover {
                peqs: &[BPF_6_1, BPF_6_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_7MUTE,
                gain: Some(GAIN_1940_ALG_NS7),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_7),
            invert_addr: EQ1940_INVERT_7GAIN,
            peq: &[PEQ_7_5, PEQ_7_4, PEQ_7_3, PEQ_7_2, PEQ_7_1],
            xover: Some(Crossover {
                peqs: &[BPF_7_1, BPF_7_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_8MUTE,
                gain: Some(GAIN_1940_ALG_NS8),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_8),
            invert_addr: EQ1940_INVERT_8GAIN,
            peq: &[PEQ_8_5, PEQ_8_4, PEQ_8_3, PEQ_8_2, PEQ_8_1],
            xover: Some(Crossover {
                peqs: &[BPF_8_1, BPF_8_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_9MUTE,
                gain: Some(GAIN_1940_ALG_NS9),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_9),
            invert_addr: EQ1940_INVERT_9GAIN,
            peq: &[PEQ_9_5, PEQ_9_4, PEQ_9_3, PEQ_9_2, PEQ_9_1],
            xover: Some(Crossover {
                peqs: &[BPF_9_1, BPF_9_5],
            }),
            compressor: None,
            fir: None,
        },
        Output {
            gate: Gate {
                enable: MUTE_NO_SLEW_ALG_1_0MUTE,
                gain: Some(GAIN_1940_ALG_NS10),
            },
            meter: None,
            delay_addr: Some(MULT_CTRL_DEL_GROW_ALG_10),
            invert_addr: EQ1940_INVERT_1_0GAIN,
            peq: &[PEQ_10_5, PEQ_10_4, PEQ_10_3, PEQ_10_2, PEQ_10_1],
            xover: Some(Crossover {
                peqs: &[BPF_10_1, BPF_10_5],
            }),
            compressor: None,
            fir: None,
        },
    ],
    fir_max_taps: 0,
    internal_sampling_rate: 96000,
    dialect: Dialect {
        addr_encoding: AddrEncoding::AddrLen2,
        float_encoding: FloatEncoding::FixedPoint,
    },
    #[cfg(feature = "symbols")]
    symbols: SYMBOLS,
};
